<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DptYo7IAAAAASUVORK5CYII=
</value>
  </data>
</root>