using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the TTongChiphi class.
	/// </summary>
    [Serializable]
	public partial class TTongChiphiCollection : ActiveList<TTongChiphi, TTongChiphiCollection>
	{	   
		public TTongChiphiCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TTongChiphiCollection</returns>
		public TTongChiphiCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TTongChiphi o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the T_TONG_CHIPHI table.
	/// </summary>
	[Serializable]
	public partial class TTongChiphi : ActiveRecord<TTongChiphi>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TTongChiphi()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TTongChiphi(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TTongChiphi(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TTongChiphi(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("T_TONG_CHIPHI", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "Id";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
				colvarPatientId.ColumnName = "Patient_ID";
				colvarPatientId.DataType = DbType.Int32;
				colvarPatientId.MaxLength = 0;
				colvarPatientId.AutoIncrement = false;
				colvarPatientId.IsNullable = true;
				colvarPatientId.IsPrimaryKey = false;
				colvarPatientId.IsForeignKey = false;
				colvarPatientId.IsReadOnly = false;
				colvarPatientId.DefaultSetting = @"";
				colvarPatientId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientId);
				
				TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
				colvarPatientCode.ColumnName = "Patient_Code";
				colvarPatientCode.DataType = DbType.String;
				colvarPatientCode.MaxLength = 50;
				colvarPatientCode.AutoIncrement = false;
				colvarPatientCode.IsNullable = true;
				colvarPatientCode.IsPrimaryKey = false;
				colvarPatientCode.IsForeignKey = false;
				colvarPatientCode.IsReadOnly = false;
				colvarPatientCode.DefaultSetting = @"";
				colvarPatientCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPatientCode);
				
				TableSchema.TableColumn colvarPaymentTypeId = new TableSchema.TableColumn(schema);
				colvarPaymentTypeId.ColumnName = "PaymentType_ID";
				colvarPaymentTypeId.DataType = DbType.Int32;
				colvarPaymentTypeId.MaxLength = 0;
				colvarPaymentTypeId.AutoIncrement = false;
				colvarPaymentTypeId.IsNullable = true;
				colvarPaymentTypeId.IsPrimaryKey = false;
				colvarPaymentTypeId.IsForeignKey = false;
				colvarPaymentTypeId.IsReadOnly = false;
				colvarPaymentTypeId.DefaultSetting = @"";
				colvarPaymentTypeId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentTypeId);
				
				TableSchema.TableColumn colvarIdDvu = new TableSchema.TableColumn(schema);
				colvarIdDvu.ColumnName = "ID_DVU";
				colvarIdDvu.DataType = DbType.Int32;
				colvarIdDvu.MaxLength = 0;
				colvarIdDvu.AutoIncrement = false;
				colvarIdDvu.IsNullable = true;
				colvarIdDvu.IsPrimaryKey = false;
				colvarIdDvu.IsForeignKey = false;
				colvarIdDvu.IsReadOnly = false;
				colvarIdDvu.DefaultSetting = @"";
				colvarIdDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDvu);
				
				TableSchema.TableColumn colvarTenDvu = new TableSchema.TableColumn(schema);
				colvarTenDvu.ColumnName = "TEN_DVU";
				colvarTenDvu.DataType = DbType.String;
				colvarTenDvu.MaxLength = 200;
				colvarTenDvu.AutoIncrement = false;
				colvarTenDvu.IsNullable = true;
				colvarTenDvu.IsPrimaryKey = false;
				colvarTenDvu.IsForeignKey = false;
				colvarTenDvu.IsReadOnly = false;
				colvarTenDvu.DefaultSetting = @"";
				colvarTenDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenDvu);
				
				TableSchema.TableColumn colvarDvt = new TableSchema.TableColumn(schema);
				colvarDvt.ColumnName = "DVT";
				colvarDvt.DataType = DbType.String;
				colvarDvt.MaxLength = 30;
				colvarDvt.AutoIncrement = false;
				colvarDvt.IsNullable = true;
				colvarDvt.IsPrimaryKey = false;
				colvarDvt.IsForeignKey = false;
				colvarDvt.IsReadOnly = false;
				colvarDvt.DefaultSetting = @"";
				colvarDvt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDvt);
				
				TableSchema.TableColumn colvarSoLuong = new TableSchema.TableColumn(schema);
				colvarSoLuong.ColumnName = "SO_LUONG";
				colvarSoLuong.DataType = DbType.Int32;
				colvarSoLuong.MaxLength = 0;
				colvarSoLuong.AutoIncrement = false;
				colvarSoLuong.IsNullable = true;
				colvarSoLuong.IsPrimaryKey = false;
				colvarSoLuong.IsForeignKey = false;
				colvarSoLuong.IsReadOnly = false;
				colvarSoLuong.DefaultSetting = @"";
				colvarSoLuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLuong);
				
				TableSchema.TableColumn colvarDonGia = new TableSchema.TableColumn(schema);
				colvarDonGia.ColumnName = "DON_GIA";
				colvarDonGia.DataType = DbType.Decimal;
				colvarDonGia.MaxLength = 0;
				colvarDonGia.AutoIncrement = false;
				colvarDonGia.IsNullable = true;
				colvarDonGia.IsPrimaryKey = false;
				colvarDonGia.IsForeignKey = false;
				colvarDonGia.IsReadOnly = false;
				colvarDonGia.DefaultSetting = @"";
				colvarDonGia.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDonGia);
				
				TableSchema.TableColumn colvarPhuThu = new TableSchema.TableColumn(schema);
				colvarPhuThu.ColumnName = "PHU_THU";
				colvarPhuThu.DataType = DbType.Decimal;
				colvarPhuThu.MaxLength = 0;
				colvarPhuThu.AutoIncrement = false;
				colvarPhuThu.IsNullable = true;
				colvarPhuThu.IsPrimaryKey = false;
				colvarPhuThu.IsForeignKey = false;
				colvarPhuThu.IsReadOnly = false;
				colvarPhuThu.DefaultSetting = @"";
				colvarPhuThu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPhuThu);
				
				TableSchema.TableColumn colvarBhct = new TableSchema.TableColumn(schema);
				colvarBhct.ColumnName = "BHCT";
				colvarBhct.DataType = DbType.Decimal;
				colvarBhct.MaxLength = 0;
				colvarBhct.AutoIncrement = false;
				colvarBhct.IsNullable = true;
				colvarBhct.IsPrimaryKey = false;
				colvarBhct.IsForeignKey = false;
				colvarBhct.IsReadOnly = false;
				colvarBhct.DefaultSetting = @"";
				colvarBhct.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBhct);
				
				TableSchema.TableColumn colvarBnct = new TableSchema.TableColumn(schema);
				colvarBnct.ColumnName = "BNCT";
				colvarBnct.DataType = DbType.Decimal;
				colvarBnct.MaxLength = 0;
				colvarBnct.AutoIncrement = false;
				colvarBnct.IsNullable = true;
				colvarBnct.IsPrimaryKey = false;
				colvarBnct.IsForeignKey = false;
				colvarBnct.IsReadOnly = false;
				colvarBnct.DefaultSetting = @"";
				colvarBnct.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBnct);
				
				TableSchema.TableColumn colvarIdPhieu = new TableSchema.TableColumn(schema);
				colvarIdPhieu.ColumnName = "ID_PHIEU";
				colvarIdPhieu.DataType = DbType.Int32;
				colvarIdPhieu.MaxLength = 0;
				colvarIdPhieu.AutoIncrement = false;
				colvarIdPhieu.IsNullable = true;
				colvarIdPhieu.IsPrimaryKey = false;
				colvarIdPhieu.IsForeignKey = false;
				colvarIdPhieu.IsReadOnly = false;
				colvarIdPhieu.DefaultSetting = @"";
				colvarIdPhieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieu);
				
				TableSchema.TableColumn colvarIdPhieuCt = new TableSchema.TableColumn(schema);
				colvarIdPhieuCt.ColumnName = "ID_PHIEU_CT";
				colvarIdPhieuCt.DataType = DbType.Int32;
				colvarIdPhieuCt.MaxLength = 0;
				colvarIdPhieuCt.AutoIncrement = false;
				colvarIdPhieuCt.IsNullable = true;
				colvarIdPhieuCt.IsPrimaryKey = false;
				colvarIdPhieuCt.IsForeignKey = false;
				colvarIdPhieuCt.IsReadOnly = false;
				colvarIdPhieuCt.DefaultSetting = @"";
				colvarIdPhieuCt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieuCt);
				
				TableSchema.TableColumn colvarIsPayment = new TableSchema.TableColumn(schema);
				colvarIsPayment.ColumnName = "IsPayment";
				colvarIsPayment.DataType = DbType.Int32;
				colvarIsPayment.MaxLength = 0;
				colvarIsPayment.AutoIncrement = false;
				colvarIsPayment.IsNullable = true;
				colvarIsPayment.IsPrimaryKey = false;
				colvarIsPayment.IsForeignKey = false;
				colvarIsPayment.IsReadOnly = false;
				colvarIsPayment.DefaultSetting = @"";
				colvarIsPayment.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIsPayment);
				
				TableSchema.TableColumn colvarPaymentStatus = new TableSchema.TableColumn(schema);
				colvarPaymentStatus.ColumnName = "Payment_Status";
				colvarPaymentStatus.DataType = DbType.Int32;
				colvarPaymentStatus.MaxLength = 0;
				colvarPaymentStatus.AutoIncrement = false;
				colvarPaymentStatus.IsNullable = false;
				colvarPaymentStatus.IsPrimaryKey = false;
				colvarPaymentStatus.IsForeignKey = false;
				colvarPaymentStatus.IsReadOnly = false;
				
						colvarPaymentStatus.DefaultSetting = @"((0))";
				colvarPaymentStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentStatus);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNgayDky = new TableSchema.TableColumn(schema);
				colvarNgayDky.ColumnName = "NGAY_DKY";
				colvarNgayDky.DataType = DbType.DateTime;
				colvarNgayDky.MaxLength = 0;
				colvarNgayDky.AutoIncrement = false;
				colvarNgayDky.IsNullable = true;
				colvarNgayDky.IsPrimaryKey = false;
				colvarNgayDky.IsForeignKey = false;
				colvarNgayDky.IsReadOnly = false;
				colvarNgayDky.DefaultSetting = @"";
				colvarNgayDky.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayDky);
				
				TableSchema.TableColumn colvarIdKhoa = new TableSchema.TableColumn(schema);
				colvarIdKhoa.ColumnName = "ID_KHOA";
				colvarIdKhoa.DataType = DbType.Int32;
				colvarIdKhoa.MaxLength = 0;
				colvarIdKhoa.AutoIncrement = false;
				colvarIdKhoa.IsNullable = true;
				colvarIdKhoa.IsPrimaryKey = false;
				colvarIdKhoa.IsForeignKey = false;
				colvarIdKhoa.IsReadOnly = false;
				colvarIdKhoa.DefaultSetting = @"";
				colvarIdKhoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoa);
				
				TableSchema.TableColumn colvarXacNhan = new TableSchema.TableColumn(schema);
				colvarXacNhan.ColumnName = "XAC_NHAN";
				colvarXacNhan.DataType = DbType.Int32;
				colvarXacNhan.MaxLength = 0;
				colvarXacNhan.AutoIncrement = false;
				colvarXacNhan.IsNullable = true;
				colvarXacNhan.IsPrimaryKey = false;
				colvarXacNhan.IsForeignKey = false;
				colvarXacNhan.IsReadOnly = false;
				
						colvarXacNhan.DefaultSetting = @"((0))";
				colvarXacNhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXacNhan);
				
				TableSchema.TableColumn colvarNoiTru = new TableSchema.TableColumn(schema);
				colvarNoiTru.ColumnName = "NOI_TRU";
				colvarNoiTru.DataType = DbType.Int32;
				colvarNoiTru.MaxLength = 0;
				colvarNoiTru.AutoIncrement = false;
				colvarNoiTru.IsNullable = true;
				colvarNoiTru.IsPrimaryKey = false;
				colvarNoiTru.IsForeignKey = false;
				colvarNoiTru.IsReadOnly = false;
				colvarNoiTru.DefaultSetting = @"";
				colvarNoiTru.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNoiTru);
				
				TableSchema.TableColumn colvarMaKieuDvu = new TableSchema.TableColumn(schema);
				colvarMaKieuDvu.ColumnName = "MA_KIEU_DVU";
				colvarMaKieuDvu.DataType = DbType.String;
				colvarMaKieuDvu.MaxLength = 50;
				colvarMaKieuDvu.AutoIncrement = false;
				colvarMaKieuDvu.IsNullable = true;
				colvarMaKieuDvu.IsPrimaryKey = false;
				colvarMaKieuDvu.IsForeignKey = false;
				colvarMaKieuDvu.IsReadOnly = false;
				colvarMaKieuDvu.DefaultSetting = @"";
				colvarMaKieuDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKieuDvu);
				
				TableSchema.TableColumn colvarIdGoiDvu = new TableSchema.TableColumn(schema);
				colvarIdGoiDvu.ColumnName = "ID_GOI_DVU";
				colvarIdGoiDvu.DataType = DbType.Int32;
				colvarIdGoiDvu.MaxLength = 0;
				colvarIdGoiDvu.AutoIncrement = false;
				colvarIdGoiDvu.IsNullable = true;
				colvarIdGoiDvu.IsPrimaryKey = false;
				colvarIdGoiDvu.IsForeignKey = false;
				colvarIdGoiDvu.IsReadOnly = false;
				colvarIdGoiDvu.DefaultSetting = @"";
				colvarIdGoiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdGoiDvu);
				
				TableSchema.TableColumn colvarMaKieuTtoan = new TableSchema.TableColumn(schema);
				colvarMaKieuTtoan.ColumnName = "MA_KIEU_TTOAN";
				colvarMaKieuTtoan.DataType = DbType.String;
				colvarMaKieuTtoan.MaxLength = 50;
				colvarMaKieuTtoan.AutoIncrement = false;
				colvarMaKieuTtoan.IsNullable = true;
				colvarMaKieuTtoan.IsPrimaryKey = false;
				colvarMaKieuTtoan.IsForeignKey = false;
				colvarMaKieuTtoan.IsReadOnly = false;
				colvarMaKieuTtoan.DefaultSetting = @"";
				colvarMaKieuTtoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKieuTtoan);
				
				TableSchema.TableColumn colvarPaymentDate = new TableSchema.TableColumn(schema);
				colvarPaymentDate.ColumnName = "Payment_Date";
				colvarPaymentDate.DataType = DbType.DateTime;
				colvarPaymentDate.MaxLength = 0;
				colvarPaymentDate.AutoIncrement = false;
				colvarPaymentDate.IsNullable = true;
				colvarPaymentDate.IsPrimaryKey = false;
				colvarPaymentDate.IsForeignKey = false;
				colvarPaymentDate.IsReadOnly = false;
				colvarPaymentDate.DefaultSetting = @"";
				colvarPaymentDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentDate);
				
				TableSchema.TableColumn colvarTrongGoi = new TableSchema.TableColumn(schema);
				colvarTrongGoi.ColumnName = "TRONG_GOI";
				colvarTrongGoi.DataType = DbType.Int32;
				colvarTrongGoi.MaxLength = 0;
				colvarTrongGoi.AutoIncrement = false;
				colvarTrongGoi.IsNullable = true;
				colvarTrongGoi.IsPrimaryKey = false;
				colvarTrongGoi.IsForeignKey = false;
				colvarTrongGoi.IsReadOnly = false;
				colvarTrongGoi.DefaultSetting = @"";
				colvarTrongGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrongGoi);
				
				TableSchema.TableColumn colvarIdLoaiDvu = new TableSchema.TableColumn(schema);
				colvarIdLoaiDvu.ColumnName = "ID_LOAI_DVU";
				colvarIdLoaiDvu.DataType = DbType.Int32;
				colvarIdLoaiDvu.MaxLength = 0;
				colvarIdLoaiDvu.AutoIncrement = false;
				colvarIdLoaiDvu.IsNullable = true;
				colvarIdLoaiDvu.IsPrimaryKey = false;
				colvarIdLoaiDvu.IsForeignKey = false;
				colvarIdLoaiDvu.IsReadOnly = false;
				colvarIdLoaiDvu.DefaultSetting = @"";
				colvarIdLoaiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdLoaiDvu);
				
				TableSchema.TableColumn colvarSoPhieuRavien = new TableSchema.TableColumn(schema);
				colvarSoPhieuRavien.ColumnName = "SO_PHIEU_RAVIEN";
				colvarSoPhieuRavien.DataType = DbType.Int32;
				colvarSoPhieuRavien.MaxLength = 0;
				colvarSoPhieuRavien.AutoIncrement = false;
				colvarSoPhieuRavien.IsNullable = true;
				colvarSoPhieuRavien.IsPrimaryKey = false;
				colvarSoPhieuRavien.IsForeignKey = false;
				colvarSoPhieuRavien.IsReadOnly = false;
				colvarSoPhieuRavien.DefaultSetting = @"";
				colvarSoPhieuRavien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoPhieuRavien);
				
				TableSchema.TableColumn colvarPaymentId = new TableSchema.TableColumn(schema);
				colvarPaymentId.ColumnName = "Payment_ID";
				colvarPaymentId.DataType = DbType.Int32;
				colvarPaymentId.MaxLength = 0;
				colvarPaymentId.AutoIncrement = false;
				colvarPaymentId.IsNullable = true;
				colvarPaymentId.IsPrimaryKey = false;
				colvarPaymentId.IsForeignKey = false;
				colvarPaymentId.IsReadOnly = false;
				colvarPaymentId.DefaultSetting = @"";
				colvarPaymentId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPaymentId);
				
				TableSchema.TableColumn colvarDaThien = new TableSchema.TableColumn(schema);
				colvarDaThien.ColumnName = "DA_THIEN";
				colvarDaThien.DataType = DbType.Int32;
				colvarDaThien.MaxLength = 0;
				colvarDaThien.AutoIncrement = false;
				colvarDaThien.IsNullable = true;
				colvarDaThien.IsPrimaryKey = false;
				colvarDaThien.IsForeignKey = false;
				colvarDaThien.IsReadOnly = false;
				colvarDaThien.DefaultSetting = @"";
				colvarDaThien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDaThien);
				
				TableSchema.TableColumn colvarTenHienThi = new TableSchema.TableColumn(schema);
				colvarTenHienThi.ColumnName = "TEN_HIEN_THI";
				colvarTenHienThi.DataType = DbType.String;
				colvarTenHienThi.MaxLength = 200;
				colvarTenHienThi.AutoIncrement = false;
				colvarTenHienThi.IsNullable = true;
				colvarTenHienThi.IsPrimaryKey = false;
				colvarTenHienThi.IsForeignKey = false;
				colvarTenHienThi.IsReadOnly = false;
				colvarTenHienThi.DefaultSetting = @"";
				colvarTenHienThi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenHienThi);
				
				TableSchema.TableColumn colvarHienThi = new TableSchema.TableColumn(schema);
				colvarHienThi.ColumnName = "HIEN_THI";
				colvarHienThi.DataType = DbType.Byte;
				colvarHienThi.MaxLength = 0;
				colvarHienThi.AutoIncrement = false;
				colvarHienThi.IsNullable = true;
				colvarHienThi.IsPrimaryKey = false;
				colvarHienThi.IsForeignKey = false;
				colvarHienThi.IsReadOnly = false;
				
						colvarHienThi.DefaultSetting = @"((1))";
				colvarHienThi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHienThi);
				
				TableSchema.TableColumn colvarIdBsyCdinh = new TableSchema.TableColumn(schema);
				colvarIdBsyCdinh.ColumnName = "ID_BSY_CDINH";
				colvarIdBsyCdinh.DataType = DbType.Int16;
				colvarIdBsyCdinh.MaxLength = 0;
				colvarIdBsyCdinh.AutoIncrement = false;
				colvarIdBsyCdinh.IsNullable = true;
				colvarIdBsyCdinh.IsPrimaryKey = false;
				colvarIdBsyCdinh.IsForeignKey = false;
				colvarIdBsyCdinh.IsReadOnly = false;
				colvarIdBsyCdinh.DefaultSetting = @"";
				colvarIdBsyCdinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBsyCdinh);
				
				TableSchema.TableColumn colvarIdKhoaCdinh = new TableSchema.TableColumn(schema);
				colvarIdKhoaCdinh.ColumnName = "ID_KHOA_CDINH";
				colvarIdKhoaCdinh.DataType = DbType.Int16;
				colvarIdKhoaCdinh.MaxLength = 0;
				colvarIdKhoaCdinh.AutoIncrement = false;
				colvarIdKhoaCdinh.IsNullable = true;
				colvarIdKhoaCdinh.IsPrimaryKey = false;
				colvarIdKhoaCdinh.IsForeignKey = false;
				colvarIdKhoaCdinh.IsReadOnly = false;
				colvarIdKhoaCdinh.DefaultSetting = @"";
				colvarIdKhoaCdinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoaCdinh);
				
				TableSchema.TableColumn colvarTienBnTra = new TableSchema.TableColumn(schema);
				colvarTienBnTra.ColumnName = "TIEN_BN_TRA";
				colvarTienBnTra.DataType = DbType.Decimal;
				colvarTienBnTra.MaxLength = 0;
				colvarTienBnTra.AutoIncrement = false;
				colvarTienBnTra.IsNullable = true;
				colvarTienBnTra.IsPrimaryKey = false;
				colvarTienBnTra.IsForeignKey = false;
				colvarTienBnTra.IsReadOnly = false;
				colvarTienBnTra.DefaultSetting = @"";
				colvarTienBnTra.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTienBnTra);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("T_TONG_CHIPHI",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("PatientId")]
		[Bindable(true)]
		public int? PatientId 
		{
			get { return GetColumnValue<int?>(Columns.PatientId); }
			set { SetColumnValue(Columns.PatientId, value); }
		}
		  
		[XmlAttribute("PatientCode")]
		[Bindable(true)]
		public string PatientCode 
		{
			get { return GetColumnValue<string>(Columns.PatientCode); }
			set { SetColumnValue(Columns.PatientCode, value); }
		}
		  
		[XmlAttribute("PaymentTypeId")]
		[Bindable(true)]
		public int? PaymentTypeId 
		{
			get { return GetColumnValue<int?>(Columns.PaymentTypeId); }
			set { SetColumnValue(Columns.PaymentTypeId, value); }
		}
		  
		[XmlAttribute("IdDvu")]
		[Bindable(true)]
		public int? IdDvu 
		{
			get { return GetColumnValue<int?>(Columns.IdDvu); }
			set { SetColumnValue(Columns.IdDvu, value); }
		}
		  
		[XmlAttribute("TenDvu")]
		[Bindable(true)]
		public string TenDvu 
		{
			get { return GetColumnValue<string>(Columns.TenDvu); }
			set { SetColumnValue(Columns.TenDvu, value); }
		}
		  
		[XmlAttribute("Dvt")]
		[Bindable(true)]
		public string Dvt 
		{
			get { return GetColumnValue<string>(Columns.Dvt); }
			set { SetColumnValue(Columns.Dvt, value); }
		}
		  
		[XmlAttribute("SoLuong")]
		[Bindable(true)]
		public int? SoLuong 
		{
			get { return GetColumnValue<int?>(Columns.SoLuong); }
			set { SetColumnValue(Columns.SoLuong, value); }
		}
		  
		[XmlAttribute("DonGia")]
		[Bindable(true)]
		public decimal? DonGia 
		{
			get { return GetColumnValue<decimal?>(Columns.DonGia); }
			set { SetColumnValue(Columns.DonGia, value); }
		}
		  
		[XmlAttribute("PhuThu")]
		[Bindable(true)]
		public decimal? PhuThu 
		{
			get { return GetColumnValue<decimal?>(Columns.PhuThu); }
			set { SetColumnValue(Columns.PhuThu, value); }
		}
		  
		[XmlAttribute("Bhct")]
		[Bindable(true)]
		public decimal? Bhct 
		{
			get { return GetColumnValue<decimal?>(Columns.Bhct); }
			set { SetColumnValue(Columns.Bhct, value); }
		}
		  
		[XmlAttribute("Bnct")]
		[Bindable(true)]
		public decimal? Bnct 
		{
			get { return GetColumnValue<decimal?>(Columns.Bnct); }
			set { SetColumnValue(Columns.Bnct, value); }
		}
		  
		[XmlAttribute("IdPhieu")]
		[Bindable(true)]
		public int? IdPhieu 
		{
			get { return GetColumnValue<int?>(Columns.IdPhieu); }
			set { SetColumnValue(Columns.IdPhieu, value); }
		}
		  
		[XmlAttribute("IdPhieuCt")]
		[Bindable(true)]
		public int? IdPhieuCt 
		{
			get { return GetColumnValue<int?>(Columns.IdPhieuCt); }
			set { SetColumnValue(Columns.IdPhieuCt, value); }
		}
		  
		[XmlAttribute("IsPayment")]
		[Bindable(true)]
		public int? IsPayment 
		{
			get { return GetColumnValue<int?>(Columns.IsPayment); }
			set { SetColumnValue(Columns.IsPayment, value); }
		}
		  
		[XmlAttribute("PaymentStatus")]
		[Bindable(true)]
		public int PaymentStatus 
		{
			get { return GetColumnValue<int>(Columns.PaymentStatus); }
			set { SetColumnValue(Columns.PaymentStatus, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NgayDky")]
		[Bindable(true)]
		public DateTime? NgayDky 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayDky); }
			set { SetColumnValue(Columns.NgayDky, value); }
		}
		  
		[XmlAttribute("IdKhoa")]
		[Bindable(true)]
		public int? IdKhoa 
		{
			get { return GetColumnValue<int?>(Columns.IdKhoa); }
			set { SetColumnValue(Columns.IdKhoa, value); }
		}
		  
		[XmlAttribute("XacNhan")]
		[Bindable(true)]
		public int? XacNhan 
		{
			get { return GetColumnValue<int?>(Columns.XacNhan); }
			set { SetColumnValue(Columns.XacNhan, value); }
		}
		  
		[XmlAttribute("NoiTru")]
		[Bindable(true)]
		public int? NoiTru 
		{
			get { return GetColumnValue<int?>(Columns.NoiTru); }
			set { SetColumnValue(Columns.NoiTru, value); }
		}
		  
		[XmlAttribute("MaKieuDvu")]
		[Bindable(true)]
		public string MaKieuDvu 
		{
			get { return GetColumnValue<string>(Columns.MaKieuDvu); }
			set { SetColumnValue(Columns.MaKieuDvu, value); }
		}
		  
		[XmlAttribute("IdGoiDvu")]
		[Bindable(true)]
		public int? IdGoiDvu 
		{
			get { return GetColumnValue<int?>(Columns.IdGoiDvu); }
			set { SetColumnValue(Columns.IdGoiDvu, value); }
		}
		  
		[XmlAttribute("MaKieuTtoan")]
		[Bindable(true)]
		public string MaKieuTtoan 
		{
			get { return GetColumnValue<string>(Columns.MaKieuTtoan); }
			set { SetColumnValue(Columns.MaKieuTtoan, value); }
		}
		  
		[XmlAttribute("PaymentDate")]
		[Bindable(true)]
		public DateTime? PaymentDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.PaymentDate); }
			set { SetColumnValue(Columns.PaymentDate, value); }
		}
		  
		[XmlAttribute("TrongGoi")]
		[Bindable(true)]
		public int? TrongGoi 
		{
			get { return GetColumnValue<int?>(Columns.TrongGoi); }
			set { SetColumnValue(Columns.TrongGoi, value); }
		}
		  
		[XmlAttribute("IdLoaiDvu")]
		[Bindable(true)]
		public int? IdLoaiDvu 
		{
			get { return GetColumnValue<int?>(Columns.IdLoaiDvu); }
			set { SetColumnValue(Columns.IdLoaiDvu, value); }
		}
		  
		[XmlAttribute("SoPhieuRavien")]
		[Bindable(true)]
		public int? SoPhieuRavien 
		{
			get { return GetColumnValue<int?>(Columns.SoPhieuRavien); }
			set { SetColumnValue(Columns.SoPhieuRavien, value); }
		}
		  
		[XmlAttribute("PaymentId")]
		[Bindable(true)]
		public int? PaymentId 
		{
			get { return GetColumnValue<int?>(Columns.PaymentId); }
			set { SetColumnValue(Columns.PaymentId, value); }
		}
		  
		[XmlAttribute("DaThien")]
		[Bindable(true)]
		public int? DaThien 
		{
			get { return GetColumnValue<int?>(Columns.DaThien); }
			set { SetColumnValue(Columns.DaThien, value); }
		}
		  
		[XmlAttribute("TenHienThi")]
		[Bindable(true)]
		public string TenHienThi 
		{
			get { return GetColumnValue<string>(Columns.TenHienThi); }
			set { SetColumnValue(Columns.TenHienThi, value); }
		}
		  
		[XmlAttribute("HienThi")]
		[Bindable(true)]
		public byte? HienThi 
		{
			get { return GetColumnValue<byte?>(Columns.HienThi); }
			set { SetColumnValue(Columns.HienThi, value); }
		}
		  
		[XmlAttribute("IdBsyCdinh")]
		[Bindable(true)]
		public short? IdBsyCdinh 
		{
			get { return GetColumnValue<short?>(Columns.IdBsyCdinh); }
			set { SetColumnValue(Columns.IdBsyCdinh, value); }
		}
		  
		[XmlAttribute("IdKhoaCdinh")]
		[Bindable(true)]
		public short? IdKhoaCdinh 
		{
			get { return GetColumnValue<short?>(Columns.IdKhoaCdinh); }
			set { SetColumnValue(Columns.IdKhoaCdinh, value); }
		}
		  
		[XmlAttribute("TienBnTra")]
		[Bindable(true)]
		public decimal? TienBnTra 
		{
			get { return GetColumnValue<decimal?>(Columns.TienBnTra); }
			set { SetColumnValue(Columns.TienBnTra, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int? varPatientId,string varPatientCode,int? varPaymentTypeId,int? varIdDvu,string varTenDvu,string varDvt,int? varSoLuong,decimal? varDonGia,decimal? varPhuThu,decimal? varBhct,decimal? varBnct,int? varIdPhieu,int? varIdPhieuCt,int? varIsPayment,int varPaymentStatus,string varNguoiTao,DateTime? varNgayTao,DateTime? varNgayDky,int? varIdKhoa,int? varXacNhan,int? varNoiTru,string varMaKieuDvu,int? varIdGoiDvu,string varMaKieuTtoan,DateTime? varPaymentDate,int? varTrongGoi,int? varIdLoaiDvu,int? varSoPhieuRavien,int? varPaymentId,int? varDaThien,string varTenHienThi,byte? varHienThi,short? varIdBsyCdinh,short? varIdKhoaCdinh,decimal? varTienBnTra)
		{
			TTongChiphi item = new TTongChiphi();
			
			item.PatientId = varPatientId;
			
			item.PatientCode = varPatientCode;
			
			item.PaymentTypeId = varPaymentTypeId;
			
			item.IdDvu = varIdDvu;
			
			item.TenDvu = varTenDvu;
			
			item.Dvt = varDvt;
			
			item.SoLuong = varSoLuong;
			
			item.DonGia = varDonGia;
			
			item.PhuThu = varPhuThu;
			
			item.Bhct = varBhct;
			
			item.Bnct = varBnct;
			
			item.IdPhieu = varIdPhieu;
			
			item.IdPhieuCt = varIdPhieuCt;
			
			item.IsPayment = varIsPayment;
			
			item.PaymentStatus = varPaymentStatus;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NgayDky = varNgayDky;
			
			item.IdKhoa = varIdKhoa;
			
			item.XacNhan = varXacNhan;
			
			item.NoiTru = varNoiTru;
			
			item.MaKieuDvu = varMaKieuDvu;
			
			item.IdGoiDvu = varIdGoiDvu;
			
			item.MaKieuTtoan = varMaKieuTtoan;
			
			item.PaymentDate = varPaymentDate;
			
			item.TrongGoi = varTrongGoi;
			
			item.IdLoaiDvu = varIdLoaiDvu;
			
			item.SoPhieuRavien = varSoPhieuRavien;
			
			item.PaymentId = varPaymentId;
			
			item.DaThien = varDaThien;
			
			item.TenHienThi = varTenHienThi;
			
			item.HienThi = varHienThi;
			
			item.IdBsyCdinh = varIdBsyCdinh;
			
			item.IdKhoaCdinh = varIdKhoaCdinh;
			
			item.TienBnTra = varTienBnTra;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,int? varPatientId,string varPatientCode,int? varPaymentTypeId,int? varIdDvu,string varTenDvu,string varDvt,int? varSoLuong,decimal? varDonGia,decimal? varPhuThu,decimal? varBhct,decimal? varBnct,int? varIdPhieu,int? varIdPhieuCt,int? varIsPayment,int varPaymentStatus,string varNguoiTao,DateTime? varNgayTao,DateTime? varNgayDky,int? varIdKhoa,int? varXacNhan,int? varNoiTru,string varMaKieuDvu,int? varIdGoiDvu,string varMaKieuTtoan,DateTime? varPaymentDate,int? varTrongGoi,int? varIdLoaiDvu,int? varSoPhieuRavien,int? varPaymentId,int? varDaThien,string varTenHienThi,byte? varHienThi,short? varIdBsyCdinh,short? varIdKhoaCdinh,decimal? varTienBnTra)
		{
			TTongChiphi item = new TTongChiphi();
			
				item.Id = varId;
			
				item.PatientId = varPatientId;
			
				item.PatientCode = varPatientCode;
			
				item.PaymentTypeId = varPaymentTypeId;
			
				item.IdDvu = varIdDvu;
			
				item.TenDvu = varTenDvu;
			
				item.Dvt = varDvt;
			
				item.SoLuong = varSoLuong;
			
				item.DonGia = varDonGia;
			
				item.PhuThu = varPhuThu;
			
				item.Bhct = varBhct;
			
				item.Bnct = varBnct;
			
				item.IdPhieu = varIdPhieu;
			
				item.IdPhieuCt = varIdPhieuCt;
			
				item.IsPayment = varIsPayment;
			
				item.PaymentStatus = varPaymentStatus;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NgayDky = varNgayDky;
			
				item.IdKhoa = varIdKhoa;
			
				item.XacNhan = varXacNhan;
			
				item.NoiTru = varNoiTru;
			
				item.MaKieuDvu = varMaKieuDvu;
			
				item.IdGoiDvu = varIdGoiDvu;
			
				item.MaKieuTtoan = varMaKieuTtoan;
			
				item.PaymentDate = varPaymentDate;
			
				item.TrongGoi = varTrongGoi;
			
				item.IdLoaiDvu = varIdLoaiDvu;
			
				item.SoPhieuRavien = varSoPhieuRavien;
			
				item.PaymentId = varPaymentId;
			
				item.DaThien = varDaThien;
			
				item.TenHienThi = varTenHienThi;
			
				item.HienThi = varHienThi;
			
				item.IdBsyCdinh = varIdBsyCdinh;
			
				item.IdKhoaCdinh = varIdKhoaCdinh;
			
				item.TienBnTra = varTienBnTra;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientIdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn PatientCodeColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentTypeIdColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdDvuColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn TenDvuColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn DvtColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLuongColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn DonGiaColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn PhuThuColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn BhctColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn BnctColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieuColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPhieuCtColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn IsPaymentColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentStatusColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayDkyColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoaColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn XacNhanColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn NoiTruColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKieuDvuColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn IdGoiDvuColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKieuTtoanColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentDateColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn TrongGoiColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn IdLoaiDvuColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn SoPhieuRavienColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn PaymentIdColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn DaThienColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn TenHienThiColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn HienThiColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBsyCdinhColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoaCdinhColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn TienBnTraColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"Id";
			 public static string PatientId = @"Patient_ID";
			 public static string PatientCode = @"Patient_Code";
			 public static string PaymentTypeId = @"PaymentType_ID";
			 public static string IdDvu = @"ID_DVU";
			 public static string TenDvu = @"TEN_DVU";
			 public static string Dvt = @"DVT";
			 public static string SoLuong = @"SO_LUONG";
			 public static string DonGia = @"DON_GIA";
			 public static string PhuThu = @"PHU_THU";
			 public static string Bhct = @"BHCT";
			 public static string Bnct = @"BNCT";
			 public static string IdPhieu = @"ID_PHIEU";
			 public static string IdPhieuCt = @"ID_PHIEU_CT";
			 public static string IsPayment = @"IsPayment";
			 public static string PaymentStatus = @"Payment_Status";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string NgayDky = @"NGAY_DKY";
			 public static string IdKhoa = @"ID_KHOA";
			 public static string XacNhan = @"XAC_NHAN";
			 public static string NoiTru = @"NOI_TRU";
			 public static string MaKieuDvu = @"MA_KIEU_DVU";
			 public static string IdGoiDvu = @"ID_GOI_DVU";
			 public static string MaKieuTtoan = @"MA_KIEU_TTOAN";
			 public static string PaymentDate = @"Payment_Date";
			 public static string TrongGoi = @"TRONG_GOI";
			 public static string IdLoaiDvu = @"ID_LOAI_DVU";
			 public static string SoPhieuRavien = @"SO_PHIEU_RAVIEN";
			 public static string PaymentId = @"Payment_ID";
			 public static string DaThien = @"DA_THIEN";
			 public static string TenHienThi = @"TEN_HIEN_THI";
			 public static string HienThi = @"HIEN_THI";
			 public static string IdBsyCdinh = @"ID_BSY_CDINH";
			 public static string IdKhoaCdinh = @"ID_KHOA_CDINH";
			 public static string TienBnTra = @"TIEN_BN_TRA";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
