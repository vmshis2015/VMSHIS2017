using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
    /// <summary>
    /// Controller class for Sys_ManagementUnit
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class SysManagementUnitController
    {
        // Preload our schema..
        SysManagementUnit thisSchemaLoad = new SysManagementUnit();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public SysManagementUnitCollection FetchAll()
        {
            SysManagementUnitCollection coll = new SysManagementUnitCollection();
            Query qry = new Query(SysManagementUnit.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public SysManagementUnitCollection FetchByID(object PkSBranchID)
        {
            SysManagementUnitCollection coll = new SysManagementUnitCollection().Where("PK_sBranchID", PkSBranchID).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public SysManagementUnitCollection FetchByQuery(Query qry)
        {
            SysManagementUnitCollection coll = new SysManagementUnitCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object PkSBranchID)
        {
            return (SysManagementUnit.Delete(PkSBranchID) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object PkSBranchID)
        {
            return (SysManagementUnit.Destroy(PkSBranchID) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string PkSBranchID,string SName,string SParentBranchName,string FpSUpBranchID,int? IntLevel,string SAddress,string SPhone,string SBussinessPhone,string SHotPhone,string SDutyPhone,string SFAX,string SEMAIL,string STaxCode,string SAccountID,string SRepresentative,string SPosition,string SProxyNumber,DateTime? TDateMandate,string SMandateUnitName,string SMandateUnitAddress,DateTime? TInvalidDate,DateTime? TInputDate,string STyper,string SBankCode,string SLandSurveyUnitCode,string Website,byte[] Logo)
	    {
		    SysManagementUnit item = new SysManagementUnit();
		    
            item.PkSBranchID = PkSBranchID;
            
            item.SName = SName;
            
            item.SParentBranchName = SParentBranchName;
            
            item.FpSUpBranchID = FpSUpBranchID;
            
            item.IntLevel = IntLevel;
            
            item.SAddress = SAddress;
            
            item.SPhone = SPhone;
            
            item.SBussinessPhone = SBussinessPhone;
            
            item.SHotPhone = SHotPhone;
            
            item.SDutyPhone = SDutyPhone;
            
            item.SFAX = SFAX;
            
            item.SEMAIL = SEMAIL;
            
            item.STaxCode = STaxCode;
            
            item.SAccountID = SAccountID;
            
            item.SRepresentative = SRepresentative;
            
            item.SPosition = SPosition;
            
            item.SProxyNumber = SProxyNumber;
            
            item.TDateMandate = TDateMandate;
            
            item.SMandateUnitName = SMandateUnitName;
            
            item.SMandateUnitAddress = SMandateUnitAddress;
            
            item.TInvalidDate = TInvalidDate;
            
            item.TInputDate = TInputDate;
            
            item.STyper = STyper;
            
            item.SBankCode = SBankCode;
            
            item.SLandSurveyUnitCode = SLandSurveyUnitCode;
            
            item.Website = Website;
            
            item.Logo = Logo;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(string PkSBranchID,string SName,string SParentBranchName,string FpSUpBranchID,int? IntLevel,string SAddress,string SPhone,string SBussinessPhone,string SHotPhone,string SDutyPhone,string SFAX,string SEMAIL,string STaxCode,string SAccountID,string SRepresentative,string SPosition,string SProxyNumber,DateTime? TDateMandate,string SMandateUnitName,string SMandateUnitAddress,DateTime? TInvalidDate,DateTime? TInputDate,string STyper,string SBankCode,string SLandSurveyUnitCode,string Website,byte[] Logo)
	    {
		    SysManagementUnit item = new SysManagementUnit();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.PkSBranchID = PkSBranchID;
				
			item.SName = SName;
				
			item.SParentBranchName = SParentBranchName;
				
			item.FpSUpBranchID = FpSUpBranchID;
				
			item.IntLevel = IntLevel;
				
			item.SAddress = SAddress;
				
			item.SPhone = SPhone;
				
			item.SBussinessPhone = SBussinessPhone;
				
			item.SHotPhone = SHotPhone;
				
			item.SDutyPhone = SDutyPhone;
				
			item.SFAX = SFAX;
				
			item.SEMAIL = SEMAIL;
				
			item.STaxCode = STaxCode;
				
			item.SAccountID = SAccountID;
				
			item.SRepresentative = SRepresentative;
				
			item.SPosition = SPosition;
				
			item.SProxyNumber = SProxyNumber;
				
			item.TDateMandate = TDateMandate;
				
			item.SMandateUnitName = SMandateUnitName;
				
			item.SMandateUnitAddress = SMandateUnitAddress;
				
			item.TInvalidDate = TInvalidDate;
				
			item.TInputDate = TInputDate;
				
			item.STyper = STyper;
				
			item.SBankCode = SBankCode;
				
			item.SLandSurveyUnitCode = SLandSurveyUnitCode;
				
			item.Website = Website;
				
			item.Logo = Logo;
				
	        item.Save(UserName);
	    }
    }
}
