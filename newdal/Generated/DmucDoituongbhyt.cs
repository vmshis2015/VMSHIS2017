using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the DmucDoituongbhyt class.
	/// </summary>
    [Serializable]
	public partial class DmucDoituongbhytCollection : ActiveList<DmucDoituongbhyt, DmucDoituongbhytCollection>
	{	   
		public DmucDoituongbhytCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>DmucDoituongbhytCollection</returns>
		public DmucDoituongbhytCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                DmucDoituongbhyt o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the dmuc_doituongbhyt table.
	/// </summary>
	[Serializable]
	public partial class DmucDoituongbhyt : ActiveRecord<DmucDoituongbhyt>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public DmucDoituongbhyt()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public DmucDoituongbhyt(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public DmucDoituongbhyt(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public DmucDoituongbhyt(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("dmuc_doituongbhyt", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdDoituongbhyt = new TableSchema.TableColumn(schema);
				colvarIdDoituongbhyt.ColumnName = "id_doituongbhyt";
				colvarIdDoituongbhyt.DataType = DbType.Int16;
				colvarIdDoituongbhyt.MaxLength = 0;
				colvarIdDoituongbhyt.AutoIncrement = true;
				colvarIdDoituongbhyt.IsNullable = false;
				colvarIdDoituongbhyt.IsPrimaryKey = true;
				colvarIdDoituongbhyt.IsForeignKey = false;
				colvarIdDoituongbhyt.IsReadOnly = false;
				colvarIdDoituongbhyt.DefaultSetting = @"";
				colvarIdDoituongbhyt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDoituongbhyt);
				
				TableSchema.TableColumn colvarMaDoituongbhyt = new TableSchema.TableColumn(schema);
				colvarMaDoituongbhyt.ColumnName = "ma_doituongbhyt";
				colvarMaDoituongbhyt.DataType = DbType.AnsiString;
				colvarMaDoituongbhyt.MaxLength = 50;
				colvarMaDoituongbhyt.AutoIncrement = false;
				colvarMaDoituongbhyt.IsNullable = true;
				colvarMaDoituongbhyt.IsPrimaryKey = false;
				colvarMaDoituongbhyt.IsForeignKey = false;
				colvarMaDoituongbhyt.IsReadOnly = false;
				colvarMaDoituongbhyt.DefaultSetting = @"";
				colvarMaDoituongbhyt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDoituongbhyt);
				
				TableSchema.TableColumn colvarTenDoituongbhyt = new TableSchema.TableColumn(schema);
				colvarTenDoituongbhyt.ColumnName = "ten_doituongbhyt";
				colvarTenDoituongbhyt.DataType = DbType.String;
				colvarTenDoituongbhyt.MaxLength = 100;
				colvarTenDoituongbhyt.AutoIncrement = false;
				colvarTenDoituongbhyt.IsNullable = true;
				colvarTenDoituongbhyt.IsPrimaryKey = false;
				colvarTenDoituongbhyt.IsForeignKey = false;
				colvarTenDoituongbhyt.IsReadOnly = false;
				colvarTenDoituongbhyt.DefaultSetting = @"";
				colvarTenDoituongbhyt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenDoituongbhyt);
				
				TableSchema.TableColumn colvarMaNhombhyt = new TableSchema.TableColumn(schema);
				colvarMaNhombhyt.ColumnName = "ma_nhombhyt";
				colvarMaNhombhyt.DataType = DbType.String;
				colvarMaNhombhyt.MaxLength = 20;
				colvarMaNhombhyt.AutoIncrement = false;
				colvarMaNhombhyt.IsNullable = true;
				colvarMaNhombhyt.IsPrimaryKey = false;
				colvarMaNhombhyt.IsForeignKey = false;
				colvarMaNhombhyt.IsReadOnly = false;
				colvarMaNhombhyt.DefaultSetting = @"";
				colvarMaNhombhyt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaNhombhyt);
				
				TableSchema.TableColumn colvarIdDoituongKcb = new TableSchema.TableColumn(schema);
				colvarIdDoituongKcb.ColumnName = "id_doituong_kcb";
				colvarIdDoituongKcb.DataType = DbType.Int16;
				colvarIdDoituongKcb.MaxLength = 0;
				colvarIdDoituongKcb.AutoIncrement = false;
				colvarIdDoituongKcb.IsNullable = true;
				colvarIdDoituongKcb.IsPrimaryKey = false;
				colvarIdDoituongKcb.IsForeignKey = false;
				colvarIdDoituongKcb.IsReadOnly = false;
				colvarIdDoituongKcb.DefaultSetting = @"";
				colvarIdDoituongKcb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDoituongKcb);
				
				TableSchema.TableColumn colvarPhantramBhyt = new TableSchema.TableColumn(schema);
				colvarPhantramBhyt.ColumnName = "phantram_bhyt";
				colvarPhantramBhyt.DataType = DbType.Decimal;
				colvarPhantramBhyt.MaxLength = 0;
				colvarPhantramBhyt.AutoIncrement = false;
				colvarPhantramBhyt.IsNullable = true;
				colvarPhantramBhyt.IsPrimaryKey = false;
				colvarPhantramBhyt.IsForeignKey = false;
				colvarPhantramBhyt.IsReadOnly = false;
				colvarPhantramBhyt.DefaultSetting = @"";
				colvarPhantramBhyt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPhantramBhyt);
				
				TableSchema.TableColumn colvarLaygiaChung = new TableSchema.TableColumn(schema);
				colvarLaygiaChung.ColumnName = "laygia_chung";
				colvarLaygiaChung.DataType = DbType.Byte;
				colvarLaygiaChung.MaxLength = 0;
				colvarLaygiaChung.AutoIncrement = false;
				colvarLaygiaChung.IsNullable = true;
				colvarLaygiaChung.IsPrimaryKey = false;
				colvarLaygiaChung.IsForeignKey = false;
				colvarLaygiaChung.IsReadOnly = false;
				colvarLaygiaChung.DefaultSetting = @"";
				colvarLaygiaChung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLaygiaChung);
				
				TableSchema.TableColumn colvarSttHthi = new TableSchema.TableColumn(schema);
				colvarSttHthi.ColumnName = "stt_hthi";
				colvarSttHthi.DataType = DbType.Int16;
				colvarSttHthi.MaxLength = 0;
				colvarSttHthi.AutoIncrement = false;
				colvarSttHthi.IsNullable = false;
				colvarSttHthi.IsPrimaryKey = false;
				colvarSttHthi.IsForeignKey = false;
				colvarSttHthi.IsReadOnly = false;
				colvarSttHthi.DefaultSetting = @"";
				colvarSttHthi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSttHthi);
				
				TableSchema.TableColumn colvarMotaThem = new TableSchema.TableColumn(schema);
				colvarMotaThem.ColumnName = "mota_them";
				colvarMotaThem.DataType = DbType.String;
				colvarMotaThem.MaxLength = 255;
				colvarMotaThem.AutoIncrement = false;
				colvarMotaThem.IsNullable = true;
				colvarMotaThem.IsPrimaryKey = false;
				colvarMotaThem.IsForeignKey = false;
				colvarMotaThem.IsReadOnly = false;
				colvarMotaThem.DefaultSetting = @"";
				colvarMotaThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMotaThem);
				
				TableSchema.TableColumn colvarDanhsachQuyenloi = new TableSchema.TableColumn(schema);
				colvarDanhsachQuyenloi.ColumnName = "danhsach_quyenloi";
				colvarDanhsachQuyenloi.DataType = DbType.String;
				colvarDanhsachQuyenloi.MaxLength = 100;
				colvarDanhsachQuyenloi.AutoIncrement = false;
				colvarDanhsachQuyenloi.IsNullable = true;
				colvarDanhsachQuyenloi.IsPrimaryKey = false;
				colvarDanhsachQuyenloi.IsForeignKey = false;
				colvarDanhsachQuyenloi.IsReadOnly = false;
				colvarDanhsachQuyenloi.DefaultSetting = @"";
				colvarDanhsachQuyenloi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDanhsachQuyenloi);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("dmuc_doituongbhyt",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdDoituongbhyt")]
		[Bindable(true)]
		public short IdDoituongbhyt 
		{
			get { return GetColumnValue<short>(Columns.IdDoituongbhyt); }
			set { SetColumnValue(Columns.IdDoituongbhyt, value); }
		}
		  
		[XmlAttribute("MaDoituongbhyt")]
		[Bindable(true)]
		public string MaDoituongbhyt 
		{
			get { return GetColumnValue<string>(Columns.MaDoituongbhyt); }
			set { SetColumnValue(Columns.MaDoituongbhyt, value); }
		}
		  
		[XmlAttribute("TenDoituongbhyt")]
		[Bindable(true)]
		public string TenDoituongbhyt 
		{
			get { return GetColumnValue<string>(Columns.TenDoituongbhyt); }
			set { SetColumnValue(Columns.TenDoituongbhyt, value); }
		}
		  
		[XmlAttribute("MaNhombhyt")]
		[Bindable(true)]
		public string MaNhombhyt 
		{
			get { return GetColumnValue<string>(Columns.MaNhombhyt); }
			set { SetColumnValue(Columns.MaNhombhyt, value); }
		}
		  
		[XmlAttribute("IdDoituongKcb")]
		[Bindable(true)]
		public short? IdDoituongKcb 
		{
			get { return GetColumnValue<short?>(Columns.IdDoituongKcb); }
			set { SetColumnValue(Columns.IdDoituongKcb, value); }
		}
		  
		[XmlAttribute("PhantramBhyt")]
		[Bindable(true)]
		public decimal? PhantramBhyt 
		{
			get { return GetColumnValue<decimal?>(Columns.PhantramBhyt); }
			set { SetColumnValue(Columns.PhantramBhyt, value); }
		}
		  
		[XmlAttribute("LaygiaChung")]
		[Bindable(true)]
		public byte? LaygiaChung 
		{
			get { return GetColumnValue<byte?>(Columns.LaygiaChung); }
			set { SetColumnValue(Columns.LaygiaChung, value); }
		}
		  
		[XmlAttribute("SttHthi")]
		[Bindable(true)]
		public short SttHthi 
		{
			get { return GetColumnValue<short>(Columns.SttHthi); }
			set { SetColumnValue(Columns.SttHthi, value); }
		}
		  
		[XmlAttribute("MotaThem")]
		[Bindable(true)]
		public string MotaThem 
		{
			get { return GetColumnValue<string>(Columns.MotaThem); }
			set { SetColumnValue(Columns.MotaThem, value); }
		}
		  
		[XmlAttribute("DanhsachQuyenloi")]
		[Bindable(true)]
		public string DanhsachQuyenloi 
		{
			get { return GetColumnValue<string>(Columns.DanhsachQuyenloi); }
			set { SetColumnValue(Columns.DanhsachQuyenloi, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaDoituongbhyt,string varTenDoituongbhyt,string varMaNhombhyt,short? varIdDoituongKcb,decimal? varPhantramBhyt,byte? varLaygiaChung,short varSttHthi,string varMotaThem,string varDanhsachQuyenloi)
		{
			DmucDoituongbhyt item = new DmucDoituongbhyt();
			
			item.MaDoituongbhyt = varMaDoituongbhyt;
			
			item.TenDoituongbhyt = varTenDoituongbhyt;
			
			item.MaNhombhyt = varMaNhombhyt;
			
			item.IdDoituongKcb = varIdDoituongKcb;
			
			item.PhantramBhyt = varPhantramBhyt;
			
			item.LaygiaChung = varLaygiaChung;
			
			item.SttHthi = varSttHthi;
			
			item.MotaThem = varMotaThem;
			
			item.DanhsachQuyenloi = varDanhsachQuyenloi;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(short varIdDoituongbhyt,string varMaDoituongbhyt,string varTenDoituongbhyt,string varMaNhombhyt,short? varIdDoituongKcb,decimal? varPhantramBhyt,byte? varLaygiaChung,short varSttHthi,string varMotaThem,string varDanhsachQuyenloi)
		{
			DmucDoituongbhyt item = new DmucDoituongbhyt();
			
				item.IdDoituongbhyt = varIdDoituongbhyt;
			
				item.MaDoituongbhyt = varMaDoituongbhyt;
			
				item.TenDoituongbhyt = varTenDoituongbhyt;
			
				item.MaNhombhyt = varMaNhombhyt;
			
				item.IdDoituongKcb = varIdDoituongKcb;
			
				item.PhantramBhyt = varPhantramBhyt;
			
				item.LaygiaChung = varLaygiaChung;
			
				item.SttHthi = varSttHthi;
			
				item.MotaThem = varMotaThem;
			
				item.DanhsachQuyenloi = varDanhsachQuyenloi;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdDoituongbhytColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDoituongbhytColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn TenDoituongbhytColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn MaNhombhytColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdDoituongKcbColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn PhantramBhytColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn LaygiaChungColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn SttHthiColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn MotaThemColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn DanhsachQuyenloiColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdDoituongbhyt = @"id_doituongbhyt";
			 public static string MaDoituongbhyt = @"ma_doituongbhyt";
			 public static string TenDoituongbhyt = @"ten_doituongbhyt";
			 public static string MaNhombhyt = @"ma_nhombhyt";
			 public static string IdDoituongKcb = @"id_doituong_kcb";
			 public static string PhantramBhyt = @"phantram_bhyt";
			 public static string LaygiaChung = @"laygia_chung";
			 public static string SttHthi = @"stt_hthi";
			 public static string MotaThem = @"mota_them";
			 public static string DanhsachQuyenloi = @"danhsach_quyenloi";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
