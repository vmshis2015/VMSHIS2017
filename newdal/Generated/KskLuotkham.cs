using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the KskLuotkham class.
	/// </summary>
    [Serializable]
	public partial class KskLuotkhamCollection : ActiveList<KskLuotkham, KskLuotkhamCollection>
	{	   
		public KskLuotkhamCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>KskLuotkhamCollection</returns>
		public KskLuotkhamCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                KskLuotkham o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the ksk_luotkham table.
	/// </summary>
	[Serializable]
	public partial class KskLuotkham : ActiveRecord<KskLuotkham>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public KskLuotkham()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public KskLuotkham(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public KskLuotkham(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public KskLuotkham(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("ksk_luotkham", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarMaLuotkham = new TableSchema.TableColumn(schema);
				colvarMaLuotkham.ColumnName = "MaLuotkham";
				colvarMaLuotkham.DataType = DbType.String;
				colvarMaLuotkham.MaxLength = 20;
				colvarMaLuotkham.AutoIncrement = false;
				colvarMaLuotkham.IsNullable = false;
				colvarMaLuotkham.IsPrimaryKey = true;
				colvarMaLuotkham.IsForeignKey = false;
				colvarMaLuotkham.IsReadOnly = false;
				colvarMaLuotkham.DefaultSetting = @"";
				colvarMaLuotkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLuotkham);
				
				TableSchema.TableColumn colvarIdNhanVien = new TableSchema.TableColumn(schema);
				colvarIdNhanVien.ColumnName = "IdNhanVien";
				colvarIdNhanVien.DataType = DbType.Int64;
				colvarIdNhanVien.MaxLength = 0;
				colvarIdNhanVien.AutoIncrement = false;
				colvarIdNhanVien.IsNullable = false;
				colvarIdNhanVien.IsPrimaryKey = false;
				colvarIdNhanVien.IsForeignKey = false;
				colvarIdNhanVien.IsReadOnly = false;
				colvarIdNhanVien.DefaultSetting = @"";
				colvarIdNhanVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNhanVien);
				
				TableSchema.TableColumn colvarMaDangKy = new TableSchema.TableColumn(schema);
				colvarMaDangKy.ColumnName = "MaDangKy";
				colvarMaDangKy.DataType = DbType.String;
				colvarMaDangKy.MaxLength = 20;
				colvarMaDangKy.AutoIncrement = false;
				colvarMaDangKy.IsNullable = false;
				colvarMaDangKy.IsPrimaryKey = false;
				colvarMaDangKy.IsForeignKey = false;
				colvarMaDangKy.IsReadOnly = false;
				colvarMaDangKy.DefaultSetting = @"";
				colvarMaDangKy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDangKy);
				
				TableSchema.TableColumn colvarSoLo = new TableSchema.TableColumn(schema);
				colvarSoLo.ColumnName = "SoLo";
				colvarSoLo.DataType = DbType.String;
				colvarSoLo.MaxLength = 50;
				colvarSoLo.AutoIncrement = false;
				colvarSoLo.IsNullable = false;
				colvarSoLo.IsPrimaryKey = false;
				colvarSoLo.IsForeignKey = false;
				colvarSoLo.IsReadOnly = false;
				colvarSoLo.DefaultSetting = @"";
				colvarSoLo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLo);
				
				TableSchema.TableColumn colvarNgayNhap = new TableSchema.TableColumn(schema);
				colvarNgayNhap.ColumnName = "NgayNhap";
				colvarNgayNhap.DataType = DbType.DateTime;
				colvarNgayNhap.MaxLength = 0;
				colvarNgayNhap.AutoIncrement = false;
				colvarNgayNhap.IsNullable = false;
				colvarNgayNhap.IsPrimaryKey = false;
				colvarNgayNhap.IsForeignKey = false;
				colvarNgayNhap.IsReadOnly = false;
				colvarNgayNhap.DefaultSetting = @"";
				colvarNgayNhap.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayNhap);
				
				TableSchema.TableColumn colvarNgayKham = new TableSchema.TableColumn(schema);
				colvarNgayKham.ColumnName = "NgayKham";
				colvarNgayKham.DataType = DbType.DateTime;
				colvarNgayKham.MaxLength = 0;
				colvarNgayKham.AutoIncrement = false;
				colvarNgayKham.IsNullable = true;
				colvarNgayKham.IsPrimaryKey = false;
				colvarNgayKham.IsForeignKey = false;
				colvarNgayKham.IsReadOnly = false;
				colvarNgayKham.DefaultSetting = @"";
				colvarNgayKham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayKham);
				
				TableSchema.TableColumn colvarNguoiKham = new TableSchema.TableColumn(schema);
				colvarNguoiKham.ColumnName = "NguoiKham";
				colvarNguoiKham.DataType = DbType.String;
				colvarNguoiKham.MaxLength = 50;
				colvarNguoiKham.AutoIncrement = false;
				colvarNguoiKham.IsNullable = true;
				colvarNguoiKham.IsPrimaryKey = false;
				colvarNguoiKham.IsForeignKey = false;
				colvarNguoiKham.IsReadOnly = false;
				colvarNguoiKham.DefaultSetting = @"";
				colvarNguoiKham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiKham);
				
				TableSchema.TableColumn colvarBarCode = new TableSchema.TableColumn(schema);
				colvarBarCode.ColumnName = "BarCode";
				colvarBarCode.DataType = DbType.String;
				colvarBarCode.MaxLength = 20;
				colvarBarCode.AutoIncrement = false;
				colvarBarCode.IsNullable = true;
				colvarBarCode.IsPrimaryKey = false;
				colvarBarCode.IsForeignKey = false;
				colvarBarCode.IsReadOnly = false;
				colvarBarCode.DefaultSetting = @"";
				colvarBarCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBarCode);
				
				TableSchema.TableColumn colvarChanDoan = new TableSchema.TableColumn(schema);
				colvarChanDoan.ColumnName = "ChanDoan";
				colvarChanDoan.DataType = DbType.String;
				colvarChanDoan.MaxLength = 500;
				colvarChanDoan.AutoIncrement = false;
				colvarChanDoan.IsNullable = true;
				colvarChanDoan.IsPrimaryKey = false;
				colvarChanDoan.IsForeignKey = false;
				colvarChanDoan.IsReadOnly = false;
				colvarChanDoan.DefaultSetting = @"";
				colvarChanDoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChanDoan);
				
				TableSchema.TableColumn colvarChieuCao = new TableSchema.TableColumn(schema);
				colvarChieuCao.ColumnName = "ChieuCao";
				colvarChieuCao.DataType = DbType.String;
				colvarChieuCao.MaxLength = 15;
				colvarChieuCao.AutoIncrement = false;
				colvarChieuCao.IsNullable = true;
				colvarChieuCao.IsPrimaryKey = false;
				colvarChieuCao.IsForeignKey = false;
				colvarChieuCao.IsReadOnly = false;
				colvarChieuCao.DefaultSetting = @"";
				colvarChieuCao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChieuCao);
				
				TableSchema.TableColumn colvarCanNang = new TableSchema.TableColumn(schema);
				colvarCanNang.ColumnName = "CanNang";
				colvarCanNang.DataType = DbType.String;
				colvarCanNang.MaxLength = 15;
				colvarCanNang.AutoIncrement = false;
				colvarCanNang.IsNullable = true;
				colvarCanNang.IsPrimaryKey = false;
				colvarCanNang.IsForeignKey = false;
				colvarCanNang.IsReadOnly = false;
				colvarCanNang.DefaultSetting = @"";
				colvarCanNang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCanNang);
				
				TableSchema.TableColumn colvarBmi = new TableSchema.TableColumn(schema);
				colvarBmi.ColumnName = "BMI";
				colvarBmi.DataType = DbType.String;
				colvarBmi.MaxLength = 15;
				colvarBmi.AutoIncrement = false;
				colvarBmi.IsNullable = true;
				colvarBmi.IsPrimaryKey = false;
				colvarBmi.IsForeignKey = false;
				colvarBmi.IsReadOnly = false;
				colvarBmi.DefaultSetting = @"";
				colvarBmi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBmi);
				
				TableSchema.TableColumn colvarMach = new TableSchema.TableColumn(schema);
				colvarMach.ColumnName = "Mach";
				colvarMach.DataType = DbType.String;
				colvarMach.MaxLength = 20;
				colvarMach.AutoIncrement = false;
				colvarMach.IsNullable = true;
				colvarMach.IsPrimaryKey = false;
				colvarMach.IsForeignKey = false;
				colvarMach.IsReadOnly = false;
				colvarMach.DefaultSetting = @"";
				colvarMach.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMach);
				
				TableSchema.TableColumn colvarHuyetAp = new TableSchema.TableColumn(schema);
				colvarHuyetAp.ColumnName = "HuyetAp";
				colvarHuyetAp.DataType = DbType.String;
				colvarHuyetAp.MaxLength = 20;
				colvarHuyetAp.AutoIncrement = false;
				colvarHuyetAp.IsNullable = true;
				colvarHuyetAp.IsPrimaryKey = false;
				colvarHuyetAp.IsForeignKey = false;
				colvarHuyetAp.IsReadOnly = false;
				colvarHuyetAp.DefaultSetting = @"";
				colvarHuyetAp.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHuyetAp);
				
				TableSchema.TableColumn colvarNoiKhoa = new TableSchema.TableColumn(schema);
				colvarNoiKhoa.ColumnName = "NoiKhoa";
				colvarNoiKhoa.DataType = DbType.String;
				colvarNoiKhoa.MaxLength = 50;
				colvarNoiKhoa.AutoIncrement = false;
				colvarNoiKhoa.IsNullable = true;
				colvarNoiKhoa.IsPrimaryKey = false;
				colvarNoiKhoa.IsForeignKey = false;
				colvarNoiKhoa.IsReadOnly = false;
				colvarNoiKhoa.DefaultSetting = @"";
				colvarNoiKhoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNoiKhoa);
				
				TableSchema.TableColumn colvarTaiMuiHong = new TableSchema.TableColumn(schema);
				colvarTaiMuiHong.ColumnName = "TaiMuiHong";
				colvarTaiMuiHong.DataType = DbType.String;
				colvarTaiMuiHong.MaxLength = 50;
				colvarTaiMuiHong.AutoIncrement = false;
				colvarTaiMuiHong.IsNullable = true;
				colvarTaiMuiHong.IsPrimaryKey = false;
				colvarTaiMuiHong.IsForeignKey = false;
				colvarTaiMuiHong.IsReadOnly = false;
				colvarTaiMuiHong.DefaultSetting = @"";
				colvarTaiMuiHong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTaiMuiHong);
				
				TableSchema.TableColumn colvarMat = new TableSchema.TableColumn(schema);
				colvarMat.ColumnName = "Mat";
				colvarMat.DataType = DbType.String;
				colvarMat.MaxLength = 50;
				colvarMat.AutoIncrement = false;
				colvarMat.IsNullable = true;
				colvarMat.IsPrimaryKey = false;
				colvarMat.IsForeignKey = false;
				colvarMat.IsReadOnly = false;
				colvarMat.DefaultSetting = @"";
				colvarMat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMat);
				
				TableSchema.TableColumn colvarDaLieu = new TableSchema.TableColumn(schema);
				colvarDaLieu.ColumnName = "DaLieu";
				colvarDaLieu.DataType = DbType.String;
				colvarDaLieu.MaxLength = 50;
				colvarDaLieu.AutoIncrement = false;
				colvarDaLieu.IsNullable = true;
				colvarDaLieu.IsPrimaryKey = false;
				colvarDaLieu.IsForeignKey = false;
				colvarDaLieu.IsReadOnly = false;
				colvarDaLieu.DefaultSetting = @"";
				colvarDaLieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDaLieu);
				
				TableSchema.TableColumn colvarKetLuan = new TableSchema.TableColumn(schema);
				colvarKetLuan.ColumnName = "KetLuan";
				colvarKetLuan.DataType = DbType.String;
				colvarKetLuan.MaxLength = 500;
				colvarKetLuan.AutoIncrement = false;
				colvarKetLuan.IsNullable = true;
				colvarKetLuan.IsPrimaryKey = false;
				colvarKetLuan.IsForeignKey = false;
				colvarKetLuan.IsReadOnly = false;
				colvarKetLuan.DefaultSetting = @"";
				colvarKetLuan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKetLuan);
				
				TableSchema.TableColumn colvarSoKham = new TableSchema.TableColumn(schema);
				colvarSoKham.ColumnName = "SoKham";
				colvarSoKham.DataType = DbType.Int32;
				colvarSoKham.MaxLength = 0;
				colvarSoKham.AutoIncrement = false;
				colvarSoKham.IsNullable = true;
				colvarSoKham.IsPrimaryKey = false;
				colvarSoKham.IsForeignKey = false;
				colvarSoKham.IsReadOnly = false;
				colvarSoKham.DefaultSetting = @"";
				colvarSoKham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoKham);
				
				TableSchema.TableColumn colvarBacSyThucHien = new TableSchema.TableColumn(schema);
				colvarBacSyThucHien.ColumnName = "BacSyThucHien";
				colvarBacSyThucHien.DataType = DbType.String;
				colvarBacSyThucHien.MaxLength = 50;
				colvarBacSyThucHien.AutoIncrement = false;
				colvarBacSyThucHien.IsNullable = true;
				colvarBacSyThucHien.IsPrimaryKey = false;
				colvarBacSyThucHien.IsForeignKey = false;
				colvarBacSyThucHien.IsReadOnly = false;
				colvarBacSyThucHien.DefaultSetting = @"";
				colvarBacSyThucHien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBacSyThucHien);
				
				TableSchema.TableColumn colvarTrangThai = new TableSchema.TableColumn(schema);
				colvarTrangThai.ColumnName = "TrangThai";
				colvarTrangThai.DataType = DbType.Byte;
				colvarTrangThai.MaxLength = 0;
				colvarTrangThai.AutoIncrement = false;
				colvarTrangThai.IsNullable = true;
				colvarTrangThai.IsPrimaryKey = false;
				colvarTrangThai.IsForeignKey = false;
				colvarTrangThai.IsReadOnly = false;
				colvarTrangThai.DefaultSetting = @"";
				colvarTrangThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThai);
				
				TableSchema.TableColumn colvarNgayNhanCls = new TableSchema.TableColumn(schema);
				colvarNgayNhanCls.ColumnName = "NgayNhanCls";
				colvarNgayNhanCls.DataType = DbType.DateTime;
				colvarNgayNhanCls.MaxLength = 0;
				colvarNgayNhanCls.AutoIncrement = false;
				colvarNgayNhanCls.IsNullable = true;
				colvarNgayNhanCls.IsPrimaryKey = false;
				colvarNgayNhanCls.IsForeignKey = false;
				colvarNgayNhanCls.IsReadOnly = false;
				colvarNgayNhanCls.DefaultSetting = @"";
				colvarNgayNhanCls.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayNhanCls);
				
				TableSchema.TableColumn colvarLoaiSk = new TableSchema.TableColumn(schema);
				colvarLoaiSk.ColumnName = "LoaiSk";
				colvarLoaiSk.DataType = DbType.String;
				colvarLoaiSk.MaxLength = 30;
				colvarLoaiSk.AutoIncrement = false;
				colvarLoaiSk.IsNullable = true;
				colvarLoaiSk.IsPrimaryKey = false;
				colvarLoaiSk.IsForeignKey = false;
				colvarLoaiSk.IsReadOnly = false;
				colvarLoaiSk.DefaultSetting = @"";
				colvarLoaiSk.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLoaiSk);
				
				TableSchema.TableColumn colvarChucVu = new TableSchema.TableColumn(schema);
				colvarChucVu.ColumnName = "ChucVu";
				colvarChucVu.DataType = DbType.String;
				colvarChucVu.MaxLength = 30;
				colvarChucVu.AutoIncrement = false;
				colvarChucVu.IsNullable = true;
				colvarChucVu.IsPrimaryKey = false;
				colvarChucVu.IsForeignKey = false;
				colvarChucVu.IsReadOnly = false;
				colvarChucVu.DefaultSetting = @"";
				colvarChucVu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChucVu);
				
				TableSchema.TableColumn colvarIsBenhManTinh = new TableSchema.TableColumn(schema);
				colvarIsBenhManTinh.ColumnName = "IsBenhManTinh";
				colvarIsBenhManTinh.DataType = DbType.Byte;
				colvarIsBenhManTinh.MaxLength = 0;
				colvarIsBenhManTinh.AutoIncrement = false;
				colvarIsBenhManTinh.IsNullable = true;
				colvarIsBenhManTinh.IsPrimaryKey = false;
				colvarIsBenhManTinh.IsForeignKey = false;
				colvarIsBenhManTinh.IsReadOnly = false;
				colvarIsBenhManTinh.DefaultSetting = @"";
				colvarIsBenhManTinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIsBenhManTinh);
				
				TableSchema.TableColumn colvarIsBenhHiemNgheo = new TableSchema.TableColumn(schema);
				colvarIsBenhHiemNgheo.ColumnName = "IsBenhHiemNgheo";
				colvarIsBenhHiemNgheo.DataType = DbType.Byte;
				colvarIsBenhHiemNgheo.MaxLength = 0;
				colvarIsBenhHiemNgheo.AutoIncrement = false;
				colvarIsBenhHiemNgheo.IsNullable = true;
				colvarIsBenhHiemNgheo.IsPrimaryKey = false;
				colvarIsBenhHiemNgheo.IsForeignKey = false;
				colvarIsBenhHiemNgheo.IsReadOnly = false;
				colvarIsBenhHiemNgheo.DefaultSetting = @"";
				colvarIsBenhHiemNgheo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIsBenhHiemNgheo);
				
				TableSchema.TableColumn colvarNguoiKetThuc = new TableSchema.TableColumn(schema);
				colvarNguoiKetThuc.ColumnName = "NguoiKetThuc";
				colvarNguoiKetThuc.DataType = DbType.String;
				colvarNguoiKetThuc.MaxLength = 50;
				colvarNguoiKetThuc.AutoIncrement = false;
				colvarNguoiKetThuc.IsNullable = true;
				colvarNguoiKetThuc.IsPrimaryKey = false;
				colvarNguoiKetThuc.IsForeignKey = false;
				colvarNguoiKetThuc.IsReadOnly = false;
				colvarNguoiKetThuc.DefaultSetting = @"";
				colvarNguoiKetThuc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiKetThuc);
				
				TableSchema.TableColumn colvarNgayKetThuc = new TableSchema.TableColumn(schema);
				colvarNgayKetThuc.ColumnName = "NgayKetThuc";
				colvarNgayKetThuc.DataType = DbType.DateTime;
				colvarNgayKetThuc.MaxLength = 0;
				colvarNgayKetThuc.AutoIncrement = false;
				colvarNgayKetThuc.IsNullable = true;
				colvarNgayKetThuc.IsPrimaryKey = false;
				colvarNgayKetThuc.IsForeignKey = false;
				colvarNgayKetThuc.IsReadOnly = false;
				colvarNgayKetThuc.DefaultSetting = @"";
				colvarNgayKetThuc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayKetThuc);
				
				TableSchema.TableColumn colvarNgayThanhToan = new TableSchema.TableColumn(schema);
				colvarNgayThanhToan.ColumnName = "NgayThanhToan";
				colvarNgayThanhToan.DataType = DbType.DateTime;
				colvarNgayThanhToan.MaxLength = 0;
				colvarNgayThanhToan.AutoIncrement = false;
				colvarNgayThanhToan.IsNullable = true;
				colvarNgayThanhToan.IsPrimaryKey = false;
				colvarNgayThanhToan.IsForeignKey = false;
				colvarNgayThanhToan.IsReadOnly = false;
				colvarNgayThanhToan.DefaultSetting = @"";
				colvarNgayThanhToan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayThanhToan);
				
				TableSchema.TableColumn colvarNguoiThanhToan = new TableSchema.TableColumn(schema);
				colvarNguoiThanhToan.ColumnName = "NguoiThanhToan";
				colvarNguoiThanhToan.DataType = DbType.String;
				colvarNguoiThanhToan.MaxLength = 50;
				colvarNguoiThanhToan.AutoIncrement = false;
				colvarNguoiThanhToan.IsNullable = true;
				colvarNguoiThanhToan.IsPrimaryKey = false;
				colvarNguoiThanhToan.IsForeignKey = false;
				colvarNguoiThanhToan.IsReadOnly = false;
				colvarNguoiThanhToan.DefaultSetting = @"";
				colvarNguoiThanhToan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiThanhToan);
				
				TableSchema.TableColumn colvarTongTien = new TableSchema.TableColumn(schema);
				colvarTongTien.ColumnName = "TongTien";
				colvarTongTien.DataType = DbType.Decimal;
				colvarTongTien.MaxLength = 0;
				colvarTongTien.AutoIncrement = false;
				colvarTongTien.IsNullable = true;
				colvarTongTien.IsPrimaryKey = false;
				colvarTongTien.IsForeignKey = false;
				colvarTongTien.IsReadOnly = false;
				colvarTongTien.DefaultSetting = @"";
				colvarTongTien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTongTien);
				
				TableSchema.TableColumn colvarGiamGia = new TableSchema.TableColumn(schema);
				colvarGiamGia.ColumnName = "GiamGia";
				colvarGiamGia.DataType = DbType.Decimal;
				colvarGiamGia.MaxLength = 0;
				colvarGiamGia.AutoIncrement = false;
				colvarGiamGia.IsNullable = true;
				colvarGiamGia.IsPrimaryKey = false;
				colvarGiamGia.IsForeignKey = false;
				colvarGiamGia.IsReadOnly = false;
				colvarGiamGia.DefaultSetting = @"";
				colvarGiamGia.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGiamGia);
				
				TableSchema.TableColumn colvarMoTaThem = new TableSchema.TableColumn(schema);
				colvarMoTaThem.ColumnName = "MoTaThem";
				colvarMoTaThem.DataType = DbType.String;
				colvarMoTaThem.MaxLength = 200;
				colvarMoTaThem.AutoIncrement = false;
				colvarMoTaThem.IsNullable = true;
				colvarMoTaThem.IsPrimaryKey = false;
				colvarMoTaThem.IsForeignKey = false;
				colvarMoTaThem.IsReadOnly = false;
				colvarMoTaThem.DefaultSetting = @"";
				colvarMoTaThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMoTaThem);
				
				TableSchema.TableColumn colvarGhiChu = new TableSchema.TableColumn(schema);
				colvarGhiChu.ColumnName = "GhiChu";
				colvarGhiChu.DataType = DbType.String;
				colvarGhiChu.MaxLength = 200;
				colvarGhiChu.AutoIncrement = false;
				colvarGhiChu.IsNullable = true;
				colvarGhiChu.IsPrimaryKey = false;
				colvarGhiChu.IsForeignKey = false;
				colvarGhiChu.IsReadOnly = false;
				colvarGhiChu.DefaultSetting = @"";
				colvarGhiChu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGhiChu);
				
				TableSchema.TableColumn colvarNhanXet = new TableSchema.TableColumn(schema);
				colvarNhanXet.ColumnName = "NhanXet";
				colvarNhanXet.DataType = DbType.String;
				colvarNhanXet.MaxLength = 200;
				colvarNhanXet.AutoIncrement = false;
				colvarNhanXet.IsNullable = true;
				colvarNhanXet.IsPrimaryKey = false;
				colvarNhanXet.IsForeignKey = false;
				colvarNhanXet.IsReadOnly = false;
				colvarNhanXet.DefaultSetting = @"";
				colvarNhanXet.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNhanXet);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NguoiTao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NgayTao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "NguoiSua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "NgaySua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarIpMayTao = new TableSchema.TableColumn(schema);
				colvarIpMayTao.ColumnName = "IpMayTao";
				colvarIpMayTao.DataType = DbType.String;
				colvarIpMayTao.MaxLength = 30;
				colvarIpMayTao.AutoIncrement = false;
				colvarIpMayTao.IsNullable = true;
				colvarIpMayTao.IsPrimaryKey = false;
				colvarIpMayTao.IsForeignKey = false;
				colvarIpMayTao.IsReadOnly = false;
				colvarIpMayTao.DefaultSetting = @"";
				colvarIpMayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMayTao);
				
				TableSchema.TableColumn colvarMacMayTao = new TableSchema.TableColumn(schema);
				colvarMacMayTao.ColumnName = "MacMayTao";
				colvarMacMayTao.DataType = DbType.String;
				colvarMacMayTao.MaxLength = 30;
				colvarMacMayTao.AutoIncrement = false;
				colvarMacMayTao.IsNullable = true;
				colvarMacMayTao.IsPrimaryKey = false;
				colvarMacMayTao.IsForeignKey = false;
				colvarMacMayTao.IsReadOnly = false;
				colvarMacMayTao.DefaultSetting = @"";
				colvarMacMayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMacMayTao);
				
				TableSchema.TableColumn colvarIpMaySua = new TableSchema.TableColumn(schema);
				colvarIpMaySua.ColumnName = "IpMaySua";
				colvarIpMaySua.DataType = DbType.String;
				colvarIpMaySua.MaxLength = 30;
				colvarIpMaySua.AutoIncrement = false;
				colvarIpMaySua.IsNullable = true;
				colvarIpMaySua.IsPrimaryKey = false;
				colvarIpMaySua.IsForeignKey = false;
				colvarIpMaySua.IsReadOnly = false;
				colvarIpMaySua.DefaultSetting = @"";
				colvarIpMaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMaySua);
				
				TableSchema.TableColumn colvarMacMaySua = new TableSchema.TableColumn(schema);
				colvarMacMaySua.ColumnName = "MacMaySua";
				colvarMacMaySua.DataType = DbType.String;
				colvarMacMaySua.MaxLength = 30;
				colvarMacMaySua.AutoIncrement = false;
				colvarMacMaySua.IsNullable = true;
				colvarMacMaySua.IsPrimaryKey = false;
				colvarMacMaySua.IsForeignKey = false;
				colvarMacMaySua.IsReadOnly = false;
				colvarMacMaySua.DefaultSetting = @"";
				colvarMacMaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMacMaySua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("ksk_luotkham",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("MaLuotkham")]
		[Bindable(true)]
		public string MaLuotkham 
		{
			get { return GetColumnValue<string>(Columns.MaLuotkham); }
			set { SetColumnValue(Columns.MaLuotkham, value); }
		}
		  
		[XmlAttribute("IdNhanVien")]
		[Bindable(true)]
		public long IdNhanVien 
		{
			get { return GetColumnValue<long>(Columns.IdNhanVien); }
			set { SetColumnValue(Columns.IdNhanVien, value); }
		}
		  
		[XmlAttribute("MaDangKy")]
		[Bindable(true)]
		public string MaDangKy 
		{
			get { return GetColumnValue<string>(Columns.MaDangKy); }
			set { SetColumnValue(Columns.MaDangKy, value); }
		}
		  
		[XmlAttribute("SoLo")]
		[Bindable(true)]
		public string SoLo 
		{
			get { return GetColumnValue<string>(Columns.SoLo); }
			set { SetColumnValue(Columns.SoLo, value); }
		}
		  
		[XmlAttribute("NgayNhap")]
		[Bindable(true)]
		public DateTime NgayNhap 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayNhap); }
			set { SetColumnValue(Columns.NgayNhap, value); }
		}
		  
		[XmlAttribute("NgayKham")]
		[Bindable(true)]
		public DateTime? NgayKham 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayKham); }
			set { SetColumnValue(Columns.NgayKham, value); }
		}
		  
		[XmlAttribute("NguoiKham")]
		[Bindable(true)]
		public string NguoiKham 
		{
			get { return GetColumnValue<string>(Columns.NguoiKham); }
			set { SetColumnValue(Columns.NguoiKham, value); }
		}
		  
		[XmlAttribute("BarCode")]
		[Bindable(true)]
		public string BarCode 
		{
			get { return GetColumnValue<string>(Columns.BarCode); }
			set { SetColumnValue(Columns.BarCode, value); }
		}
		  
		[XmlAttribute("ChanDoan")]
		[Bindable(true)]
		public string ChanDoan 
		{
			get { return GetColumnValue<string>(Columns.ChanDoan); }
			set { SetColumnValue(Columns.ChanDoan, value); }
		}
		  
		[XmlAttribute("ChieuCao")]
		[Bindable(true)]
		public string ChieuCao 
		{
			get { return GetColumnValue<string>(Columns.ChieuCao); }
			set { SetColumnValue(Columns.ChieuCao, value); }
		}
		  
		[XmlAttribute("CanNang")]
		[Bindable(true)]
		public string CanNang 
		{
			get { return GetColumnValue<string>(Columns.CanNang); }
			set { SetColumnValue(Columns.CanNang, value); }
		}
		  
		[XmlAttribute("Bmi")]
		[Bindable(true)]
		public string Bmi 
		{
			get { return GetColumnValue<string>(Columns.Bmi); }
			set { SetColumnValue(Columns.Bmi, value); }
		}
		  
		[XmlAttribute("Mach")]
		[Bindable(true)]
		public string Mach 
		{
			get { return GetColumnValue<string>(Columns.Mach); }
			set { SetColumnValue(Columns.Mach, value); }
		}
		  
		[XmlAttribute("HuyetAp")]
		[Bindable(true)]
		public string HuyetAp 
		{
			get { return GetColumnValue<string>(Columns.HuyetAp); }
			set { SetColumnValue(Columns.HuyetAp, value); }
		}
		  
		[XmlAttribute("NoiKhoa")]
		[Bindable(true)]
		public string NoiKhoa 
		{
			get { return GetColumnValue<string>(Columns.NoiKhoa); }
			set { SetColumnValue(Columns.NoiKhoa, value); }
		}
		  
		[XmlAttribute("TaiMuiHong")]
		[Bindable(true)]
		public string TaiMuiHong 
		{
			get { return GetColumnValue<string>(Columns.TaiMuiHong); }
			set { SetColumnValue(Columns.TaiMuiHong, value); }
		}
		  
		[XmlAttribute("Mat")]
		[Bindable(true)]
		public string Mat 
		{
			get { return GetColumnValue<string>(Columns.Mat); }
			set { SetColumnValue(Columns.Mat, value); }
		}
		  
		[XmlAttribute("DaLieu")]
		[Bindable(true)]
		public string DaLieu 
		{
			get { return GetColumnValue<string>(Columns.DaLieu); }
			set { SetColumnValue(Columns.DaLieu, value); }
		}
		  
		[XmlAttribute("KetLuan")]
		[Bindable(true)]
		public string KetLuan 
		{
			get { return GetColumnValue<string>(Columns.KetLuan); }
			set { SetColumnValue(Columns.KetLuan, value); }
		}
		  
		[XmlAttribute("SoKham")]
		[Bindable(true)]
		public int? SoKham 
		{
			get { return GetColumnValue<int?>(Columns.SoKham); }
			set { SetColumnValue(Columns.SoKham, value); }
		}
		  
		[XmlAttribute("BacSyThucHien")]
		[Bindable(true)]
		public string BacSyThucHien 
		{
			get { return GetColumnValue<string>(Columns.BacSyThucHien); }
			set { SetColumnValue(Columns.BacSyThucHien, value); }
		}
		  
		[XmlAttribute("TrangThai")]
		[Bindable(true)]
		public byte? TrangThai 
		{
			get { return GetColumnValue<byte?>(Columns.TrangThai); }
			set { SetColumnValue(Columns.TrangThai, value); }
		}
		  
		[XmlAttribute("NgayNhanCls")]
		[Bindable(true)]
		public DateTime? NgayNhanCls 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayNhanCls); }
			set { SetColumnValue(Columns.NgayNhanCls, value); }
		}
		  
		[XmlAttribute("LoaiSk")]
		[Bindable(true)]
		public string LoaiSk 
		{
			get { return GetColumnValue<string>(Columns.LoaiSk); }
			set { SetColumnValue(Columns.LoaiSk, value); }
		}
		  
		[XmlAttribute("ChucVu")]
		[Bindable(true)]
		public string ChucVu 
		{
			get { return GetColumnValue<string>(Columns.ChucVu); }
			set { SetColumnValue(Columns.ChucVu, value); }
		}
		  
		[XmlAttribute("IsBenhManTinh")]
		[Bindable(true)]
		public byte? IsBenhManTinh 
		{
			get { return GetColumnValue<byte?>(Columns.IsBenhManTinh); }
			set { SetColumnValue(Columns.IsBenhManTinh, value); }
		}
		  
		[XmlAttribute("IsBenhHiemNgheo")]
		[Bindable(true)]
		public byte? IsBenhHiemNgheo 
		{
			get { return GetColumnValue<byte?>(Columns.IsBenhHiemNgheo); }
			set { SetColumnValue(Columns.IsBenhHiemNgheo, value); }
		}
		  
		[XmlAttribute("NguoiKetThuc")]
		[Bindable(true)]
		public string NguoiKetThuc 
		{
			get { return GetColumnValue<string>(Columns.NguoiKetThuc); }
			set { SetColumnValue(Columns.NguoiKetThuc, value); }
		}
		  
		[XmlAttribute("NgayKetThuc")]
		[Bindable(true)]
		public DateTime? NgayKetThuc 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayKetThuc); }
			set { SetColumnValue(Columns.NgayKetThuc, value); }
		}
		  
		[XmlAttribute("NgayThanhToan")]
		[Bindable(true)]
		public DateTime? NgayThanhToan 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayThanhToan); }
			set { SetColumnValue(Columns.NgayThanhToan, value); }
		}
		  
		[XmlAttribute("NguoiThanhToan")]
		[Bindable(true)]
		public string NguoiThanhToan 
		{
			get { return GetColumnValue<string>(Columns.NguoiThanhToan); }
			set { SetColumnValue(Columns.NguoiThanhToan, value); }
		}
		  
		[XmlAttribute("TongTien")]
		[Bindable(true)]
		public decimal? TongTien 
		{
			get { return GetColumnValue<decimal?>(Columns.TongTien); }
			set { SetColumnValue(Columns.TongTien, value); }
		}
		  
		[XmlAttribute("GiamGia")]
		[Bindable(true)]
		public decimal? GiamGia 
		{
			get { return GetColumnValue<decimal?>(Columns.GiamGia); }
			set { SetColumnValue(Columns.GiamGia, value); }
		}
		  
		[XmlAttribute("MoTaThem")]
		[Bindable(true)]
		public string MoTaThem 
		{
			get { return GetColumnValue<string>(Columns.MoTaThem); }
			set { SetColumnValue(Columns.MoTaThem, value); }
		}
		  
		[XmlAttribute("GhiChu")]
		[Bindable(true)]
		public string GhiChu 
		{
			get { return GetColumnValue<string>(Columns.GhiChu); }
			set { SetColumnValue(Columns.GhiChu, value); }
		}
		  
		[XmlAttribute("NhanXet")]
		[Bindable(true)]
		public string NhanXet 
		{
			get { return GetColumnValue<string>(Columns.NhanXet); }
			set { SetColumnValue(Columns.NhanXet, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("IpMayTao")]
		[Bindable(true)]
		public string IpMayTao 
		{
			get { return GetColumnValue<string>(Columns.IpMayTao); }
			set { SetColumnValue(Columns.IpMayTao, value); }
		}
		  
		[XmlAttribute("MacMayTao")]
		[Bindable(true)]
		public string MacMayTao 
		{
			get { return GetColumnValue<string>(Columns.MacMayTao); }
			set { SetColumnValue(Columns.MacMayTao, value); }
		}
		  
		[XmlAttribute("IpMaySua")]
		[Bindable(true)]
		public string IpMaySua 
		{
			get { return GetColumnValue<string>(Columns.IpMaySua); }
			set { SetColumnValue(Columns.IpMaySua, value); }
		}
		  
		[XmlAttribute("MacMaySua")]
		[Bindable(true)]
		public string MacMaySua 
		{
			get { return GetColumnValue<string>(Columns.MacMaySua); }
			set { SetColumnValue(Columns.MacMaySua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaLuotkham,long varIdNhanVien,string varMaDangKy,string varSoLo,DateTime varNgayNhap,DateTime? varNgayKham,string varNguoiKham,string varBarCode,string varChanDoan,string varChieuCao,string varCanNang,string varBmi,string varMach,string varHuyetAp,string varNoiKhoa,string varTaiMuiHong,string varMat,string varDaLieu,string varKetLuan,int? varSoKham,string varBacSyThucHien,byte? varTrangThai,DateTime? varNgayNhanCls,string varLoaiSk,string varChucVu,byte? varIsBenhManTinh,byte? varIsBenhHiemNgheo,string varNguoiKetThuc,DateTime? varNgayKetThuc,DateTime? varNgayThanhToan,string varNguoiThanhToan,decimal? varTongTien,decimal? varGiamGia,string varMoTaThem,string varGhiChu,string varNhanXet,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua,string varIpMayTao,string varMacMayTao,string varIpMaySua,string varMacMaySua)
		{
			KskLuotkham item = new KskLuotkham();
			
			item.MaLuotkham = varMaLuotkham;
			
			item.IdNhanVien = varIdNhanVien;
			
			item.MaDangKy = varMaDangKy;
			
			item.SoLo = varSoLo;
			
			item.NgayNhap = varNgayNhap;
			
			item.NgayKham = varNgayKham;
			
			item.NguoiKham = varNguoiKham;
			
			item.BarCode = varBarCode;
			
			item.ChanDoan = varChanDoan;
			
			item.ChieuCao = varChieuCao;
			
			item.CanNang = varCanNang;
			
			item.Bmi = varBmi;
			
			item.Mach = varMach;
			
			item.HuyetAp = varHuyetAp;
			
			item.NoiKhoa = varNoiKhoa;
			
			item.TaiMuiHong = varTaiMuiHong;
			
			item.Mat = varMat;
			
			item.DaLieu = varDaLieu;
			
			item.KetLuan = varKetLuan;
			
			item.SoKham = varSoKham;
			
			item.BacSyThucHien = varBacSyThucHien;
			
			item.TrangThai = varTrangThai;
			
			item.NgayNhanCls = varNgayNhanCls;
			
			item.LoaiSk = varLoaiSk;
			
			item.ChucVu = varChucVu;
			
			item.IsBenhManTinh = varIsBenhManTinh;
			
			item.IsBenhHiemNgheo = varIsBenhHiemNgheo;
			
			item.NguoiKetThuc = varNguoiKetThuc;
			
			item.NgayKetThuc = varNgayKetThuc;
			
			item.NgayThanhToan = varNgayThanhToan;
			
			item.NguoiThanhToan = varNguoiThanhToan;
			
			item.TongTien = varTongTien;
			
			item.GiamGia = varGiamGia;
			
			item.MoTaThem = varMoTaThem;
			
			item.GhiChu = varGhiChu;
			
			item.NhanXet = varNhanXet;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
			item.IpMayTao = varIpMayTao;
			
			item.MacMayTao = varMacMayTao;
			
			item.IpMaySua = varIpMaySua;
			
			item.MacMaySua = varMacMaySua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(string varMaLuotkham,long varIdNhanVien,string varMaDangKy,string varSoLo,DateTime varNgayNhap,DateTime? varNgayKham,string varNguoiKham,string varBarCode,string varChanDoan,string varChieuCao,string varCanNang,string varBmi,string varMach,string varHuyetAp,string varNoiKhoa,string varTaiMuiHong,string varMat,string varDaLieu,string varKetLuan,int? varSoKham,string varBacSyThucHien,byte? varTrangThai,DateTime? varNgayNhanCls,string varLoaiSk,string varChucVu,byte? varIsBenhManTinh,byte? varIsBenhHiemNgheo,string varNguoiKetThuc,DateTime? varNgayKetThuc,DateTime? varNgayThanhToan,string varNguoiThanhToan,decimal? varTongTien,decimal? varGiamGia,string varMoTaThem,string varGhiChu,string varNhanXet,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua,string varIpMayTao,string varMacMayTao,string varIpMaySua,string varMacMaySua)
		{
			KskLuotkham item = new KskLuotkham();
			
				item.MaLuotkham = varMaLuotkham;
			
				item.IdNhanVien = varIdNhanVien;
			
				item.MaDangKy = varMaDangKy;
			
				item.SoLo = varSoLo;
			
				item.NgayNhap = varNgayNhap;
			
				item.NgayKham = varNgayKham;
			
				item.NguoiKham = varNguoiKham;
			
				item.BarCode = varBarCode;
			
				item.ChanDoan = varChanDoan;
			
				item.ChieuCao = varChieuCao;
			
				item.CanNang = varCanNang;
			
				item.Bmi = varBmi;
			
				item.Mach = varMach;
			
				item.HuyetAp = varHuyetAp;
			
				item.NoiKhoa = varNoiKhoa;
			
				item.TaiMuiHong = varTaiMuiHong;
			
				item.Mat = varMat;
			
				item.DaLieu = varDaLieu;
			
				item.KetLuan = varKetLuan;
			
				item.SoKham = varSoKham;
			
				item.BacSyThucHien = varBacSyThucHien;
			
				item.TrangThai = varTrangThai;
			
				item.NgayNhanCls = varNgayNhanCls;
			
				item.LoaiSk = varLoaiSk;
			
				item.ChucVu = varChucVu;
			
				item.IsBenhManTinh = varIsBenhManTinh;
			
				item.IsBenhHiemNgheo = varIsBenhHiemNgheo;
			
				item.NguoiKetThuc = varNguoiKetThuc;
			
				item.NgayKetThuc = varNgayKetThuc;
			
				item.NgayThanhToan = varNgayThanhToan;
			
				item.NguoiThanhToan = varNguoiThanhToan;
			
				item.TongTien = varTongTien;
			
				item.GiamGia = varGiamGia;
			
				item.MoTaThem = varMoTaThem;
			
				item.GhiChu = varGhiChu;
			
				item.NhanXet = varNhanXet;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
				item.IpMayTao = varIpMayTao;
			
				item.MacMayTao = varMacMayTao;
			
				item.IpMaySua = varIpMaySua;
			
				item.MacMaySua = varMacMaySua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn MaLuotkhamColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdNhanVienColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDangKyColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLoColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayNhapColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayKhamColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiKhamColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn BarCodeColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn ChanDoanColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn ChieuCaoColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn CanNangColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn BmiColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn MachColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn HuyetApColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NoiKhoaColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn TaiMuiHongColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn MatColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn DaLieuColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn KetLuanColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn SoKhamColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn BacSyThucHienColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayNhanClsColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn LoaiSkColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn ChucVuColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn IsBenhManTinhColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn IsBenhHiemNgheoColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiKetThucColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayKetThucColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayThanhToanColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiThanhToanColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn TongTienColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn GiamGiaColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn MoTaThemColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn GhiChuColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn NhanXetColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[36]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[37]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[38]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[39]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMayTaoColumn
        {
            get { return Schema.Columns[40]; }
        }
        
        
        
        public static TableSchema.TableColumn MacMayTaoColumn
        {
            get { return Schema.Columns[41]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMaySuaColumn
        {
            get { return Schema.Columns[42]; }
        }
        
        
        
        public static TableSchema.TableColumn MacMaySuaColumn
        {
            get { return Schema.Columns[43]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string MaLuotkham = @"MaLuotkham";
			 public static string IdNhanVien = @"IdNhanVien";
			 public static string MaDangKy = @"MaDangKy";
			 public static string SoLo = @"SoLo";
			 public static string NgayNhap = @"NgayNhap";
			 public static string NgayKham = @"NgayKham";
			 public static string NguoiKham = @"NguoiKham";
			 public static string BarCode = @"BarCode";
			 public static string ChanDoan = @"ChanDoan";
			 public static string ChieuCao = @"ChieuCao";
			 public static string CanNang = @"CanNang";
			 public static string Bmi = @"BMI";
			 public static string Mach = @"Mach";
			 public static string HuyetAp = @"HuyetAp";
			 public static string NoiKhoa = @"NoiKhoa";
			 public static string TaiMuiHong = @"TaiMuiHong";
			 public static string Mat = @"Mat";
			 public static string DaLieu = @"DaLieu";
			 public static string KetLuan = @"KetLuan";
			 public static string SoKham = @"SoKham";
			 public static string BacSyThucHien = @"BacSyThucHien";
			 public static string TrangThai = @"TrangThai";
			 public static string NgayNhanCls = @"NgayNhanCls";
			 public static string LoaiSk = @"LoaiSk";
			 public static string ChucVu = @"ChucVu";
			 public static string IsBenhManTinh = @"IsBenhManTinh";
			 public static string IsBenhHiemNgheo = @"IsBenhHiemNgheo";
			 public static string NguoiKetThuc = @"NguoiKetThuc";
			 public static string NgayKetThuc = @"NgayKetThuc";
			 public static string NgayThanhToan = @"NgayThanhToan";
			 public static string NguoiThanhToan = @"NguoiThanhToan";
			 public static string TongTien = @"TongTien";
			 public static string GiamGia = @"GiamGia";
			 public static string MoTaThem = @"MoTaThem";
			 public static string GhiChu = @"GhiChu";
			 public static string NhanXet = @"NhanXet";
			 public static string NguoiTao = @"NguoiTao";
			 public static string NgayTao = @"NgayTao";
			 public static string NguoiSua = @"NguoiSua";
			 public static string NgaySua = @"NgaySua";
			 public static string IpMayTao = @"IpMayTao";
			 public static string MacMayTao = @"MacMayTao";
			 public static string IpMaySua = @"IpMaySua";
			 public static string MacMaySua = @"MacMaySua";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
