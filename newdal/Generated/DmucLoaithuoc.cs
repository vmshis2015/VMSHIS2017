using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the DmucLoaithuoc class.
	/// </summary>
    [Serializable]
	public partial class DmucLoaithuocCollection : ActiveList<DmucLoaithuoc, DmucLoaithuocCollection>
	{	   
		public DmucLoaithuocCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>DmucLoaithuocCollection</returns>
		public DmucLoaithuocCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                DmucLoaithuoc o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the dmuc_loaithuoc table.
	/// </summary>
	[Serializable]
	public partial class DmucLoaithuoc : ActiveRecord<DmucLoaithuoc>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public DmucLoaithuoc()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public DmucLoaithuoc(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public DmucLoaithuoc(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public DmucLoaithuoc(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("dmuc_loaithuoc", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdLoaithuoc = new TableSchema.TableColumn(schema);
				colvarIdLoaithuoc.ColumnName = "id_loaithuoc";
				colvarIdLoaithuoc.DataType = DbType.Int16;
				colvarIdLoaithuoc.MaxLength = 0;
				colvarIdLoaithuoc.AutoIncrement = true;
				colvarIdLoaithuoc.IsNullable = false;
				colvarIdLoaithuoc.IsPrimaryKey = true;
				colvarIdLoaithuoc.IsForeignKey = false;
				colvarIdLoaithuoc.IsReadOnly = false;
				colvarIdLoaithuoc.DefaultSetting = @"";
				colvarIdLoaithuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdLoaithuoc);
				
				TableSchema.TableColumn colvarMaLoaithuoc = new TableSchema.TableColumn(schema);
				colvarMaLoaithuoc.ColumnName = "ma_loaithuoc";
				colvarMaLoaithuoc.DataType = DbType.String;
				colvarMaLoaithuoc.MaxLength = 20;
				colvarMaLoaithuoc.AutoIncrement = false;
				colvarMaLoaithuoc.IsNullable = false;
				colvarMaLoaithuoc.IsPrimaryKey = false;
				colvarMaLoaithuoc.IsForeignKey = false;
				colvarMaLoaithuoc.IsReadOnly = false;
				
						colvarMaLoaithuoc.DefaultSetting = @"(N'THUOC')";
				colvarMaLoaithuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLoaithuoc);
				
				TableSchema.TableColumn colvarTenLoaithuoc = new TableSchema.TableColumn(schema);
				colvarTenLoaithuoc.ColumnName = "ten_loaithuoc";
				colvarTenLoaithuoc.DataType = DbType.String;
				colvarTenLoaithuoc.MaxLength = 255;
				colvarTenLoaithuoc.AutoIncrement = false;
				colvarTenLoaithuoc.IsNullable = false;
				colvarTenLoaithuoc.IsPrimaryKey = false;
				colvarTenLoaithuoc.IsForeignKey = false;
				colvarTenLoaithuoc.IsReadOnly = false;
				colvarTenLoaithuoc.DefaultSetting = @"";
				colvarTenLoaithuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenLoaithuoc);
				
				TableSchema.TableColumn colvarSttHthi = new TableSchema.TableColumn(schema);
				colvarSttHthi.ColumnName = "stt_hthi";
				colvarSttHthi.DataType = DbType.Int16;
				colvarSttHthi.MaxLength = 0;
				colvarSttHthi.AutoIncrement = false;
				colvarSttHthi.IsNullable = false;
				colvarSttHthi.IsPrimaryKey = false;
				colvarSttHthi.IsForeignKey = false;
				colvarSttHthi.IsReadOnly = false;
				colvarSttHthi.DefaultSetting = @"";
				colvarSttHthi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSttHthi);
				
				TableSchema.TableColumn colvarMotaThem = new TableSchema.TableColumn(schema);
				colvarMotaThem.ColumnName = "mota_them";
				colvarMotaThem.DataType = DbType.String;
				colvarMotaThem.MaxLength = 255;
				colvarMotaThem.AutoIncrement = false;
				colvarMotaThem.IsNullable = true;
				colvarMotaThem.IsPrimaryKey = false;
				colvarMotaThem.IsForeignKey = false;
				colvarMotaThem.IsReadOnly = false;
				colvarMotaThem.DefaultSetting = @"";
				colvarMotaThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMotaThem);
				
				TableSchema.TableColumn colvarMaNhomthuoc = new TableSchema.TableColumn(schema);
				colvarMaNhomthuoc.ColumnName = "ma_nhomthuoc";
				colvarMaNhomthuoc.DataType = DbType.String;
				colvarMaNhomthuoc.MaxLength = 20;
				colvarMaNhomthuoc.AutoIncrement = false;
				colvarMaNhomthuoc.IsNullable = true;
				colvarMaNhomthuoc.IsPrimaryKey = false;
				colvarMaNhomthuoc.IsForeignKey = false;
				colvarMaNhomthuoc.IsReadOnly = false;
				colvarMaNhomthuoc.DefaultSetting = @"";
				colvarMaNhomthuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaNhomthuoc);
				
				TableSchema.TableColumn colvarInRieng = new TableSchema.TableColumn(schema);
				colvarInRieng.ColumnName = "in_rieng";
				colvarInRieng.DataType = DbType.Int16;
				colvarInRieng.MaxLength = 0;
				colvarInRieng.AutoIncrement = false;
				colvarInRieng.IsNullable = true;
				colvarInRieng.IsPrimaryKey = false;
				colvarInRieng.IsForeignKey = false;
				colvarInRieng.IsReadOnly = false;
				
						colvarInRieng.DefaultSetting = @"((0))";
				colvarInRieng.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInRieng);
				
				TableSchema.TableColumn colvarKieuThuocvattu = new TableSchema.TableColumn(schema);
				colvarKieuThuocvattu.ColumnName = "kieu_thuocvattu";
				colvarKieuThuocvattu.DataType = DbType.String;
				colvarKieuThuocvattu.MaxLength = 10;
				colvarKieuThuocvattu.AutoIncrement = false;
				colvarKieuThuocvattu.IsNullable = true;
				colvarKieuThuocvattu.IsPrimaryKey = false;
				colvarKieuThuocvattu.IsForeignKey = false;
				colvarKieuThuocvattu.IsReadOnly = false;
				colvarKieuThuocvattu.DefaultSetting = @"";
				colvarKieuThuocvattu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKieuThuocvattu);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("dmuc_loaithuoc",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdLoaithuoc")]
		[Bindable(true)]
		public short IdLoaithuoc 
		{
			get { return GetColumnValue<short>(Columns.IdLoaithuoc); }
			set { SetColumnValue(Columns.IdLoaithuoc, value); }
		}
		  
		[XmlAttribute("MaLoaithuoc")]
		[Bindable(true)]
		public string MaLoaithuoc 
		{
			get { return GetColumnValue<string>(Columns.MaLoaithuoc); }
			set { SetColumnValue(Columns.MaLoaithuoc, value); }
		}
		  
		[XmlAttribute("TenLoaithuoc")]
		[Bindable(true)]
		public string TenLoaithuoc 
		{
			get { return GetColumnValue<string>(Columns.TenLoaithuoc); }
			set { SetColumnValue(Columns.TenLoaithuoc, value); }
		}
		  
		[XmlAttribute("SttHthi")]
		[Bindable(true)]
		public short SttHthi 
		{
			get { return GetColumnValue<short>(Columns.SttHthi); }
			set { SetColumnValue(Columns.SttHthi, value); }
		}
		  
		[XmlAttribute("MotaThem")]
		[Bindable(true)]
		public string MotaThem 
		{
			get { return GetColumnValue<string>(Columns.MotaThem); }
			set { SetColumnValue(Columns.MotaThem, value); }
		}
		  
		[XmlAttribute("MaNhomthuoc")]
		[Bindable(true)]
		public string MaNhomthuoc 
		{
			get { return GetColumnValue<string>(Columns.MaNhomthuoc); }
			set { SetColumnValue(Columns.MaNhomthuoc, value); }
		}
		  
		[XmlAttribute("InRieng")]
		[Bindable(true)]
		public short? InRieng 
		{
			get { return GetColumnValue<short?>(Columns.InRieng); }
			set { SetColumnValue(Columns.InRieng, value); }
		}
		  
		[XmlAttribute("KieuThuocvattu")]
		[Bindable(true)]
		public string KieuThuocvattu 
		{
			get { return GetColumnValue<string>(Columns.KieuThuocvattu); }
			set { SetColumnValue(Columns.KieuThuocvattu, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaLoaithuoc,string varTenLoaithuoc,short varSttHthi,string varMotaThem,string varMaNhomthuoc,short? varInRieng,string varKieuThuocvattu)
		{
			DmucLoaithuoc item = new DmucLoaithuoc();
			
			item.MaLoaithuoc = varMaLoaithuoc;
			
			item.TenLoaithuoc = varTenLoaithuoc;
			
			item.SttHthi = varSttHthi;
			
			item.MotaThem = varMotaThem;
			
			item.MaNhomthuoc = varMaNhomthuoc;
			
			item.InRieng = varInRieng;
			
			item.KieuThuocvattu = varKieuThuocvattu;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(short varIdLoaithuoc,string varMaLoaithuoc,string varTenLoaithuoc,short varSttHthi,string varMotaThem,string varMaNhomthuoc,short? varInRieng,string varKieuThuocvattu)
		{
			DmucLoaithuoc item = new DmucLoaithuoc();
			
				item.IdLoaithuoc = varIdLoaithuoc;
			
				item.MaLoaithuoc = varMaLoaithuoc;
			
				item.TenLoaithuoc = varTenLoaithuoc;
			
				item.SttHthi = varSttHthi;
			
				item.MotaThem = varMotaThem;
			
				item.MaNhomthuoc = varMaNhomthuoc;
			
				item.InRieng = varInRieng;
			
				item.KieuThuocvattu = varKieuThuocvattu;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdLoaithuocColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLoaithuocColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn TenLoaithuocColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn SttHthiColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn MotaThemColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn MaNhomthuocColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn InRiengColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn KieuThuocvattuColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdLoaithuoc = @"id_loaithuoc";
			 public static string MaLoaithuoc = @"ma_loaithuoc";
			 public static string TenLoaithuoc = @"ten_loaithuoc";
			 public static string SttHthi = @"stt_hthi";
			 public static string MotaThem = @"mota_them";
			 public static string MaNhomthuoc = @"ma_nhomthuoc";
			 public static string InRieng = @"in_rieng";
			 public static string KieuThuocvattu = @"kieu_thuocvattu";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
