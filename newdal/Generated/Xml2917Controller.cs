using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
    /// <summary>
    /// Controller class for XML_2_917
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class Xml2917Controller
    {
        // Preload our schema..
        Xml2917 thisSchemaLoad = new Xml2917();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public Xml2917Collection FetchAll()
        {
            Xml2917Collection coll = new Xml2917Collection();
            Query qry = new Query(Xml2917.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public Xml2917Collection FetchByID(object IdXML2)
        {
            Xml2917Collection coll = new Xml2917Collection().Where("ID_XML2", IdXML2).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public Xml2917Collection FetchByQuery(Query qry)
        {
            Xml2917Collection coll = new Xml2917Collection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object IdXML2)
        {
            return (Xml2917.Delete(IdXML2) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object IdXML2)
        {
            return (Xml2917.Destroy(IdXML2) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string MaLk,int? Stt,string MaThuoc,string MaNhom,string TenThuoc,string DonViTinh,string HamLuong,string DuongDung,string LieuDung,string SoDangKy,double? SoLuong,decimal? DonGia,int? TyleTt,decimal? ThanhTien,string MaKhoa,string MaBacSi,string MaBenh,string NgayYl,int? MaPttt,string TtThau,int? PhamVi,decimal? MucHuong,decimal? TNguonkhac,decimal? TBntt,decimal? TBhtt,decimal? TBncct,decimal? TNgoaids)
	    {
		    Xml2917 item = new Xml2917();
		    
            item.MaLk = MaLk;
            
            item.Stt = Stt;
            
            item.MaThuoc = MaThuoc;
            
            item.MaNhom = MaNhom;
            
            item.TenThuoc = TenThuoc;
            
            item.DonViTinh = DonViTinh;
            
            item.HamLuong = HamLuong;
            
            item.DuongDung = DuongDung;
            
            item.LieuDung = LieuDung;
            
            item.SoDangKy = SoDangKy;
            
            item.SoLuong = SoLuong;
            
            item.DonGia = DonGia;
            
            item.TyleTt = TyleTt;
            
            item.ThanhTien = ThanhTien;
            
            item.MaKhoa = MaKhoa;
            
            item.MaBacSi = MaBacSi;
            
            item.MaBenh = MaBenh;
            
            item.NgayYl = NgayYl;
            
            item.MaPttt = MaPttt;
            
            item.TtThau = TtThau;
            
            item.PhamVi = PhamVi;
            
            item.MucHuong = MucHuong;
            
            item.TNguonkhac = TNguonkhac;
            
            item.TBntt = TBntt;
            
            item.TBhtt = TBhtt;
            
            item.TBncct = TBncct;
            
            item.TNgoaids = TNgoaids;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long IdXML2,string MaLk,int? Stt,string MaThuoc,string MaNhom,string TenThuoc,string DonViTinh,string HamLuong,string DuongDung,string LieuDung,string SoDangKy,double? SoLuong,decimal? DonGia,int? TyleTt,decimal? ThanhTien,string MaKhoa,string MaBacSi,string MaBenh,string NgayYl,int? MaPttt,string TtThau,int? PhamVi,decimal? MucHuong,decimal? TNguonkhac,decimal? TBntt,decimal? TBhtt,decimal? TBncct,decimal? TNgoaids)
	    {
		    Xml2917 item = new Xml2917();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.IdXML2 = IdXML2;
				
			item.MaLk = MaLk;
				
			item.Stt = Stt;
				
			item.MaThuoc = MaThuoc;
				
			item.MaNhom = MaNhom;
				
			item.TenThuoc = TenThuoc;
				
			item.DonViTinh = DonViTinh;
				
			item.HamLuong = HamLuong;
				
			item.DuongDung = DuongDung;
				
			item.LieuDung = LieuDung;
				
			item.SoDangKy = SoDangKy;
				
			item.SoLuong = SoLuong;
				
			item.DonGia = DonGia;
				
			item.TyleTt = TyleTt;
				
			item.ThanhTien = ThanhTien;
				
			item.MaKhoa = MaKhoa;
				
			item.MaBacSi = MaBacSi;
				
			item.MaBenh = MaBenh;
				
			item.NgayYl = NgayYl;
				
			item.MaPttt = MaPttt;
				
			item.TtThau = TtThau;
				
			item.PhamVi = PhamVi;
				
			item.MucHuong = MucHuong;
				
			item.TNguonkhac = TNguonkhac;
				
			item.TBntt = TBntt;
				
			item.TBhtt = TBhtt;
				
			item.TBncct = TBncct;
				
			item.TNgoaids = TNgoaids;
				
	        item.Save(UserName);
	    }
    }
}
