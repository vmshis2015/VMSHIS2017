using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the KnDanhsachKhachhang class.
	/// </summary>
    [Serializable]
	public partial class KnDanhsachKhachhangCollection : ActiveList<KnDanhsachKhachhang, KnDanhsachKhachhangCollection>
	{	   
		public KnDanhsachKhachhangCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>KnDanhsachKhachhangCollection</returns>
		public KnDanhsachKhachhangCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                KnDanhsachKhachhang o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the kn_danhsach_khachhang table.
	/// </summary>
	[Serializable]
	public partial class KnDanhsachKhachhang : ActiveRecord<KnDanhsachKhachhang>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public KnDanhsachKhachhang()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public KnDanhsachKhachhang(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public KnDanhsachKhachhang(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public KnDanhsachKhachhang(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("kn_danhsach_khachhang", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdKhachhang = new TableSchema.TableColumn(schema);
				colvarIdKhachhang.ColumnName = "id_khachhang";
				colvarIdKhachhang.DataType = DbType.Int64;
				colvarIdKhachhang.MaxLength = 0;
				colvarIdKhachhang.AutoIncrement = true;
				colvarIdKhachhang.IsNullable = false;
				colvarIdKhachhang.IsPrimaryKey = true;
				colvarIdKhachhang.IsForeignKey = false;
				colvarIdKhachhang.IsReadOnly = false;
				colvarIdKhachhang.DefaultSetting = @"";
				colvarIdKhachhang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhachhang);
				
				TableSchema.TableColumn colvarTenKhachhang = new TableSchema.TableColumn(schema);
				colvarTenKhachhang.ColumnName = "ten_khachhang";
				colvarTenKhachhang.DataType = DbType.String;
				colvarTenKhachhang.MaxLength = 100;
				colvarTenKhachhang.AutoIncrement = false;
				colvarTenKhachhang.IsNullable = false;
				colvarTenKhachhang.IsPrimaryKey = false;
				colvarTenKhachhang.IsForeignKey = false;
				colvarTenKhachhang.IsReadOnly = false;
				colvarTenKhachhang.DefaultSetting = @"";
				colvarTenKhachhang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenKhachhang);
				
				TableSchema.TableColumn colvarDiaChi = new TableSchema.TableColumn(schema);
				colvarDiaChi.ColumnName = "dia_chi";
				colvarDiaChi.DataType = DbType.String;
				colvarDiaChi.MaxLength = 100;
				colvarDiaChi.AutoIncrement = false;
				colvarDiaChi.IsNullable = true;
				colvarDiaChi.IsPrimaryKey = false;
				colvarDiaChi.IsForeignKey = false;
				colvarDiaChi.IsReadOnly = false;
				colvarDiaChi.DefaultSetting = @"";
				colvarDiaChi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiaChi);
				
				TableSchema.TableColumn colvarNguoiLienhe = new TableSchema.TableColumn(schema);
				colvarNguoiLienhe.ColumnName = "nguoi_lienhe";
				colvarNguoiLienhe.DataType = DbType.String;
				colvarNguoiLienhe.MaxLength = 100;
				colvarNguoiLienhe.AutoIncrement = false;
				colvarNguoiLienhe.IsNullable = true;
				colvarNguoiLienhe.IsPrimaryKey = false;
				colvarNguoiLienhe.IsForeignKey = false;
				colvarNguoiLienhe.IsReadOnly = false;
				colvarNguoiLienhe.DefaultSetting = @"";
				colvarNguoiLienhe.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiLienhe);
				
				TableSchema.TableColumn colvarDienThoai = new TableSchema.TableColumn(schema);
				colvarDienThoai.ColumnName = "dien_thoai";
				colvarDienThoai.DataType = DbType.AnsiString;
				colvarDienThoai.MaxLength = 15;
				colvarDienThoai.AutoIncrement = false;
				colvarDienThoai.IsNullable = true;
				colvarDienThoai.IsPrimaryKey = false;
				colvarDienThoai.IsForeignKey = false;
				colvarDienThoai.IsReadOnly = false;
				colvarDienThoai.DefaultSetting = @"";
				colvarDienThoai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDienThoai);
				
				TableSchema.TableColumn colvarEmail = new TableSchema.TableColumn(schema);
				colvarEmail.ColumnName = "email";
				colvarEmail.DataType = DbType.AnsiString;
				colvarEmail.MaxLength = 50;
				colvarEmail.AutoIncrement = false;
				colvarEmail.IsNullable = true;
				colvarEmail.IsPrimaryKey = false;
				colvarEmail.IsForeignKey = false;
				colvarEmail.IsReadOnly = false;
				colvarEmail.DefaultSetting = @"";
				colvarEmail.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEmail);
				
				TableSchema.TableColumn colvarFax = new TableSchema.TableColumn(schema);
				colvarFax.ColumnName = "fax";
				colvarFax.DataType = DbType.AnsiString;
				colvarFax.MaxLength = 15;
				colvarFax.AutoIncrement = false;
				colvarFax.IsNullable = true;
				colvarFax.IsPrimaryKey = false;
				colvarFax.IsForeignKey = false;
				colvarFax.IsReadOnly = false;
				colvarFax.DefaultSetting = @"";
				colvarFax.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFax);
				
				TableSchema.TableColumn colvarSolanDky = new TableSchema.TableColumn(schema);
				colvarSolanDky.ColumnName = "solan_dky";
				colvarSolanDky.DataType = DbType.Int16;
				colvarSolanDky.MaxLength = 0;
				colvarSolanDky.AutoIncrement = false;
				colvarSolanDky.IsNullable = true;
				colvarSolanDky.IsPrimaryKey = false;
				colvarSolanDky.IsForeignKey = false;
				colvarSolanDky.IsReadOnly = false;
				colvarSolanDky.DefaultSetting = @"";
				colvarSolanDky.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSolanDky);
				
				TableSchema.TableColumn colvarMotaThem = new TableSchema.TableColumn(schema);
				colvarMotaThem.ColumnName = "mota_them";
				colvarMotaThem.DataType = DbType.String;
				colvarMotaThem.MaxLength = 100;
				colvarMotaThem.AutoIncrement = false;
				colvarMotaThem.IsNullable = true;
				colvarMotaThem.IsPrimaryKey = false;
				colvarMotaThem.IsForeignKey = false;
				colvarMotaThem.IsReadOnly = false;
				colvarMotaThem.DefaultSetting = @"";
				colvarMotaThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMotaThem);
				
				TableSchema.TableColumn colvarNgayDangky = new TableSchema.TableColumn(schema);
				colvarNgayDangky.ColumnName = "ngay_dangky";
				colvarNgayDangky.DataType = DbType.DateTime;
				colvarNgayDangky.MaxLength = 0;
				colvarNgayDangky.AutoIncrement = false;
				colvarNgayDangky.IsNullable = true;
				colvarNgayDangky.IsPrimaryKey = false;
				colvarNgayDangky.IsForeignKey = false;
				colvarNgayDangky.IsReadOnly = false;
				colvarNgayDangky.DefaultSetting = @"";
				colvarNgayDangky.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayDangky);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.AnsiString;
				colvarNguoiTao.MaxLength = 15;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.AnsiString;
				colvarNguoiSua.MaxLength = 15;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarIpMaytao = new TableSchema.TableColumn(schema);
				colvarIpMaytao.ColumnName = "ip_maytao";
				colvarIpMaytao.DataType = DbType.AnsiString;
				colvarIpMaytao.MaxLength = 15;
				colvarIpMaytao.AutoIncrement = false;
				colvarIpMaytao.IsNullable = true;
				colvarIpMaytao.IsPrimaryKey = false;
				colvarIpMaytao.IsForeignKey = false;
				colvarIpMaytao.IsReadOnly = false;
				colvarIpMaytao.DefaultSetting = @"";
				colvarIpMaytao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMaytao);
				
				TableSchema.TableColumn colvarIpMaysua = new TableSchema.TableColumn(schema);
				colvarIpMaysua.ColumnName = "ip_maysua";
				colvarIpMaysua.DataType = DbType.AnsiString;
				colvarIpMaysua.MaxLength = 15;
				colvarIpMaysua.AutoIncrement = false;
				colvarIpMaysua.IsNullable = true;
				colvarIpMaysua.IsPrimaryKey = false;
				colvarIpMaysua.IsForeignKey = false;
				colvarIpMaysua.IsReadOnly = false;
				colvarIpMaysua.DefaultSetting = @"";
				colvarIpMaysua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMaysua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("kn_danhsach_khachhang",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdKhachhang")]
		[Bindable(true)]
		public long IdKhachhang 
		{
			get { return GetColumnValue<long>(Columns.IdKhachhang); }
			set { SetColumnValue(Columns.IdKhachhang, value); }
		}
		  
		[XmlAttribute("TenKhachhang")]
		[Bindable(true)]
		public string TenKhachhang 
		{
			get { return GetColumnValue<string>(Columns.TenKhachhang); }
			set { SetColumnValue(Columns.TenKhachhang, value); }
		}
		  
		[XmlAttribute("DiaChi")]
		[Bindable(true)]
		public string DiaChi 
		{
			get { return GetColumnValue<string>(Columns.DiaChi); }
			set { SetColumnValue(Columns.DiaChi, value); }
		}
		  
		[XmlAttribute("NguoiLienhe")]
		[Bindable(true)]
		public string NguoiLienhe 
		{
			get { return GetColumnValue<string>(Columns.NguoiLienhe); }
			set { SetColumnValue(Columns.NguoiLienhe, value); }
		}
		  
		[XmlAttribute("DienThoai")]
		[Bindable(true)]
		public string DienThoai 
		{
			get { return GetColumnValue<string>(Columns.DienThoai); }
			set { SetColumnValue(Columns.DienThoai, value); }
		}
		  
		[XmlAttribute("Email")]
		[Bindable(true)]
		public string Email 
		{
			get { return GetColumnValue<string>(Columns.Email); }
			set { SetColumnValue(Columns.Email, value); }
		}
		  
		[XmlAttribute("Fax")]
		[Bindable(true)]
		public string Fax 
		{
			get { return GetColumnValue<string>(Columns.Fax); }
			set { SetColumnValue(Columns.Fax, value); }
		}
		  
		[XmlAttribute("SolanDky")]
		[Bindable(true)]
		public short? SolanDky 
		{
			get { return GetColumnValue<short?>(Columns.SolanDky); }
			set { SetColumnValue(Columns.SolanDky, value); }
		}
		  
		[XmlAttribute("MotaThem")]
		[Bindable(true)]
		public string MotaThem 
		{
			get { return GetColumnValue<string>(Columns.MotaThem); }
			set { SetColumnValue(Columns.MotaThem, value); }
		}
		  
		[XmlAttribute("NgayDangky")]
		[Bindable(true)]
		public DateTime? NgayDangky 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayDangky); }
			set { SetColumnValue(Columns.NgayDangky, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("IpMaytao")]
		[Bindable(true)]
		public string IpMaytao 
		{
			get { return GetColumnValue<string>(Columns.IpMaytao); }
			set { SetColumnValue(Columns.IpMaytao, value); }
		}
		  
		[XmlAttribute("IpMaysua")]
		[Bindable(true)]
		public string IpMaysua 
		{
			get { return GetColumnValue<string>(Columns.IpMaysua); }
			set { SetColumnValue(Columns.IpMaysua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varTenKhachhang,string varDiaChi,string varNguoiLienhe,string varDienThoai,string varEmail,string varFax,short? varSolanDky,string varMotaThem,DateTime? varNgayDangky,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua,string varIpMaytao,string varIpMaysua)
		{
			KnDanhsachKhachhang item = new KnDanhsachKhachhang();
			
			item.TenKhachhang = varTenKhachhang;
			
			item.DiaChi = varDiaChi;
			
			item.NguoiLienhe = varNguoiLienhe;
			
			item.DienThoai = varDienThoai;
			
			item.Email = varEmail;
			
			item.Fax = varFax;
			
			item.SolanDky = varSolanDky;
			
			item.MotaThem = varMotaThem;
			
			item.NgayDangky = varNgayDangky;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
			item.IpMaytao = varIpMaytao;
			
			item.IpMaysua = varIpMaysua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varIdKhachhang,string varTenKhachhang,string varDiaChi,string varNguoiLienhe,string varDienThoai,string varEmail,string varFax,short? varSolanDky,string varMotaThem,DateTime? varNgayDangky,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua,string varIpMaytao,string varIpMaysua)
		{
			KnDanhsachKhachhang item = new KnDanhsachKhachhang();
			
				item.IdKhachhang = varIdKhachhang;
			
				item.TenKhachhang = varTenKhachhang;
			
				item.DiaChi = varDiaChi;
			
				item.NguoiLienhe = varNguoiLienhe;
			
				item.DienThoai = varDienThoai;
			
				item.Email = varEmail;
			
				item.Fax = varFax;
			
				item.SolanDky = varSolanDky;
			
				item.MotaThem = varMotaThem;
			
				item.NgayDangky = varNgayDangky;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
				item.IpMaytao = varIpMaytao;
			
				item.IpMaysua = varIpMaysua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdKhachhangColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn TenKhachhangColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn DiaChiColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiLienheColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn DienThoaiColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn EmailColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn FaxColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn SolanDkyColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn MotaThemColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayDangkyColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMaytaoColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMaysuaColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdKhachhang = @"id_khachhang";
			 public static string TenKhachhang = @"ten_khachhang";
			 public static string DiaChi = @"dia_chi";
			 public static string NguoiLienhe = @"nguoi_lienhe";
			 public static string DienThoai = @"dien_thoai";
			 public static string Email = @"email";
			 public static string Fax = @"fax";
			 public static string SolanDky = @"solan_dky";
			 public static string MotaThem = @"mota_them";
			 public static string NgayDangky = @"ngay_dangky";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiSua = @"nguoi_sua";
			 public static string NgaySua = @"ngay_sua";
			 public static string IpMaytao = @"ip_maytao";
			 public static string IpMaysua = @"ip_maysua";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
