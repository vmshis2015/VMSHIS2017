using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the NoitruBienbanHoichan class.
	/// </summary>
    [Serializable]
	public partial class NoitruBienbanHoichanCollection : ActiveList<NoitruBienbanHoichan, NoitruBienbanHoichanCollection>
	{	   
		public NoitruBienbanHoichanCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>NoitruBienbanHoichanCollection</returns>
		public NoitruBienbanHoichanCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                NoitruBienbanHoichan o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the noitru_bienban_hoichan table.
	/// </summary>
	[Serializable]
	public partial class NoitruBienbanHoichan : ActiveRecord<NoitruBienbanHoichan>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public NoitruBienbanHoichan()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public NoitruBienbanHoichan(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public NoitruBienbanHoichan(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public NoitruBienbanHoichan(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("noitru_bienban_hoichan", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int64;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = false;
				colvarIdBenhnhan.IsPrimaryKey = false;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarMaLuotkham = new TableSchema.TableColumn(schema);
				colvarMaLuotkham.ColumnName = "ma_luotkham";
				colvarMaLuotkham.DataType = DbType.String;
				colvarMaLuotkham.MaxLength = 50;
				colvarMaLuotkham.AutoIncrement = false;
				colvarMaLuotkham.IsNullable = false;
				colvarMaLuotkham.IsPrimaryKey = false;
				colvarMaLuotkham.IsForeignKey = false;
				colvarMaLuotkham.IsReadOnly = false;
				colvarMaLuotkham.DefaultSetting = @"";
				colvarMaLuotkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLuotkham);
				
				TableSchema.TableColumn colvarIdBuong = new TableSchema.TableColumn(schema);
				colvarIdBuong.ColumnName = "id_buong";
				colvarIdBuong.DataType = DbType.Int32;
				colvarIdBuong.MaxLength = 0;
				colvarIdBuong.AutoIncrement = false;
				colvarIdBuong.IsNullable = true;
				colvarIdBuong.IsPrimaryKey = false;
				colvarIdBuong.IsForeignKey = false;
				colvarIdBuong.IsReadOnly = false;
				colvarIdBuong.DefaultSetting = @"";
				colvarIdBuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBuong);
				
				TableSchema.TableColumn colvarIdGiuong = new TableSchema.TableColumn(schema);
				colvarIdGiuong.ColumnName = "id_giuong";
				colvarIdGiuong.DataType = DbType.Int32;
				colvarIdGiuong.MaxLength = 0;
				colvarIdGiuong.AutoIncrement = false;
				colvarIdGiuong.IsNullable = true;
				colvarIdGiuong.IsPrimaryKey = false;
				colvarIdGiuong.IsForeignKey = false;
				colvarIdGiuong.IsReadOnly = false;
				colvarIdGiuong.DefaultSetting = @"";
				colvarIdGiuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdGiuong);
				
				TableSchema.TableColumn colvarChanDoan = new TableSchema.TableColumn(schema);
				colvarChanDoan.ColumnName = "chan_doan";
				colvarChanDoan.DataType = DbType.String;
				colvarChanDoan.MaxLength = 200;
				colvarChanDoan.AutoIncrement = false;
				colvarChanDoan.IsNullable = true;
				colvarChanDoan.IsPrimaryKey = false;
				colvarChanDoan.IsForeignKey = false;
				colvarChanDoan.IsReadOnly = false;
				colvarChanDoan.DefaultSetting = @"";
				colvarChanDoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChanDoan);
				
				TableSchema.TableColumn colvarChuToa = new TableSchema.TableColumn(schema);
				colvarChuToa.ColumnName = "chu_toa";
				colvarChuToa.DataType = DbType.String;
				colvarChuToa.MaxLength = 200;
				colvarChuToa.AutoIncrement = false;
				colvarChuToa.IsNullable = true;
				colvarChuToa.IsPrimaryKey = false;
				colvarChuToa.IsForeignKey = false;
				colvarChuToa.IsReadOnly = false;
				colvarChuToa.DefaultSetting = @"";
				colvarChuToa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChuToa);
				
				TableSchema.TableColumn colvarThuKy = new TableSchema.TableColumn(schema);
				colvarThuKy.ColumnName = "thu_ky";
				colvarThuKy.DataType = DbType.String;
				colvarThuKy.MaxLength = 200;
				colvarThuKy.AutoIncrement = false;
				colvarThuKy.IsNullable = true;
				colvarThuKy.IsPrimaryKey = false;
				colvarThuKy.IsForeignKey = false;
				colvarThuKy.IsReadOnly = false;
				colvarThuKy.DefaultSetting = @"";
				colvarThuKy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThuKy);
				
				TableSchema.TableColumn colvarThanhVien = new TableSchema.TableColumn(schema);
				colvarThanhVien.ColumnName = "thanh_vien";
				colvarThanhVien.DataType = DbType.String;
				colvarThanhVien.MaxLength = 200;
				colvarThanhVien.AutoIncrement = false;
				colvarThanhVien.IsNullable = true;
				colvarThanhVien.IsPrimaryKey = false;
				colvarThanhVien.IsForeignKey = false;
				colvarThanhVien.IsReadOnly = false;
				colvarThanhVien.DefaultSetting = @"";
				colvarThanhVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThanhVien);
				
				TableSchema.TableColumn colvarNgayLap = new TableSchema.TableColumn(schema);
				colvarNgayLap.ColumnName = "ngay_lap";
				colvarNgayLap.DataType = DbType.DateTime;
				colvarNgayLap.MaxLength = 0;
				colvarNgayLap.AutoIncrement = false;
				colvarNgayLap.IsNullable = true;
				colvarNgayLap.IsPrimaryKey = false;
				colvarNgayLap.IsForeignKey = false;
				colvarNgayLap.IsReadOnly = false;
				colvarNgayLap.DefaultSetting = @"";
				colvarNgayLap.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayLap);
				
				TableSchema.TableColumn colvarTomtatQtrinh = new TableSchema.TableColumn(schema);
				colvarTomtatQtrinh.ColumnName = "tomtat_qtrinh";
				colvarTomtatQtrinh.DataType = DbType.String;
				colvarTomtatQtrinh.MaxLength = 2000;
				colvarTomtatQtrinh.AutoIncrement = false;
				colvarTomtatQtrinh.IsNullable = true;
				colvarTomtatQtrinh.IsPrimaryKey = false;
				colvarTomtatQtrinh.IsForeignKey = false;
				colvarTomtatQtrinh.IsReadOnly = false;
				colvarTomtatQtrinh.DefaultSetting = @"";
				colvarTomtatQtrinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTomtatQtrinh);
				
				TableSchema.TableColumn colvarKetluan = new TableSchema.TableColumn(schema);
				colvarKetluan.ColumnName = "ketluan";
				colvarKetluan.DataType = DbType.String;
				colvarKetluan.MaxLength = 2000;
				colvarKetluan.AutoIncrement = false;
				colvarKetluan.IsNullable = true;
				colvarKetluan.IsPrimaryKey = false;
				colvarKetluan.IsForeignKey = false;
				colvarKetluan.IsReadOnly = false;
				colvarKetluan.DefaultSetting = @"";
				colvarKetluan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKetluan);
				
				TableSchema.TableColumn colvarHuongDtri = new TableSchema.TableColumn(schema);
				colvarHuongDtri.ColumnName = "huong_dtri";
				colvarHuongDtri.DataType = DbType.String;
				colvarHuongDtri.MaxLength = 2000;
				colvarHuongDtri.AutoIncrement = false;
				colvarHuongDtri.IsNullable = true;
				colvarHuongDtri.IsPrimaryKey = false;
				colvarHuongDtri.IsForeignKey = false;
				colvarHuongDtri.IsReadOnly = false;
				colvarHuongDtri.DefaultSetting = @"";
				colvarHuongDtri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHuongDtri);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarIpMaytao = new TableSchema.TableColumn(schema);
				colvarIpMaytao.ColumnName = "ip_maytao";
				colvarIpMaytao.DataType = DbType.String;
				colvarIpMaytao.MaxLength = 50;
				colvarIpMaytao.AutoIncrement = false;
				colvarIpMaytao.IsNullable = true;
				colvarIpMaytao.IsPrimaryKey = false;
				colvarIpMaytao.IsForeignKey = false;
				colvarIpMaytao.IsReadOnly = false;
				colvarIpMaytao.DefaultSetting = @"";
				colvarIpMaytao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMaytao);
				
				TableSchema.TableColumn colvarIpMaysua = new TableSchema.TableColumn(schema);
				colvarIpMaysua.ColumnName = "ip_maysua";
				colvarIpMaysua.DataType = DbType.String;
				colvarIpMaysua.MaxLength = 50;
				colvarIpMaysua.AutoIncrement = false;
				colvarIpMaysua.IsNullable = true;
				colvarIpMaysua.IsPrimaryKey = false;
				colvarIpMaysua.IsForeignKey = false;
				colvarIpMaysua.IsReadOnly = false;
				colvarIpMaysua.DefaultSetting = @"";
				colvarIpMaysua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMaysua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("noitru_bienban_hoichan",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public long Id 
		{
			get { return GetColumnValue<long>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long IdBenhnhan 
		{
			get { return GetColumnValue<long>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("MaLuotkham")]
		[Bindable(true)]
		public string MaLuotkham 
		{
			get { return GetColumnValue<string>(Columns.MaLuotkham); }
			set { SetColumnValue(Columns.MaLuotkham, value); }
		}
		  
		[XmlAttribute("IdBuong")]
		[Bindable(true)]
		public int? IdBuong 
		{
			get { return GetColumnValue<int?>(Columns.IdBuong); }
			set { SetColumnValue(Columns.IdBuong, value); }
		}
		  
		[XmlAttribute("IdGiuong")]
		[Bindable(true)]
		public int? IdGiuong 
		{
			get { return GetColumnValue<int?>(Columns.IdGiuong); }
			set { SetColumnValue(Columns.IdGiuong, value); }
		}
		  
		[XmlAttribute("ChanDoan")]
		[Bindable(true)]
		public string ChanDoan 
		{
			get { return GetColumnValue<string>(Columns.ChanDoan); }
			set { SetColumnValue(Columns.ChanDoan, value); }
		}
		  
		[XmlAttribute("ChuToa")]
		[Bindable(true)]
		public string ChuToa 
		{
			get { return GetColumnValue<string>(Columns.ChuToa); }
			set { SetColumnValue(Columns.ChuToa, value); }
		}
		  
		[XmlAttribute("ThuKy")]
		[Bindable(true)]
		public string ThuKy 
		{
			get { return GetColumnValue<string>(Columns.ThuKy); }
			set { SetColumnValue(Columns.ThuKy, value); }
		}
		  
		[XmlAttribute("ThanhVien")]
		[Bindable(true)]
		public string ThanhVien 
		{
			get { return GetColumnValue<string>(Columns.ThanhVien); }
			set { SetColumnValue(Columns.ThanhVien, value); }
		}
		  
		[XmlAttribute("NgayLap")]
		[Bindable(true)]
		public DateTime? NgayLap 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayLap); }
			set { SetColumnValue(Columns.NgayLap, value); }
		}
		  
		[XmlAttribute("TomtatQtrinh")]
		[Bindable(true)]
		public string TomtatQtrinh 
		{
			get { return GetColumnValue<string>(Columns.TomtatQtrinh); }
			set { SetColumnValue(Columns.TomtatQtrinh, value); }
		}
		  
		[XmlAttribute("Ketluan")]
		[Bindable(true)]
		public string Ketluan 
		{
			get { return GetColumnValue<string>(Columns.Ketluan); }
			set { SetColumnValue(Columns.Ketluan, value); }
		}
		  
		[XmlAttribute("HuongDtri")]
		[Bindable(true)]
		public string HuongDtri 
		{
			get { return GetColumnValue<string>(Columns.HuongDtri); }
			set { SetColumnValue(Columns.HuongDtri, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("IpMaytao")]
		[Bindable(true)]
		public string IpMaytao 
		{
			get { return GetColumnValue<string>(Columns.IpMaytao); }
			set { SetColumnValue(Columns.IpMaytao, value); }
		}
		  
		[XmlAttribute("IpMaysua")]
		[Bindable(true)]
		public string IpMaysua 
		{
			get { return GetColumnValue<string>(Columns.IpMaysua); }
			set { SetColumnValue(Columns.IpMaysua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(long varIdBenhnhan,string varMaLuotkham,int? varIdBuong,int? varIdGiuong,string varChanDoan,string varChuToa,string varThuKy,string varThanhVien,DateTime? varNgayLap,string varTomtatQtrinh,string varKetluan,string varHuongDtri,DateTime? varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua,string varIpMaytao,string varIpMaysua)
		{
			NoitruBienbanHoichan item = new NoitruBienbanHoichan();
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.MaLuotkham = varMaLuotkham;
			
			item.IdBuong = varIdBuong;
			
			item.IdGiuong = varIdGiuong;
			
			item.ChanDoan = varChanDoan;
			
			item.ChuToa = varChuToa;
			
			item.ThuKy = varThuKy;
			
			item.ThanhVien = varThanhVien;
			
			item.NgayLap = varNgayLap;
			
			item.TomtatQtrinh = varTomtatQtrinh;
			
			item.Ketluan = varKetluan;
			
			item.HuongDtri = varHuongDtri;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiSua = varNguoiSua;
			
			item.IpMaytao = varIpMaytao;
			
			item.IpMaysua = varIpMaysua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varId,long varIdBenhnhan,string varMaLuotkham,int? varIdBuong,int? varIdGiuong,string varChanDoan,string varChuToa,string varThuKy,string varThanhVien,DateTime? varNgayLap,string varTomtatQtrinh,string varKetluan,string varHuongDtri,DateTime? varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua,string varIpMaytao,string varIpMaysua)
		{
			NoitruBienbanHoichan item = new NoitruBienbanHoichan();
			
				item.Id = varId;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.MaLuotkham = varMaLuotkham;
			
				item.IdBuong = varIdBuong;
			
				item.IdGiuong = varIdGiuong;
			
				item.ChanDoan = varChanDoan;
			
				item.ChuToa = varChuToa;
			
				item.ThuKy = varThuKy;
			
				item.ThanhVien = varThanhVien;
			
				item.NgayLap = varNgayLap;
			
				item.TomtatQtrinh = varTomtatQtrinh;
			
				item.Ketluan = varKetluan;
			
				item.HuongDtri = varHuongDtri;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiSua = varNguoiSua;
			
				item.IpMaytao = varIpMaytao;
			
				item.IpMaysua = varIpMaysua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLuotkhamColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBuongColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdGiuongColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn ChanDoanColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn ChuToaColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn ThuKyColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn ThanhVienColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayLapColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn TomtatQtrinhColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn KetluanColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn HuongDtriColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMaytaoColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMaysuaColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"id";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string MaLuotkham = @"ma_luotkham";
			 public static string IdBuong = @"id_buong";
			 public static string IdGiuong = @"id_giuong";
			 public static string ChanDoan = @"chan_doan";
			 public static string ChuToa = @"chu_toa";
			 public static string ThuKy = @"thu_ky";
			 public static string ThanhVien = @"thanh_vien";
			 public static string NgayLap = @"ngay_lap";
			 public static string TomtatQtrinh = @"tomtat_qtrinh";
			 public static string Ketluan = @"ketluan";
			 public static string HuongDtri = @"huong_dtri";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgaySua = @"ngay_sua";
			 public static string NguoiSua = @"nguoi_sua";
			 public static string IpMaytao = @"ip_maytao";
			 public static string IpMaysua = @"ip_maysua";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
