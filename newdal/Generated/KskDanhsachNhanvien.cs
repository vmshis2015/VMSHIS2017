using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the KskDanhsachNhanvien class.
	/// </summary>
    [Serializable]
	public partial class KskDanhsachNhanvienCollection : ActiveList<KskDanhsachNhanvien, KskDanhsachNhanvienCollection>
	{	   
		public KskDanhsachNhanvienCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>KskDanhsachNhanvienCollection</returns>
		public KskDanhsachNhanvienCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                KskDanhsachNhanvien o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the ksk_danhsach_nhanvien table.
	/// </summary>
	[Serializable]
	public partial class KskDanhsachNhanvien : ActiveRecord<KskDanhsachNhanvien>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public KskDanhsachNhanvien()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public KskDanhsachNhanvien(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public KskDanhsachNhanvien(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public KskDanhsachNhanvien(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("ksk_danhsach_nhanvien", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdNhanVien = new TableSchema.TableColumn(schema);
				colvarIdNhanVien.ColumnName = "IdNhanVien";
				colvarIdNhanVien.DataType = DbType.Int64;
				colvarIdNhanVien.MaxLength = 0;
				colvarIdNhanVien.AutoIncrement = true;
				colvarIdNhanVien.IsNullable = false;
				colvarIdNhanVien.IsPrimaryKey = true;
				colvarIdNhanVien.IsForeignKey = false;
				colvarIdNhanVien.IsReadOnly = false;
				colvarIdNhanVien.DefaultSetting = @"";
				colvarIdNhanVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNhanVien);
				
				TableSchema.TableColumn colvarMaNhanVien = new TableSchema.TableColumn(schema);
				colvarMaNhanVien.ColumnName = "MaNhanVien";
				colvarMaNhanVien.DataType = DbType.String;
				colvarMaNhanVien.MaxLength = 50;
				colvarMaNhanVien.AutoIncrement = false;
				colvarMaNhanVien.IsNullable = true;
				colvarMaNhanVien.IsPrimaryKey = false;
				colvarMaNhanVien.IsForeignKey = false;
				colvarMaNhanVien.IsReadOnly = false;
				colvarMaNhanVien.DefaultSetting = @"";
				colvarMaNhanVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaNhanVien);
				
				TableSchema.TableColumn colvarTenNhanVien = new TableSchema.TableColumn(schema);
				colvarTenNhanVien.ColumnName = "TenNhanVien";
				colvarTenNhanVien.DataType = DbType.String;
				colvarTenNhanVien.MaxLength = 50;
				colvarTenNhanVien.AutoIncrement = false;
				colvarTenNhanVien.IsNullable = false;
				colvarTenNhanVien.IsPrimaryKey = false;
				colvarTenNhanVien.IsForeignKey = false;
				colvarTenNhanVien.IsReadOnly = false;
				colvarTenNhanVien.DefaultSetting = @"";
				colvarTenNhanVien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenNhanVien);
				
				TableSchema.TableColumn colvarNamSinh = new TableSchema.TableColumn(schema);
				colvarNamSinh.ColumnName = "NamSinh";
				colvarNamSinh.DataType = DbType.Int16;
				colvarNamSinh.MaxLength = 0;
				colvarNamSinh.AutoIncrement = false;
				colvarNamSinh.IsNullable = true;
				colvarNamSinh.IsPrimaryKey = false;
				colvarNamSinh.IsForeignKey = false;
				colvarNamSinh.IsReadOnly = false;
				colvarNamSinh.DefaultSetting = @"";
				colvarNamSinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNamSinh);
				
				TableSchema.TableColumn colvarNgaySinh = new TableSchema.TableColumn(schema);
				colvarNgaySinh.ColumnName = "NgaySinh";
				colvarNgaySinh.DataType = DbType.DateTime;
				colvarNgaySinh.MaxLength = 0;
				colvarNgaySinh.AutoIncrement = false;
				colvarNgaySinh.IsNullable = true;
				colvarNgaySinh.IsPrimaryKey = false;
				colvarNgaySinh.IsForeignKey = false;
				colvarNgaySinh.IsReadOnly = false;
				colvarNgaySinh.DefaultSetting = @"";
				colvarNgaySinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySinh);
				
				TableSchema.TableColumn colvarGioiTinh = new TableSchema.TableColumn(schema);
				colvarGioiTinh.ColumnName = "GioiTinh";
				colvarGioiTinh.DataType = DbType.String;
				colvarGioiTinh.MaxLength = 50;
				colvarGioiTinh.AutoIncrement = false;
				colvarGioiTinh.IsNullable = true;
				colvarGioiTinh.IsPrimaryKey = false;
				colvarGioiTinh.IsForeignKey = false;
				colvarGioiTinh.IsReadOnly = false;
				colvarGioiTinh.DefaultSetting = @"";
				colvarGioiTinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGioiTinh);
				
				TableSchema.TableColumn colvarIdGioiTinh = new TableSchema.TableColumn(schema);
				colvarIdGioiTinh.ColumnName = "IdGioiTinh";
				colvarIdGioiTinh.DataType = DbType.Byte;
				colvarIdGioiTinh.MaxLength = 0;
				colvarIdGioiTinh.AutoIncrement = false;
				colvarIdGioiTinh.IsNullable = true;
				colvarIdGioiTinh.IsPrimaryKey = false;
				colvarIdGioiTinh.IsForeignKey = false;
				colvarIdGioiTinh.IsReadOnly = false;
				colvarIdGioiTinh.DefaultSetting = @"";
				colvarIdGioiTinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdGioiTinh);
				
				TableSchema.TableColumn colvarNgheNghiep = new TableSchema.TableColumn(schema);
				colvarNgheNghiep.ColumnName = "NgheNghiep";
				colvarNgheNghiep.DataType = DbType.String;
				colvarNgheNghiep.MaxLength = 50;
				colvarNgheNghiep.AutoIncrement = false;
				colvarNgheNghiep.IsNullable = true;
				colvarNgheNghiep.IsPrimaryKey = false;
				colvarNgheNghiep.IsForeignKey = false;
				colvarNgheNghiep.IsReadOnly = false;
				colvarNgheNghiep.DefaultSetting = @"";
				colvarNgheNghiep.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgheNghiep);
				
				TableSchema.TableColumn colvarSoDienThoai = new TableSchema.TableColumn(schema);
				colvarSoDienThoai.ColumnName = "SoDienThoai";
				colvarSoDienThoai.DataType = DbType.String;
				colvarSoDienThoai.MaxLength = 20;
				colvarSoDienThoai.AutoIncrement = false;
				colvarSoDienThoai.IsNullable = true;
				colvarSoDienThoai.IsPrimaryKey = false;
				colvarSoDienThoai.IsForeignKey = false;
				colvarSoDienThoai.IsReadOnly = false;
				colvarSoDienThoai.DefaultSetting = @"";
				colvarSoDienThoai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoDienThoai);
				
				TableSchema.TableColumn colvarCoQuan = new TableSchema.TableColumn(schema);
				colvarCoQuan.ColumnName = "CoQuan";
				colvarCoQuan.DataType = DbType.String;
				colvarCoQuan.MaxLength = 100;
				colvarCoQuan.AutoIncrement = false;
				colvarCoQuan.IsNullable = true;
				colvarCoQuan.IsPrimaryKey = false;
				colvarCoQuan.IsForeignKey = false;
				colvarCoQuan.IsReadOnly = false;
				colvarCoQuan.DefaultSetting = @"";
				colvarCoQuan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCoQuan);
				
				TableSchema.TableColumn colvarEmail = new TableSchema.TableColumn(schema);
				colvarEmail.ColumnName = "Email";
				colvarEmail.DataType = DbType.String;
				colvarEmail.MaxLength = 100;
				colvarEmail.AutoIncrement = false;
				colvarEmail.IsNullable = true;
				colvarEmail.IsPrimaryKey = false;
				colvarEmail.IsForeignKey = false;
				colvarEmail.IsReadOnly = false;
				colvarEmail.DefaultSetting = @"";
				colvarEmail.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEmail);
				
				TableSchema.TableColumn colvarCmt = new TableSchema.TableColumn(schema);
				colvarCmt.ColumnName = "CMT";
				colvarCmt.DataType = DbType.String;
				colvarCmt.MaxLength = 20;
				colvarCmt.AutoIncrement = false;
				colvarCmt.IsNullable = true;
				colvarCmt.IsPrimaryKey = false;
				colvarCmt.IsForeignKey = false;
				colvarCmt.IsReadOnly = false;
				colvarCmt.DefaultSetting = @"";
				colvarCmt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCmt);
				
				TableSchema.TableColumn colvarDiaChi = new TableSchema.TableColumn(schema);
				colvarDiaChi.ColumnName = "DiaChi";
				colvarDiaChi.DataType = DbType.String;
				colvarDiaChi.MaxLength = 100;
				colvarDiaChi.AutoIncrement = false;
				colvarDiaChi.IsNullable = true;
				colvarDiaChi.IsPrimaryKey = false;
				colvarDiaChi.IsForeignKey = false;
				colvarDiaChi.IsReadOnly = false;
				colvarDiaChi.DefaultSetting = @"";
				colvarDiaChi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiaChi);
				
				TableSchema.TableColumn colvarDanToc = new TableSchema.TableColumn(schema);
				colvarDanToc.ColumnName = "DanToc";
				colvarDanToc.DataType = DbType.String;
				colvarDanToc.MaxLength = 30;
				colvarDanToc.AutoIncrement = false;
				colvarDanToc.IsNullable = true;
				colvarDanToc.IsPrimaryKey = false;
				colvarDanToc.IsForeignKey = false;
				colvarDanToc.IsReadOnly = false;
				colvarDanToc.DefaultSetting = @"";
				colvarDanToc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDanToc);
				
				TableSchema.TableColumn colvarTonGiao = new TableSchema.TableColumn(schema);
				colvarTonGiao.ColumnName = "TonGiao";
				colvarTonGiao.DataType = DbType.String;
				colvarTonGiao.MaxLength = 30;
				colvarTonGiao.AutoIncrement = false;
				colvarTonGiao.IsNullable = true;
				colvarTonGiao.IsPrimaryKey = false;
				colvarTonGiao.IsForeignKey = false;
				colvarTonGiao.IsReadOnly = false;
				colvarTonGiao.DefaultSetting = @"";
				colvarTonGiao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTonGiao);
				
				TableSchema.TableColumn colvarNguoiTiepDon = new TableSchema.TableColumn(schema);
				colvarNguoiTiepDon.ColumnName = "NguoiTiepDon";
				colvarNguoiTiepDon.DataType = DbType.String;
				colvarNguoiTiepDon.MaxLength = 30;
				colvarNguoiTiepDon.AutoIncrement = false;
				colvarNguoiTiepDon.IsNullable = true;
				colvarNguoiTiepDon.IsPrimaryKey = false;
				colvarNguoiTiepDon.IsForeignKey = false;
				colvarNguoiTiepDon.IsReadOnly = false;
				colvarNguoiTiepDon.DefaultSetting = @"";
				colvarNguoiTiepDon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTiepDon);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NgayTao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NguoiTao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 30;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "NgaySua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "NguoiSua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 30;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("ksk_danhsach_nhanvien",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdNhanVien")]
		[Bindable(true)]
		public long IdNhanVien 
		{
			get { return GetColumnValue<long>(Columns.IdNhanVien); }
			set { SetColumnValue(Columns.IdNhanVien, value); }
		}
		  
		[XmlAttribute("MaNhanVien")]
		[Bindable(true)]
		public string MaNhanVien 
		{
			get { return GetColumnValue<string>(Columns.MaNhanVien); }
			set { SetColumnValue(Columns.MaNhanVien, value); }
		}
		  
		[XmlAttribute("TenNhanVien")]
		[Bindable(true)]
		public string TenNhanVien 
		{
			get { return GetColumnValue<string>(Columns.TenNhanVien); }
			set { SetColumnValue(Columns.TenNhanVien, value); }
		}
		  
		[XmlAttribute("NamSinh")]
		[Bindable(true)]
		public short? NamSinh 
		{
			get { return GetColumnValue<short?>(Columns.NamSinh); }
			set { SetColumnValue(Columns.NamSinh, value); }
		}
		  
		[XmlAttribute("NgaySinh")]
		[Bindable(true)]
		public DateTime? NgaySinh 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySinh); }
			set { SetColumnValue(Columns.NgaySinh, value); }
		}
		  
		[XmlAttribute("GioiTinh")]
		[Bindable(true)]
		public string GioiTinh 
		{
			get { return GetColumnValue<string>(Columns.GioiTinh); }
			set { SetColumnValue(Columns.GioiTinh, value); }
		}
		  
		[XmlAttribute("IdGioiTinh")]
		[Bindable(true)]
		public byte? IdGioiTinh 
		{
			get { return GetColumnValue<byte?>(Columns.IdGioiTinh); }
			set { SetColumnValue(Columns.IdGioiTinh, value); }
		}
		  
		[XmlAttribute("NgheNghiep")]
		[Bindable(true)]
		public string NgheNghiep 
		{
			get { return GetColumnValue<string>(Columns.NgheNghiep); }
			set { SetColumnValue(Columns.NgheNghiep, value); }
		}
		  
		[XmlAttribute("SoDienThoai")]
		[Bindable(true)]
		public string SoDienThoai 
		{
			get { return GetColumnValue<string>(Columns.SoDienThoai); }
			set { SetColumnValue(Columns.SoDienThoai, value); }
		}
		  
		[XmlAttribute("CoQuan")]
		[Bindable(true)]
		public string CoQuan 
		{
			get { return GetColumnValue<string>(Columns.CoQuan); }
			set { SetColumnValue(Columns.CoQuan, value); }
		}
		  
		[XmlAttribute("Email")]
		[Bindable(true)]
		public string Email 
		{
			get { return GetColumnValue<string>(Columns.Email); }
			set { SetColumnValue(Columns.Email, value); }
		}
		  
		[XmlAttribute("Cmt")]
		[Bindable(true)]
		public string Cmt 
		{
			get { return GetColumnValue<string>(Columns.Cmt); }
			set { SetColumnValue(Columns.Cmt, value); }
		}
		  
		[XmlAttribute("DiaChi")]
		[Bindable(true)]
		public string DiaChi 
		{
			get { return GetColumnValue<string>(Columns.DiaChi); }
			set { SetColumnValue(Columns.DiaChi, value); }
		}
		  
		[XmlAttribute("DanToc")]
		[Bindable(true)]
		public string DanToc 
		{
			get { return GetColumnValue<string>(Columns.DanToc); }
			set { SetColumnValue(Columns.DanToc, value); }
		}
		  
		[XmlAttribute("TonGiao")]
		[Bindable(true)]
		public string TonGiao 
		{
			get { return GetColumnValue<string>(Columns.TonGiao); }
			set { SetColumnValue(Columns.TonGiao, value); }
		}
		  
		[XmlAttribute("NguoiTiepDon")]
		[Bindable(true)]
		public string NguoiTiepDon 
		{
			get { return GetColumnValue<string>(Columns.NguoiTiepDon); }
			set { SetColumnValue(Columns.NguoiTiepDon, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaNhanVien,string varTenNhanVien,short? varNamSinh,DateTime? varNgaySinh,string varGioiTinh,byte? varIdGioiTinh,string varNgheNghiep,string varSoDienThoai,string varCoQuan,string varEmail,string varCmt,string varDiaChi,string varDanToc,string varTonGiao,string varNguoiTiepDon,DateTime? varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua)
		{
			KskDanhsachNhanvien item = new KskDanhsachNhanvien();
			
			item.MaNhanVien = varMaNhanVien;
			
			item.TenNhanVien = varTenNhanVien;
			
			item.NamSinh = varNamSinh;
			
			item.NgaySinh = varNgaySinh;
			
			item.GioiTinh = varGioiTinh;
			
			item.IdGioiTinh = varIdGioiTinh;
			
			item.NgheNghiep = varNgheNghiep;
			
			item.SoDienThoai = varSoDienThoai;
			
			item.CoQuan = varCoQuan;
			
			item.Email = varEmail;
			
			item.Cmt = varCmt;
			
			item.DiaChi = varDiaChi;
			
			item.DanToc = varDanToc;
			
			item.TonGiao = varTonGiao;
			
			item.NguoiTiepDon = varNguoiTiepDon;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiSua = varNguoiSua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varIdNhanVien,string varMaNhanVien,string varTenNhanVien,short? varNamSinh,DateTime? varNgaySinh,string varGioiTinh,byte? varIdGioiTinh,string varNgheNghiep,string varSoDienThoai,string varCoQuan,string varEmail,string varCmt,string varDiaChi,string varDanToc,string varTonGiao,string varNguoiTiepDon,DateTime? varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua)
		{
			KskDanhsachNhanvien item = new KskDanhsachNhanvien();
			
				item.IdNhanVien = varIdNhanVien;
			
				item.MaNhanVien = varMaNhanVien;
			
				item.TenNhanVien = varTenNhanVien;
			
				item.NamSinh = varNamSinh;
			
				item.NgaySinh = varNgaySinh;
			
				item.GioiTinh = varGioiTinh;
			
				item.IdGioiTinh = varIdGioiTinh;
			
				item.NgheNghiep = varNgheNghiep;
			
				item.SoDienThoai = varSoDienThoai;
			
				item.CoQuan = varCoQuan;
			
				item.Email = varEmail;
			
				item.Cmt = varCmt;
			
				item.DiaChi = varDiaChi;
			
				item.DanToc = varDanToc;
			
				item.TonGiao = varTonGiao;
			
				item.NguoiTiepDon = varNguoiTiepDon;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiSua = varNguoiSua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdNhanVienColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaNhanVienColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn TenNhanVienColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn NamSinhColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySinhColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn GioiTinhColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn IdGioiTinhColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NgheNghiepColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn SoDienThoaiColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn CoQuanColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn EmailColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn CmtColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn DiaChiColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn DanTocColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn TonGiaoColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTiepDonColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdNhanVien = @"IdNhanVien";
			 public static string MaNhanVien = @"MaNhanVien";
			 public static string TenNhanVien = @"TenNhanVien";
			 public static string NamSinh = @"NamSinh";
			 public static string NgaySinh = @"NgaySinh";
			 public static string GioiTinh = @"GioiTinh";
			 public static string IdGioiTinh = @"IdGioiTinh";
			 public static string NgheNghiep = @"NgheNghiep";
			 public static string SoDienThoai = @"SoDienThoai";
			 public static string CoQuan = @"CoQuan";
			 public static string Email = @"Email";
			 public static string Cmt = @"CMT";
			 public static string DiaChi = @"DiaChi";
			 public static string DanToc = @"DanToc";
			 public static string TonGiao = @"TonGiao";
			 public static string NguoiTiepDon = @"NguoiTiepDon";
			 public static string NgayTao = @"NgayTao";
			 public static string NguoiTao = @"NguoiTao";
			 public static string NgaySua = @"NgaySua";
			 public static string NguoiSua = @"NguoiSua";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
