using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the KnDangkyXn class.
	/// </summary>
    [Serializable]
	public partial class KnDangkyXnCollection : ActiveList<KnDangkyXn, KnDangkyXnCollection>
	{	   
		public KnDangkyXnCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>KnDangkyXnCollection</returns>
		public KnDangkyXnCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                KnDangkyXn o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the kn_dangky_xn table.
	/// </summary>
	[Serializable]
	public partial class KnDangkyXn : ActiveRecord<KnDangkyXn>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public KnDangkyXn()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public KnDangkyXn(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public KnDangkyXn(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public KnDangkyXn(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("kn_dangky_xn", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarMaDangky = new TableSchema.TableColumn(schema);
				colvarMaDangky.ColumnName = "ma_dangky";
				colvarMaDangky.DataType = DbType.AnsiString;
				colvarMaDangky.MaxLength = 20;
				colvarMaDangky.AutoIncrement = false;
				colvarMaDangky.IsNullable = false;
				colvarMaDangky.IsPrimaryKey = true;
				colvarMaDangky.IsForeignKey = false;
				colvarMaDangky.IsReadOnly = false;
				colvarMaDangky.DefaultSetting = @"";
				colvarMaDangky.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDangky);
				
				TableSchema.TableColumn colvarIdKhachhang = new TableSchema.TableColumn(schema);
				colvarIdKhachhang.ColumnName = "id_khachhang";
				colvarIdKhachhang.DataType = DbType.Int64;
				colvarIdKhachhang.MaxLength = 0;
				colvarIdKhachhang.AutoIncrement = false;
				colvarIdKhachhang.IsNullable = false;
				colvarIdKhachhang.IsPrimaryKey = false;
				colvarIdKhachhang.IsForeignKey = false;
				colvarIdKhachhang.IsReadOnly = false;
				colvarIdKhachhang.DefaultSetting = @"";
				colvarIdKhachhang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhachhang);
				
				TableSchema.TableColumn colvarNgayDangky = new TableSchema.TableColumn(schema);
				colvarNgayDangky.ColumnName = "ngay_dangky";
				colvarNgayDangky.DataType = DbType.DateTime;
				colvarNgayDangky.MaxLength = 0;
				colvarNgayDangky.AutoIncrement = false;
				colvarNgayDangky.IsNullable = false;
				colvarNgayDangky.IsPrimaryKey = false;
				colvarNgayDangky.IsForeignKey = false;
				colvarNgayDangky.IsReadOnly = false;
				colvarNgayDangky.DefaultSetting = @"";
				colvarNgayDangky.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayDangky);
				
				TableSchema.TableColumn colvarTrakqTaiphong = new TableSchema.TableColumn(schema);
				colvarTrakqTaiphong.ColumnName = "trakq_taiphong";
				colvarTrakqTaiphong.DataType = DbType.Byte;
				colvarTrakqTaiphong.MaxLength = 0;
				colvarTrakqTaiphong.AutoIncrement = false;
				colvarTrakqTaiphong.IsNullable = true;
				colvarTrakqTaiphong.IsPrimaryKey = false;
				colvarTrakqTaiphong.IsForeignKey = false;
				colvarTrakqTaiphong.IsReadOnly = false;
				colvarTrakqTaiphong.DefaultSetting = @"";
				colvarTrakqTaiphong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrakqTaiphong);
				
				TableSchema.TableColumn colvarTrakqFax = new TableSchema.TableColumn(schema);
				colvarTrakqFax.ColumnName = "trakq_fax";
				colvarTrakqFax.DataType = DbType.Byte;
				colvarTrakqFax.MaxLength = 0;
				colvarTrakqFax.AutoIncrement = false;
				colvarTrakqFax.IsNullable = true;
				colvarTrakqFax.IsPrimaryKey = false;
				colvarTrakqFax.IsForeignKey = false;
				colvarTrakqFax.IsReadOnly = false;
				colvarTrakqFax.DefaultSetting = @"";
				colvarTrakqFax.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrakqFax);
				
				TableSchema.TableColumn colvarTrakqEmail = new TableSchema.TableColumn(schema);
				colvarTrakqEmail.ColumnName = "trakq_email";
				colvarTrakqEmail.DataType = DbType.Byte;
				colvarTrakqEmail.MaxLength = 0;
				colvarTrakqEmail.AutoIncrement = false;
				colvarTrakqEmail.IsNullable = true;
				colvarTrakqEmail.IsPrimaryKey = false;
				colvarTrakqEmail.IsForeignKey = false;
				colvarTrakqEmail.IsReadOnly = false;
				colvarTrakqEmail.DefaultSetting = @"";
				colvarTrakqEmail.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrakqEmail);
				
				TableSchema.TableColumn colvarTrakqGuithu = new TableSchema.TableColumn(schema);
				colvarTrakqGuithu.ColumnName = "trakq_guithu";
				colvarTrakqGuithu.DataType = DbType.Byte;
				colvarTrakqGuithu.MaxLength = 0;
				colvarTrakqGuithu.AutoIncrement = false;
				colvarTrakqGuithu.IsNullable = true;
				colvarTrakqGuithu.IsPrimaryKey = false;
				colvarTrakqGuithu.IsForeignKey = false;
				colvarTrakqGuithu.IsReadOnly = false;
				colvarTrakqGuithu.DefaultSetting = @"";
				colvarTrakqGuithu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrakqGuithu);
				
				TableSchema.TableColumn colvarKqQcvn = new TableSchema.TableColumn(schema);
				colvarKqQcvn.ColumnName = "kq_qcvn";
				colvarKqQcvn.DataType = DbType.Byte;
				colvarKqQcvn.MaxLength = 0;
				colvarKqQcvn.AutoIncrement = false;
				colvarKqQcvn.IsNullable = true;
				colvarKqQcvn.IsPrimaryKey = false;
				colvarKqQcvn.IsForeignKey = false;
				colvarKqQcvn.IsReadOnly = false;
				colvarKqQcvn.DefaultSetting = @"";
				colvarKqQcvn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKqQcvn);
				
				TableSchema.TableColumn colvarTrangThai = new TableSchema.TableColumn(schema);
				colvarTrangThai.ColumnName = "trang_thai";
				colvarTrangThai.DataType = DbType.Int16;
				colvarTrangThai.MaxLength = 0;
				colvarTrangThai.AutoIncrement = false;
				colvarTrangThai.IsNullable = true;
				colvarTrangThai.IsPrimaryKey = false;
				colvarTrangThai.IsForeignKey = false;
				colvarTrangThai.IsReadOnly = false;
				colvarTrangThai.DefaultSetting = @"";
				colvarTrangThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThai);
				
				TableSchema.TableColumn colvarUuTien = new TableSchema.TableColumn(schema);
				colvarUuTien.ColumnName = "uu_tien";
				colvarUuTien.DataType = DbType.Byte;
				colvarUuTien.MaxLength = 0;
				colvarUuTien.AutoIncrement = false;
				colvarUuTien.IsNullable = true;
				colvarUuTien.IsPrimaryKey = false;
				colvarUuTien.IsForeignKey = false;
				colvarUuTien.IsReadOnly = false;
				colvarUuTien.DefaultSetting = @"";
				colvarUuTien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUuTien);
				
				TableSchema.TableColumn colvarYeucauKhac = new TableSchema.TableColumn(schema);
				colvarYeucauKhac.ColumnName = "yeucau_khac";
				colvarYeucauKhac.DataType = DbType.String;
				colvarYeucauKhac.MaxLength = 150;
				colvarYeucauKhac.AutoIncrement = false;
				colvarYeucauKhac.IsNullable = true;
				colvarYeucauKhac.IsPrimaryKey = false;
				colvarYeucauKhac.IsForeignKey = false;
				colvarYeucauKhac.IsReadOnly = false;
				colvarYeucauKhac.DefaultSetting = @"";
				colvarYeucauKhac.ForeignKeyTableName = "";
				schema.Columns.Add(colvarYeucauKhac);
				
				TableSchema.TableColumn colvarMotaThem = new TableSchema.TableColumn(schema);
				colvarMotaThem.ColumnName = "mota_them";
				colvarMotaThem.DataType = DbType.String;
				colvarMotaThem.MaxLength = 150;
				colvarMotaThem.AutoIncrement = false;
				colvarMotaThem.IsNullable = true;
				colvarMotaThem.IsPrimaryKey = false;
				colvarMotaThem.IsForeignKey = false;
				colvarMotaThem.IsReadOnly = false;
				colvarMotaThem.DefaultSetting = @"";
				colvarMotaThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMotaThem);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.AnsiString;
				colvarNguoiTao.MaxLength = 20;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.AnsiString;
				colvarNguoiSua.MaxLength = 20;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarIpMaytao = new TableSchema.TableColumn(schema);
				colvarIpMaytao.ColumnName = "ip_maytao";
				colvarIpMaytao.DataType = DbType.AnsiString;
				colvarIpMaytao.MaxLength = 20;
				colvarIpMaytao.AutoIncrement = false;
				colvarIpMaytao.IsNullable = true;
				colvarIpMaytao.IsPrimaryKey = false;
				colvarIpMaytao.IsForeignKey = false;
				colvarIpMaytao.IsReadOnly = false;
				colvarIpMaytao.DefaultSetting = @"";
				colvarIpMaytao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMaytao);
				
				TableSchema.TableColumn colvarIpMaysua = new TableSchema.TableColumn(schema);
				colvarIpMaysua.ColumnName = "ip_maysua";
				colvarIpMaysua.DataType = DbType.AnsiString;
				colvarIpMaysua.MaxLength = 20;
				colvarIpMaysua.AutoIncrement = false;
				colvarIpMaysua.IsNullable = true;
				colvarIpMaysua.IsPrimaryKey = false;
				colvarIpMaysua.IsForeignKey = false;
				colvarIpMaysua.IsReadOnly = false;
				colvarIpMaysua.DefaultSetting = @"";
				colvarIpMaysua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMaysua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("kn_dangky_xn",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("MaDangky")]
		[Bindable(true)]
		public string MaDangky 
		{
			get { return GetColumnValue<string>(Columns.MaDangky); }
			set { SetColumnValue(Columns.MaDangky, value); }
		}
		  
		[XmlAttribute("IdKhachhang")]
		[Bindable(true)]
		public long IdKhachhang 
		{
			get { return GetColumnValue<long>(Columns.IdKhachhang); }
			set { SetColumnValue(Columns.IdKhachhang, value); }
		}
		  
		[XmlAttribute("NgayDangky")]
		[Bindable(true)]
		public DateTime NgayDangky 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayDangky); }
			set { SetColumnValue(Columns.NgayDangky, value); }
		}
		  
		[XmlAttribute("TrakqTaiphong")]
		[Bindable(true)]
		public byte? TrakqTaiphong 
		{
			get { return GetColumnValue<byte?>(Columns.TrakqTaiphong); }
			set { SetColumnValue(Columns.TrakqTaiphong, value); }
		}
		  
		[XmlAttribute("TrakqFax")]
		[Bindable(true)]
		public byte? TrakqFax 
		{
			get { return GetColumnValue<byte?>(Columns.TrakqFax); }
			set { SetColumnValue(Columns.TrakqFax, value); }
		}
		  
		[XmlAttribute("TrakqEmail")]
		[Bindable(true)]
		public byte? TrakqEmail 
		{
			get { return GetColumnValue<byte?>(Columns.TrakqEmail); }
			set { SetColumnValue(Columns.TrakqEmail, value); }
		}
		  
		[XmlAttribute("TrakqGuithu")]
		[Bindable(true)]
		public byte? TrakqGuithu 
		{
			get { return GetColumnValue<byte?>(Columns.TrakqGuithu); }
			set { SetColumnValue(Columns.TrakqGuithu, value); }
		}
		  
		[XmlAttribute("KqQcvn")]
		[Bindable(true)]
		public byte? KqQcvn 
		{
			get { return GetColumnValue<byte?>(Columns.KqQcvn); }
			set { SetColumnValue(Columns.KqQcvn, value); }
		}
		  
		[XmlAttribute("TrangThai")]
		[Bindable(true)]
		public short? TrangThai 
		{
			get { return GetColumnValue<short?>(Columns.TrangThai); }
			set { SetColumnValue(Columns.TrangThai, value); }
		}
		  
		[XmlAttribute("UuTien")]
		[Bindable(true)]
		public byte? UuTien 
		{
			get { return GetColumnValue<byte?>(Columns.UuTien); }
			set { SetColumnValue(Columns.UuTien, value); }
		}
		  
		[XmlAttribute("YeucauKhac")]
		[Bindable(true)]
		public string YeucauKhac 
		{
			get { return GetColumnValue<string>(Columns.YeucauKhac); }
			set { SetColumnValue(Columns.YeucauKhac, value); }
		}
		  
		[XmlAttribute("MotaThem")]
		[Bindable(true)]
		public string MotaThem 
		{
			get { return GetColumnValue<string>(Columns.MotaThem); }
			set { SetColumnValue(Columns.MotaThem, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("IpMaytao")]
		[Bindable(true)]
		public string IpMaytao 
		{
			get { return GetColumnValue<string>(Columns.IpMaytao); }
			set { SetColumnValue(Columns.IpMaytao, value); }
		}
		  
		[XmlAttribute("IpMaysua")]
		[Bindable(true)]
		public string IpMaysua 
		{
			get { return GetColumnValue<string>(Columns.IpMaysua); }
			set { SetColumnValue(Columns.IpMaysua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaDangky,long varIdKhachhang,DateTime varNgayDangky,byte? varTrakqTaiphong,byte? varTrakqFax,byte? varTrakqEmail,byte? varTrakqGuithu,byte? varKqQcvn,short? varTrangThai,byte? varUuTien,string varYeucauKhac,string varMotaThem,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua,string varIpMaytao,string varIpMaysua)
		{
			KnDangkyXn item = new KnDangkyXn();
			
			item.MaDangky = varMaDangky;
			
			item.IdKhachhang = varIdKhachhang;
			
			item.NgayDangky = varNgayDangky;
			
			item.TrakqTaiphong = varTrakqTaiphong;
			
			item.TrakqFax = varTrakqFax;
			
			item.TrakqEmail = varTrakqEmail;
			
			item.TrakqGuithu = varTrakqGuithu;
			
			item.KqQcvn = varKqQcvn;
			
			item.TrangThai = varTrangThai;
			
			item.UuTien = varUuTien;
			
			item.YeucauKhac = varYeucauKhac;
			
			item.MotaThem = varMotaThem;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NgaySua = varNgaySua;
			
			item.IpMaytao = varIpMaytao;
			
			item.IpMaysua = varIpMaysua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(string varMaDangky,long varIdKhachhang,DateTime varNgayDangky,byte? varTrakqTaiphong,byte? varTrakqFax,byte? varTrakqEmail,byte? varTrakqGuithu,byte? varKqQcvn,short? varTrangThai,byte? varUuTien,string varYeucauKhac,string varMotaThem,string varNguoiTao,DateTime? varNgayTao,string varNguoiSua,DateTime? varNgaySua,string varIpMaytao,string varIpMaysua)
		{
			KnDangkyXn item = new KnDangkyXn();
			
				item.MaDangky = varMaDangky;
			
				item.IdKhachhang = varIdKhachhang;
			
				item.NgayDangky = varNgayDangky;
			
				item.TrakqTaiphong = varTrakqTaiphong;
			
				item.TrakqFax = varTrakqFax;
			
				item.TrakqEmail = varTrakqEmail;
			
				item.TrakqGuithu = varTrakqGuithu;
			
				item.KqQcvn = varKqQcvn;
			
				item.TrangThai = varTrangThai;
			
				item.UuTien = varUuTien;
			
				item.YeucauKhac = varYeucauKhac;
			
				item.MotaThem = varMotaThem;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NgaySua = varNgaySua;
			
				item.IpMaytao = varIpMaytao;
			
				item.IpMaysua = varIpMaysua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn MaDangkyColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhachhangColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayDangkyColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn TrakqTaiphongColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn TrakqFaxColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn TrakqEmailColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn TrakqGuithuColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn KqQcvnColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn UuTienColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn YeucauKhacColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn MotaThemColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMaytaoColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMaysuaColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string MaDangky = @"ma_dangky";
			 public static string IdKhachhang = @"id_khachhang";
			 public static string NgayDangky = @"ngay_dangky";
			 public static string TrakqTaiphong = @"trakq_taiphong";
			 public static string TrakqFax = @"trakq_fax";
			 public static string TrakqEmail = @"trakq_email";
			 public static string TrakqGuithu = @"trakq_guithu";
			 public static string KqQcvn = @"kq_qcvn";
			 public static string TrangThai = @"trang_thai";
			 public static string UuTien = @"uu_tien";
			 public static string YeucauKhac = @"yeucau_khac";
			 public static string MotaThem = @"mota_them";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiSua = @"nguoi_sua";
			 public static string NgaySua = @"ngay_sua";
			 public static string IpMaytao = @"ip_maytao";
			 public static string IpMaysua = @"ip_maysua";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
