using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the NoitruPhieudieutri class.
	/// </summary>
    [Serializable]
	public partial class NoitruPhieudieutriCollection : ActiveList<NoitruPhieudieutri, NoitruPhieudieutriCollection>
	{	   
		public NoitruPhieudieutriCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>NoitruPhieudieutriCollection</returns>
		public NoitruPhieudieutriCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                NoitruPhieudieutri o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the noitru_phieudieutri table.
	/// </summary>
	[Serializable]
	public partial class NoitruPhieudieutri : ActiveRecord<NoitruPhieudieutri>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public NoitruPhieudieutri()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public NoitruPhieudieutri(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public NoitruPhieudieutri(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public NoitruPhieudieutri(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("noitru_phieudieutri", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdPhieudieutri = new TableSchema.TableColumn(schema);
				colvarIdPhieudieutri.ColumnName = "id_phieudieutri";
				colvarIdPhieudieutri.DataType = DbType.Int64;
				colvarIdPhieudieutri.MaxLength = 0;
				colvarIdPhieudieutri.AutoIncrement = true;
				colvarIdPhieudieutri.IsNullable = false;
				colvarIdPhieudieutri.IsPrimaryKey = true;
				colvarIdPhieudieutri.IsForeignKey = false;
				colvarIdPhieudieutri.IsReadOnly = false;
				colvarIdPhieudieutri.DefaultSetting = @"";
				colvarIdPhieudieutri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPhieudieutri);
				
				TableSchema.TableColumn colvarMaLuotkham = new TableSchema.TableColumn(schema);
				colvarMaLuotkham.ColumnName = "ma_luotkham";
				colvarMaLuotkham.DataType = DbType.String;
				colvarMaLuotkham.MaxLength = 50;
				colvarMaLuotkham.AutoIncrement = false;
				colvarMaLuotkham.IsNullable = true;
				colvarMaLuotkham.IsPrimaryKey = false;
				colvarMaLuotkham.IsForeignKey = false;
				colvarMaLuotkham.IsReadOnly = false;
				colvarMaLuotkham.DefaultSetting = @"";
				colvarMaLuotkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLuotkham);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = true;
				colvarIdBenhnhan.IsPrimaryKey = false;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarIdBacsi = new TableSchema.TableColumn(schema);
				colvarIdBacsi.ColumnName = "id_bacsi";
				colvarIdBacsi.DataType = DbType.Int16;
				colvarIdBacsi.MaxLength = 0;
				colvarIdBacsi.AutoIncrement = false;
				colvarIdBacsi.IsNullable = true;
				colvarIdBacsi.IsPrimaryKey = false;
				colvarIdBacsi.IsForeignKey = false;
				colvarIdBacsi.IsReadOnly = false;
				colvarIdBacsi.DefaultSetting = @"";
				colvarIdBacsi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBacsi);
				
				TableSchema.TableColumn colvarIdBuongGiuong = new TableSchema.TableColumn(schema);
				colvarIdBuongGiuong.ColumnName = "id_buong_giuong";
				colvarIdBuongGiuong.DataType = DbType.Int64;
				colvarIdBuongGiuong.MaxLength = 0;
				colvarIdBuongGiuong.AutoIncrement = false;
				colvarIdBuongGiuong.IsNullable = true;
				colvarIdBuongGiuong.IsPrimaryKey = false;
				colvarIdBuongGiuong.IsForeignKey = false;
				colvarIdBuongGiuong.IsReadOnly = false;
				colvarIdBuongGiuong.DefaultSetting = @"";
				colvarIdBuongGiuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBuongGiuong);
				
				TableSchema.TableColumn colvarIdBuong = new TableSchema.TableColumn(schema);
				colvarIdBuong.ColumnName = "id_buong";
				colvarIdBuong.DataType = DbType.Int32;
				colvarIdBuong.MaxLength = 0;
				colvarIdBuong.AutoIncrement = false;
				colvarIdBuong.IsNullable = true;
				colvarIdBuong.IsPrimaryKey = false;
				colvarIdBuong.IsForeignKey = false;
				colvarIdBuong.IsReadOnly = false;
				colvarIdBuong.DefaultSetting = @"";
				colvarIdBuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBuong);
				
				TableSchema.TableColumn colvarIdGiuong = new TableSchema.TableColumn(schema);
				colvarIdGiuong.ColumnName = "id_giuong";
				colvarIdGiuong.DataType = DbType.Int32;
				colvarIdGiuong.MaxLength = 0;
				colvarIdGiuong.AutoIncrement = false;
				colvarIdGiuong.IsNullable = true;
				colvarIdGiuong.IsPrimaryKey = false;
				colvarIdGiuong.IsForeignKey = false;
				colvarIdGiuong.IsReadOnly = false;
				colvarIdGiuong.DefaultSetting = @"";
				colvarIdGiuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdGiuong);
				
				TableSchema.TableColumn colvarIdKhoanoitru = new TableSchema.TableColumn(schema);
				colvarIdKhoanoitru.ColumnName = "id_khoanoitru";
				colvarIdKhoanoitru.DataType = DbType.Int16;
				colvarIdKhoanoitru.MaxLength = 0;
				colvarIdKhoanoitru.AutoIncrement = false;
				colvarIdKhoanoitru.IsNullable = true;
				colvarIdKhoanoitru.IsPrimaryKey = false;
				colvarIdKhoanoitru.IsForeignKey = false;
				colvarIdKhoanoitru.IsReadOnly = false;
				colvarIdKhoanoitru.DefaultSetting = @"";
				colvarIdKhoanoitru.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoanoitru);
				
				TableSchema.TableColumn colvarThu = new TableSchema.TableColumn(schema);
				colvarThu.ColumnName = "thu";
				colvarThu.DataType = DbType.String;
				colvarThu.MaxLength = 20;
				colvarThu.AutoIncrement = false;
				colvarThu.IsNullable = true;
				colvarThu.IsPrimaryKey = false;
				colvarThu.IsForeignKey = false;
				colvarThu.IsReadOnly = false;
				colvarThu.DefaultSetting = @"";
				colvarThu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThu);
				
				TableSchema.TableColumn colvarThongtinTheodoi = new TableSchema.TableColumn(schema);
				colvarThongtinTheodoi.ColumnName = "thongtin_theodoi";
				colvarThongtinTheodoi.DataType = DbType.String;
				colvarThongtinTheodoi.MaxLength = 1000;
				colvarThongtinTheodoi.AutoIncrement = false;
				colvarThongtinTheodoi.IsNullable = true;
				colvarThongtinTheodoi.IsPrimaryKey = false;
				colvarThongtinTheodoi.IsForeignKey = false;
				colvarThongtinTheodoi.IsReadOnly = false;
				colvarThongtinTheodoi.DefaultSetting = @"";
				colvarThongtinTheodoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThongtinTheodoi);
				
				TableSchema.TableColumn colvarThongtinDieutri = new TableSchema.TableColumn(schema);
				colvarThongtinDieutri.ColumnName = "thongtin_dieutri";
				colvarThongtinDieutri.DataType = DbType.String;
				colvarThongtinDieutri.MaxLength = 1000;
				colvarThongtinDieutri.AutoIncrement = false;
				colvarThongtinDieutri.IsNullable = true;
				colvarThongtinDieutri.IsPrimaryKey = false;
				colvarThongtinDieutri.IsForeignKey = false;
				colvarThongtinDieutri.IsReadOnly = false;
				colvarThongtinDieutri.DefaultSetting = @"";
				colvarThongtinDieutri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThongtinDieutri);
				
				TableSchema.TableColumn colvarNgayDieutri = new TableSchema.TableColumn(schema);
				colvarNgayDieutri.ColumnName = "ngay_dieutri";
				colvarNgayDieutri.DataType = DbType.DateTime;
				colvarNgayDieutri.MaxLength = 0;
				colvarNgayDieutri.AutoIncrement = false;
				colvarNgayDieutri.IsNullable = true;
				colvarNgayDieutri.IsPrimaryKey = false;
				colvarNgayDieutri.IsForeignKey = false;
				colvarNgayDieutri.IsReadOnly = false;
				
						colvarNgayDieutri.DefaultSetting = @"(getdate())";
				colvarNgayDieutri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayDieutri);
				
				TableSchema.TableColumn colvarGioDieutri = new TableSchema.TableColumn(schema);
				colvarGioDieutri.ColumnName = "gio_dieutri";
				colvarGioDieutri.DataType = DbType.String;
				colvarGioDieutri.MaxLength = 10;
				colvarGioDieutri.AutoIncrement = false;
				colvarGioDieutri.IsNullable = true;
				colvarGioDieutri.IsPrimaryKey = false;
				colvarGioDieutri.IsForeignKey = false;
				colvarGioDieutri.IsReadOnly = false;
				colvarGioDieutri.DefaultSetting = @"";
				colvarGioDieutri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGioDieutri);
				
				TableSchema.TableColumn colvarTthaiBosung = new TableSchema.TableColumn(schema);
				colvarTthaiBosung.ColumnName = "tthai_bosung";
				colvarTthaiBosung.DataType = DbType.Byte;
				colvarTthaiBosung.MaxLength = 0;
				colvarTthaiBosung.AutoIncrement = false;
				colvarTthaiBosung.IsNullable = true;
				colvarTthaiBosung.IsPrimaryKey = false;
				colvarTthaiBosung.IsForeignKey = false;
				colvarTthaiBosung.IsReadOnly = false;
				colvarTthaiBosung.DefaultSetting = @"";
				colvarTthaiBosung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTthaiBosung);
				
				TableSchema.TableColumn colvarTthaiIn = new TableSchema.TableColumn(schema);
				colvarTthaiIn.ColumnName = "tthai_in";
				colvarTthaiIn.DataType = DbType.Byte;
				colvarTthaiIn.MaxLength = 0;
				colvarTthaiIn.AutoIncrement = false;
				colvarTthaiIn.IsNullable = true;
				colvarTthaiIn.IsPrimaryKey = false;
				colvarTthaiIn.IsForeignKey = false;
				colvarTthaiIn.IsReadOnly = false;
				
						colvarTthaiIn.DefaultSetting = @"((0))";
				colvarTthaiIn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTthaiIn);
				
				TableSchema.TableColumn colvarTrangThai = new TableSchema.TableColumn(schema);
				colvarTrangThai.ColumnName = "trang_thai";
				colvarTrangThai.DataType = DbType.Byte;
				colvarTrangThai.MaxLength = 0;
				colvarTrangThai.AutoIncrement = false;
				colvarTrangThai.IsNullable = true;
				colvarTrangThai.IsPrimaryKey = false;
				colvarTrangThai.IsForeignKey = false;
				colvarTrangThai.IsReadOnly = false;
				colvarTrangThai.DefaultSetting = @"";
				colvarTrangThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThai);
				
				TableSchema.TableColumn colvarIdGoi = new TableSchema.TableColumn(schema);
				colvarIdGoi.ColumnName = "id_goi";
				colvarIdGoi.DataType = DbType.Int32;
				colvarIdGoi.MaxLength = 0;
				colvarIdGoi.AutoIncrement = false;
				colvarIdGoi.IsNullable = true;
				colvarIdGoi.IsPrimaryKey = false;
				colvarIdGoi.IsForeignKey = false;
				colvarIdGoi.IsReadOnly = false;
				colvarIdGoi.DefaultSetting = @"";
				colvarIdGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdGoi);
				
				TableSchema.TableColumn colvarTrongGoi = new TableSchema.TableColumn(schema);
				colvarTrongGoi.ColumnName = "trong_goi";
				colvarTrongGoi.DataType = DbType.Byte;
				colvarTrongGoi.MaxLength = 0;
				colvarTrongGoi.AutoIncrement = false;
				colvarTrongGoi.IsNullable = true;
				colvarTrongGoi.IsPrimaryKey = false;
				colvarTrongGoi.IsForeignKey = false;
				colvarTrongGoi.IsReadOnly = false;
				colvarTrongGoi.DefaultSetting = @"";
				colvarTrongGoi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrongGoi);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 30;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 30;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarIpMaytao = new TableSchema.TableColumn(schema);
				colvarIpMaytao.ColumnName = "ip_maytao";
				colvarIpMaytao.DataType = DbType.String;
				colvarIpMaytao.MaxLength = 30;
				colvarIpMaytao.AutoIncrement = false;
				colvarIpMaytao.IsNullable = true;
				colvarIpMaytao.IsPrimaryKey = false;
				colvarIpMaytao.IsForeignKey = false;
				colvarIpMaytao.IsReadOnly = false;
				colvarIpMaytao.DefaultSetting = @"";
				colvarIpMaytao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMaytao);
				
				TableSchema.TableColumn colvarIpMaysua = new TableSchema.TableColumn(schema);
				colvarIpMaysua.ColumnName = "ip_maysua";
				colvarIpMaysua.DataType = DbType.String;
				colvarIpMaysua.MaxLength = 30;
				colvarIpMaysua.AutoIncrement = false;
				colvarIpMaysua.IsNullable = true;
				colvarIpMaysua.IsPrimaryKey = false;
				colvarIpMaysua.IsForeignKey = false;
				colvarIpMaysua.IsReadOnly = false;
				colvarIpMaysua.DefaultSetting = @"";
				colvarIpMaysua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIpMaysua);
				
				TableSchema.TableColumn colvarTenMaytao = new TableSchema.TableColumn(schema);
				colvarTenMaytao.ColumnName = "ten_maytao";
				colvarTenMaytao.DataType = DbType.String;
				colvarTenMaytao.MaxLength = 100;
				colvarTenMaytao.AutoIncrement = false;
				colvarTenMaytao.IsNullable = true;
				colvarTenMaytao.IsPrimaryKey = false;
				colvarTenMaytao.IsForeignKey = false;
				colvarTenMaytao.IsReadOnly = false;
				colvarTenMaytao.DefaultSetting = @"";
				colvarTenMaytao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenMaytao);
				
				TableSchema.TableColumn colvarTenMaysua = new TableSchema.TableColumn(schema);
				colvarTenMaysua.ColumnName = "ten_maysua";
				colvarTenMaysua.DataType = DbType.String;
				colvarTenMaysua.MaxLength = 100;
				colvarTenMaysua.AutoIncrement = false;
				colvarTenMaysua.IsNullable = true;
				colvarTenMaysua.IsPrimaryKey = false;
				colvarTenMaysua.IsForeignKey = false;
				colvarTenMaysua.IsReadOnly = false;
				colvarTenMaysua.DefaultSetting = @"";
				colvarTenMaysua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenMaysua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("noitru_phieudieutri",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdPhieudieutri")]
		[Bindable(true)]
		public long IdPhieudieutri 
		{
			get { return GetColumnValue<long>(Columns.IdPhieudieutri); }
			set { SetColumnValue(Columns.IdPhieudieutri, value); }
		}
		  
		[XmlAttribute("MaLuotkham")]
		[Bindable(true)]
		public string MaLuotkham 
		{
			get { return GetColumnValue<string>(Columns.MaLuotkham); }
			set { SetColumnValue(Columns.MaLuotkham, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long? IdBenhnhan 
		{
			get { return GetColumnValue<long?>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("IdBacsi")]
		[Bindable(true)]
		public short? IdBacsi 
		{
			get { return GetColumnValue<short?>(Columns.IdBacsi); }
			set { SetColumnValue(Columns.IdBacsi, value); }
		}
		  
		[XmlAttribute("IdBuongGiuong")]
		[Bindable(true)]
		public long? IdBuongGiuong 
		{
			get { return GetColumnValue<long?>(Columns.IdBuongGiuong); }
			set { SetColumnValue(Columns.IdBuongGiuong, value); }
		}
		  
		[XmlAttribute("IdBuong")]
		[Bindable(true)]
		public int? IdBuong 
		{
			get { return GetColumnValue<int?>(Columns.IdBuong); }
			set { SetColumnValue(Columns.IdBuong, value); }
		}
		  
		[XmlAttribute("IdGiuong")]
		[Bindable(true)]
		public int? IdGiuong 
		{
			get { return GetColumnValue<int?>(Columns.IdGiuong); }
			set { SetColumnValue(Columns.IdGiuong, value); }
		}
		  
		[XmlAttribute("IdKhoanoitru")]
		[Bindable(true)]
		public short? IdKhoanoitru 
		{
			get { return GetColumnValue<short?>(Columns.IdKhoanoitru); }
			set { SetColumnValue(Columns.IdKhoanoitru, value); }
		}
		  
		[XmlAttribute("Thu")]
		[Bindable(true)]
		public string Thu 
		{
			get { return GetColumnValue<string>(Columns.Thu); }
			set { SetColumnValue(Columns.Thu, value); }
		}
		  
		[XmlAttribute("ThongtinTheodoi")]
		[Bindable(true)]
		public string ThongtinTheodoi 
		{
			get { return GetColumnValue<string>(Columns.ThongtinTheodoi); }
			set { SetColumnValue(Columns.ThongtinTheodoi, value); }
		}
		  
		[XmlAttribute("ThongtinDieutri")]
		[Bindable(true)]
		public string ThongtinDieutri 
		{
			get { return GetColumnValue<string>(Columns.ThongtinDieutri); }
			set { SetColumnValue(Columns.ThongtinDieutri, value); }
		}
		  
		[XmlAttribute("NgayDieutri")]
		[Bindable(true)]
		public DateTime? NgayDieutri 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayDieutri); }
			set { SetColumnValue(Columns.NgayDieutri, value); }
		}
		  
		[XmlAttribute("GioDieutri")]
		[Bindable(true)]
		public string GioDieutri 
		{
			get { return GetColumnValue<string>(Columns.GioDieutri); }
			set { SetColumnValue(Columns.GioDieutri, value); }
		}
		  
		[XmlAttribute("TthaiBosung")]
		[Bindable(true)]
		public byte? TthaiBosung 
		{
			get { return GetColumnValue<byte?>(Columns.TthaiBosung); }
			set { SetColumnValue(Columns.TthaiBosung, value); }
		}
		  
		[XmlAttribute("TthaiIn")]
		[Bindable(true)]
		public byte? TthaiIn 
		{
			get { return GetColumnValue<byte?>(Columns.TthaiIn); }
			set { SetColumnValue(Columns.TthaiIn, value); }
		}
		  
		[XmlAttribute("TrangThai")]
		[Bindable(true)]
		public byte? TrangThai 
		{
			get { return GetColumnValue<byte?>(Columns.TrangThai); }
			set { SetColumnValue(Columns.TrangThai, value); }
		}
		  
		[XmlAttribute("IdGoi")]
		[Bindable(true)]
		public int? IdGoi 
		{
			get { return GetColumnValue<int?>(Columns.IdGoi); }
			set { SetColumnValue(Columns.IdGoi, value); }
		}
		  
		[XmlAttribute("TrongGoi")]
		[Bindable(true)]
		public byte? TrongGoi 
		{
			get { return GetColumnValue<byte?>(Columns.TrongGoi); }
			set { SetColumnValue(Columns.TrongGoi, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("IpMaytao")]
		[Bindable(true)]
		public string IpMaytao 
		{
			get { return GetColumnValue<string>(Columns.IpMaytao); }
			set { SetColumnValue(Columns.IpMaytao, value); }
		}
		  
		[XmlAttribute("IpMaysua")]
		[Bindable(true)]
		public string IpMaysua 
		{
			get { return GetColumnValue<string>(Columns.IpMaysua); }
			set { SetColumnValue(Columns.IpMaysua, value); }
		}
		  
		[XmlAttribute("TenMaytao")]
		[Bindable(true)]
		public string TenMaytao 
		{
			get { return GetColumnValue<string>(Columns.TenMaytao); }
			set { SetColumnValue(Columns.TenMaytao, value); }
		}
		  
		[XmlAttribute("TenMaysua")]
		[Bindable(true)]
		public string TenMaysua 
		{
			get { return GetColumnValue<string>(Columns.TenMaysua); }
			set { SetColumnValue(Columns.TenMaysua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaLuotkham,long? varIdBenhnhan,short? varIdBacsi,long? varIdBuongGiuong,int? varIdBuong,int? varIdGiuong,short? varIdKhoanoitru,string varThu,string varThongtinTheodoi,string varThongtinDieutri,DateTime? varNgayDieutri,string varGioDieutri,byte? varTthaiBosung,byte? varTthaiIn,byte? varTrangThai,int? varIdGoi,byte? varTrongGoi,DateTime? varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua,string varIpMaytao,string varIpMaysua,string varTenMaytao,string varTenMaysua)
		{
			NoitruPhieudieutri item = new NoitruPhieudieutri();
			
			item.MaLuotkham = varMaLuotkham;
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.IdBacsi = varIdBacsi;
			
			item.IdBuongGiuong = varIdBuongGiuong;
			
			item.IdBuong = varIdBuong;
			
			item.IdGiuong = varIdGiuong;
			
			item.IdKhoanoitru = varIdKhoanoitru;
			
			item.Thu = varThu;
			
			item.ThongtinTheodoi = varThongtinTheodoi;
			
			item.ThongtinDieutri = varThongtinDieutri;
			
			item.NgayDieutri = varNgayDieutri;
			
			item.GioDieutri = varGioDieutri;
			
			item.TthaiBosung = varTthaiBosung;
			
			item.TthaiIn = varTthaiIn;
			
			item.TrangThai = varTrangThai;
			
			item.IdGoi = varIdGoi;
			
			item.TrongGoi = varTrongGoi;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiSua = varNguoiSua;
			
			item.IpMaytao = varIpMaytao;
			
			item.IpMaysua = varIpMaysua;
			
			item.TenMaytao = varTenMaytao;
			
			item.TenMaysua = varTenMaysua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varIdPhieudieutri,string varMaLuotkham,long? varIdBenhnhan,short? varIdBacsi,long? varIdBuongGiuong,int? varIdBuong,int? varIdGiuong,short? varIdKhoanoitru,string varThu,string varThongtinTheodoi,string varThongtinDieutri,DateTime? varNgayDieutri,string varGioDieutri,byte? varTthaiBosung,byte? varTthaiIn,byte? varTrangThai,int? varIdGoi,byte? varTrongGoi,DateTime? varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua,string varIpMaytao,string varIpMaysua,string varTenMaytao,string varTenMaysua)
		{
			NoitruPhieudieutri item = new NoitruPhieudieutri();
			
				item.IdPhieudieutri = varIdPhieudieutri;
			
				item.MaLuotkham = varMaLuotkham;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.IdBacsi = varIdBacsi;
			
				item.IdBuongGiuong = varIdBuongGiuong;
			
				item.IdBuong = varIdBuong;
			
				item.IdGiuong = varIdGiuong;
			
				item.IdKhoanoitru = varIdKhoanoitru;
			
				item.Thu = varThu;
			
				item.ThongtinTheodoi = varThongtinTheodoi;
			
				item.ThongtinDieutri = varThongtinDieutri;
			
				item.NgayDieutri = varNgayDieutri;
			
				item.GioDieutri = varGioDieutri;
			
				item.TthaiBosung = varTthaiBosung;
			
				item.TthaiIn = varTthaiIn;
			
				item.TrangThai = varTrangThai;
			
				item.IdGoi = varIdGoi;
			
				item.TrongGoi = varTrongGoi;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiSua = varNguoiSua;
			
				item.IpMaytao = varIpMaytao;
			
				item.IpMaysua = varIpMaysua;
			
				item.TenMaytao = varTenMaytao;
			
				item.TenMaysua = varTenMaysua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdPhieudieutriColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLuotkhamColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBacsiColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBuongGiuongColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBuongColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn IdGiuongColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoanoitruColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn ThuColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn ThongtinTheodoiColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn ThongtinDieutriColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayDieutriColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn GioDieutriColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn TthaiBosungColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn TthaiInColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn IdGoiColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn TrongGoiColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMaytaoColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn IpMaysuaColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn TenMaytaoColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn TenMaysuaColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdPhieudieutri = @"id_phieudieutri";
			 public static string MaLuotkham = @"ma_luotkham";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string IdBacsi = @"id_bacsi";
			 public static string IdBuongGiuong = @"id_buong_giuong";
			 public static string IdBuong = @"id_buong";
			 public static string IdGiuong = @"id_giuong";
			 public static string IdKhoanoitru = @"id_khoanoitru";
			 public static string Thu = @"thu";
			 public static string ThongtinTheodoi = @"thongtin_theodoi";
			 public static string ThongtinDieutri = @"thongtin_dieutri";
			 public static string NgayDieutri = @"ngay_dieutri";
			 public static string GioDieutri = @"gio_dieutri";
			 public static string TthaiBosung = @"tthai_bosung";
			 public static string TthaiIn = @"tthai_in";
			 public static string TrangThai = @"trang_thai";
			 public static string IdGoi = @"id_goi";
			 public static string TrongGoi = @"trong_goi";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string NgaySua = @"ngay_sua";
			 public static string NguoiSua = @"nguoi_sua";
			 public static string IpMaytao = @"ip_maytao";
			 public static string IpMaysua = @"ip_maysua";
			 public static string TenMaytao = @"ten_maytao";
			 public static string TenMaysua = @"ten_maysua";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
