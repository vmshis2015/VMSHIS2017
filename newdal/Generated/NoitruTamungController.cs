using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
    /// <summary>
    /// Controller class for noitru_tamung
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class NoitruTamungController
    {
        // Preload our schema..
        NoitruTamung thisSchemaLoad = new NoitruTamung();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public NoitruTamungCollection FetchAll()
        {
            NoitruTamungCollection coll = new NoitruTamungCollection();
            Query qry = new Query(NoitruTamung.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public NoitruTamungCollection FetchByID(object Id)
        {
            NoitruTamungCollection coll = new NoitruTamungCollection().Where("id", Id).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public NoitruTamungCollection FetchByQuery(Query qry)
        {
            NoitruTamungCollection coll = new NoitruTamungCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (NoitruTamung.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (NoitruTamung.Destroy(Id) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(long IdBenhnhan,string MaLuotkham,decimal? SoTien,byte TrangThai,DateTime? NgayTamung,byte? KieuTamung,string MotaThem,int? IdTnv,string NguoiSua,DateTime? NgaySua,string NguoiTao,DateTime NgayTao,short? IdKhoanoitru,long? IdBuonggiuong,int? IdBuong,int? IdGiuong,byte? Noitru,long? IdTamung)
	    {
		    NoitruTamung item = new NoitruTamung();
		    
            item.IdBenhnhan = IdBenhnhan;
            
            item.MaLuotkham = MaLuotkham;
            
            item.SoTien = SoTien;
            
            item.TrangThai = TrangThai;
            
            item.NgayTamung = NgayTamung;
            
            item.KieuTamung = KieuTamung;
            
            item.MotaThem = MotaThem;
            
            item.IdTnv = IdTnv;
            
            item.NguoiSua = NguoiSua;
            
            item.NgaySua = NgaySua;
            
            item.NguoiTao = NguoiTao;
            
            item.NgayTao = NgayTao;
            
            item.IdKhoanoitru = IdKhoanoitru;
            
            item.IdBuonggiuong = IdBuonggiuong;
            
            item.IdBuong = IdBuong;
            
            item.IdGiuong = IdGiuong;
            
            item.Noitru = Noitru;
            
            item.IdTamung = IdTamung;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long Id,long IdBenhnhan,string MaLuotkham,decimal? SoTien,byte TrangThai,DateTime? NgayTamung,byte? KieuTamung,string MotaThem,int? IdTnv,string NguoiSua,DateTime? NgaySua,string NguoiTao,DateTime NgayTao,short? IdKhoanoitru,long? IdBuonggiuong,int? IdBuong,int? IdGiuong,byte? Noitru,long? IdTamung)
	    {
		    NoitruTamung item = new NoitruTamung();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Id = Id;
				
			item.IdBenhnhan = IdBenhnhan;
				
			item.MaLuotkham = MaLuotkham;
				
			item.SoTien = SoTien;
				
			item.TrangThai = TrangThai;
				
			item.NgayTamung = NgayTamung;
				
			item.KieuTamung = KieuTamung;
				
			item.MotaThem = MotaThem;
				
			item.IdTnv = IdTnv;
				
			item.NguoiSua = NguoiSua;
				
			item.NgaySua = NgaySua;
				
			item.NguoiTao = NguoiTao;
				
			item.NgayTao = NgayTao;
				
			item.IdKhoanoitru = IdKhoanoitru;
				
			item.IdBuonggiuong = IdBuonggiuong;
				
			item.IdBuong = IdBuong;
				
			item.IdGiuong = IdGiuong;
				
			item.Noitru = Noitru;
				
			item.IdTamung = IdTamung;
				
	        item.Save(UserName);
	    }
    }
}
