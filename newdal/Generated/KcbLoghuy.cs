using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the KcbLoghuy class.
	/// </summary>
    [Serializable]
	public partial class KcbLoghuyCollection : ActiveList<KcbLoghuy, KcbLoghuyCollection>
	{	   
		public KcbLoghuyCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>KcbLoghuyCollection</returns>
		public KcbLoghuyCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                KcbLoghuy o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the kcb_loghuy table.
	/// </summary>
	[Serializable]
	public partial class KcbLoghuy : ActiveRecord<KcbLoghuy>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public KcbLoghuy()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public KcbLoghuy(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public KcbLoghuy(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public KcbLoghuy(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("kcb_loghuy", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "Id";
				colvarId.DataType = DbType.Int64;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarIdNhanvien = new TableSchema.TableColumn(schema);
				colvarIdNhanvien.ColumnName = "id_nhanvien";
				colvarIdNhanvien.DataType = DbType.Int16;
				colvarIdNhanvien.MaxLength = 0;
				colvarIdNhanvien.AutoIncrement = false;
				colvarIdNhanvien.IsNullable = false;
				colvarIdNhanvien.IsPrimaryKey = false;
				colvarIdNhanvien.IsForeignKey = false;
				colvarIdNhanvien.IsReadOnly = false;
				colvarIdNhanvien.DefaultSetting = @"";
				colvarIdNhanvien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdNhanvien);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = false;
				colvarIdBenhnhan.IsPrimaryKey = false;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarMaLuotkham = new TableSchema.TableColumn(schema);
				colvarMaLuotkham.ColumnName = "ma_luotkham";
				colvarMaLuotkham.DataType = DbType.String;
				colvarMaLuotkham.MaxLength = 10;
				colvarMaLuotkham.AutoIncrement = false;
				colvarMaLuotkham.IsNullable = false;
				colvarMaLuotkham.IsPrimaryKey = false;
				colvarMaLuotkham.IsForeignKey = false;
				colvarMaLuotkham.IsReadOnly = false;
				colvarMaLuotkham.DefaultSetting = @"";
				colvarMaLuotkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLuotkham);
				
				TableSchema.TableColumn colvarTenBenhnhan = new TableSchema.TableColumn(schema);
				colvarTenBenhnhan.ColumnName = "ten_benhnhan";
				colvarTenBenhnhan.DataType = DbType.String;
				colvarTenBenhnhan.MaxLength = 50;
				colvarTenBenhnhan.AutoIncrement = false;
				colvarTenBenhnhan.IsNullable = true;
				colvarTenBenhnhan.IsPrimaryKey = false;
				colvarTenBenhnhan.IsForeignKey = false;
				colvarTenBenhnhan.IsReadOnly = false;
				colvarTenBenhnhan.DefaultSetting = @"";
				colvarTenBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenBenhnhan);
				
				TableSchema.TableColumn colvarNgayHuy = new TableSchema.TableColumn(schema);
				colvarNgayHuy.ColumnName = "ngay_huy";
				colvarNgayHuy.DataType = DbType.DateTime;
				colvarNgayHuy.MaxLength = 0;
				colvarNgayHuy.AutoIncrement = false;
				colvarNgayHuy.IsNullable = false;
				colvarNgayHuy.IsPrimaryKey = false;
				colvarNgayHuy.IsForeignKey = false;
				colvarNgayHuy.IsReadOnly = false;
				colvarNgayHuy.DefaultSetting = @"";
				colvarNgayHuy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayHuy);
				
				TableSchema.TableColumn colvarSotienHuy = new TableSchema.TableColumn(schema);
				colvarSotienHuy.ColumnName = "sotien_huy";
				colvarSotienHuy.DataType = DbType.Decimal;
				colvarSotienHuy.MaxLength = 0;
				colvarSotienHuy.AutoIncrement = false;
				colvarSotienHuy.IsNullable = false;
				colvarSotienHuy.IsPrimaryKey = false;
				colvarSotienHuy.IsForeignKey = false;
				colvarSotienHuy.IsReadOnly = false;
				colvarSotienHuy.DefaultSetting = @"";
				colvarSotienHuy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSotienHuy);
				
				TableSchema.TableColumn colvarLoaiphieuHuy = new TableSchema.TableColumn(schema);
				colvarLoaiphieuHuy.ColumnName = "loaiphieu_huy";
				colvarLoaiphieuHuy.DataType = DbType.Byte;
				colvarLoaiphieuHuy.MaxLength = 0;
				colvarLoaiphieuHuy.AutoIncrement = false;
				colvarLoaiphieuHuy.IsNullable = false;
				colvarLoaiphieuHuy.IsPrimaryKey = false;
				colvarLoaiphieuHuy.IsForeignKey = false;
				colvarLoaiphieuHuy.IsReadOnly = false;
				colvarLoaiphieuHuy.DefaultSetting = @"";
				colvarLoaiphieuHuy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLoaiphieuHuy);
				
				TableSchema.TableColumn colvarLydoHuy = new TableSchema.TableColumn(schema);
				colvarLydoHuy.ColumnName = "lydo_huy";
				colvarLydoHuy.DataType = DbType.String;
				colvarLydoHuy.MaxLength = 255;
				colvarLydoHuy.AutoIncrement = false;
				colvarLydoHuy.IsNullable = false;
				colvarLydoHuy.IsPrimaryKey = false;
				colvarLydoHuy.IsForeignKey = false;
				colvarLydoHuy.IsReadOnly = false;
				colvarLydoHuy.DefaultSetting = @"";
				colvarLydoHuy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLydoHuy);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = false;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 30;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = false;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("kcb_loghuy",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public long Id 
		{
			get { return GetColumnValue<long>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("IdNhanvien")]
		[Bindable(true)]
		public short IdNhanvien 
		{
			get { return GetColumnValue<short>(Columns.IdNhanvien); }
			set { SetColumnValue(Columns.IdNhanvien, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long IdBenhnhan 
		{
			get { return GetColumnValue<long>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("MaLuotkham")]
		[Bindable(true)]
		public string MaLuotkham 
		{
			get { return GetColumnValue<string>(Columns.MaLuotkham); }
			set { SetColumnValue(Columns.MaLuotkham, value); }
		}
		  
		[XmlAttribute("TenBenhnhan")]
		[Bindable(true)]
		public string TenBenhnhan 
		{
			get { return GetColumnValue<string>(Columns.TenBenhnhan); }
			set { SetColumnValue(Columns.TenBenhnhan, value); }
		}
		  
		[XmlAttribute("NgayHuy")]
		[Bindable(true)]
		public DateTime NgayHuy 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayHuy); }
			set { SetColumnValue(Columns.NgayHuy, value); }
		}
		  
		[XmlAttribute("SotienHuy")]
		[Bindable(true)]
		public decimal SotienHuy 
		{
			get { return GetColumnValue<decimal>(Columns.SotienHuy); }
			set { SetColumnValue(Columns.SotienHuy, value); }
		}
		  
		[XmlAttribute("LoaiphieuHuy")]
		[Bindable(true)]
		public byte LoaiphieuHuy 
		{
			get { return GetColumnValue<byte>(Columns.LoaiphieuHuy); }
			set { SetColumnValue(Columns.LoaiphieuHuy, value); }
		}
		  
		[XmlAttribute("LydoHuy")]
		[Bindable(true)]
		public string LydoHuy 
		{
			get { return GetColumnValue<string>(Columns.LydoHuy); }
			set { SetColumnValue(Columns.LydoHuy, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime NgayTao 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(short varIdNhanvien,long varIdBenhnhan,string varMaLuotkham,string varTenBenhnhan,DateTime varNgayHuy,decimal varSotienHuy,byte varLoaiphieuHuy,string varLydoHuy,DateTime varNgayTao,string varNguoiTao)
		{
			KcbLoghuy item = new KcbLoghuy();
			
			item.IdNhanvien = varIdNhanvien;
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.MaLuotkham = varMaLuotkham;
			
			item.TenBenhnhan = varTenBenhnhan;
			
			item.NgayHuy = varNgayHuy;
			
			item.SotienHuy = varSotienHuy;
			
			item.LoaiphieuHuy = varLoaiphieuHuy;
			
			item.LydoHuy = varLydoHuy;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varId,short varIdNhanvien,long varIdBenhnhan,string varMaLuotkham,string varTenBenhnhan,DateTime varNgayHuy,decimal varSotienHuy,byte varLoaiphieuHuy,string varLydoHuy,DateTime varNgayTao,string varNguoiTao)
		{
			KcbLoghuy item = new KcbLoghuy();
			
				item.Id = varId;
			
				item.IdNhanvien = varIdNhanvien;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.MaLuotkham = varMaLuotkham;
			
				item.TenBenhnhan = varTenBenhnhan;
			
				item.NgayHuy = varNgayHuy;
			
				item.SotienHuy = varSotienHuy;
			
				item.LoaiphieuHuy = varLoaiphieuHuy;
			
				item.LydoHuy = varLydoHuy;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdNhanvienColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLuotkhamColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn TenBenhnhanColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayHuyColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn SotienHuyColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn LoaiphieuHuyColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn LydoHuyColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"Id";
			 public static string IdNhanvien = @"id_nhanvien";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string MaLuotkham = @"ma_luotkham";
			 public static string TenBenhnhan = @"ten_benhnhan";
			 public static string NgayHuy = @"ngay_huy";
			 public static string SotienHuy = @"sotien_huy";
			 public static string LoaiphieuHuy = @"loaiphieu_huy";
			 public static string LydoHuy = @"lydo_huy";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiTao = @"nguoi_tao";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
