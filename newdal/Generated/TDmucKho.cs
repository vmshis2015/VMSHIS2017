using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the TDmucKho class.
	/// </summary>
    [Serializable]
	public partial class TDmucKhoCollection : ActiveList<TDmucKho, TDmucKhoCollection>
	{	   
		public TDmucKhoCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TDmucKhoCollection</returns>
		public TDmucKhoCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TDmucKho o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the t_dmuc_kho table.
	/// </summary>
	[Serializable]
	public partial class TDmucKho : ActiveRecord<TDmucKho>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TDmucKho()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TDmucKho(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TDmucKho(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TDmucKho(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("t_dmuc_kho", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdKho = new TableSchema.TableColumn(schema);
				colvarIdKho.ColumnName = "id_kho";
				colvarIdKho.DataType = DbType.Int32;
				colvarIdKho.MaxLength = 0;
				colvarIdKho.AutoIncrement = true;
				colvarIdKho.IsNullable = false;
				colvarIdKho.IsPrimaryKey = true;
				colvarIdKho.IsForeignKey = false;
				colvarIdKho.IsReadOnly = false;
				colvarIdKho.DefaultSetting = @"";
				colvarIdKho.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKho);
				
				TableSchema.TableColumn colvarMaKho = new TableSchema.TableColumn(schema);
				colvarMaKho.ColumnName = "ma_kho";
				colvarMaKho.DataType = DbType.String;
				colvarMaKho.MaxLength = 50;
				colvarMaKho.AutoIncrement = false;
				colvarMaKho.IsNullable = false;
				colvarMaKho.IsPrimaryKey = false;
				colvarMaKho.IsForeignKey = false;
				colvarMaKho.IsReadOnly = false;
				colvarMaKho.DefaultSetting = @"";
				colvarMaKho.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKho);
				
				TableSchema.TableColumn colvarTenKho = new TableSchema.TableColumn(schema);
				colvarTenKho.ColumnName = "ten_kho";
				colvarTenKho.DataType = DbType.String;
				colvarTenKho.MaxLength = 50;
				colvarTenKho.AutoIncrement = false;
				colvarTenKho.IsNullable = false;
				colvarTenKho.IsPrimaryKey = false;
				colvarTenKho.IsForeignKey = false;
				colvarTenKho.IsReadOnly = false;
				colvarTenKho.DefaultSetting = @"";
				colvarTenKho.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenKho);
				
				TableSchema.TableColumn colvarSttHthi = new TableSchema.TableColumn(schema);
				colvarSttHthi.ColumnName = "stt_hthi";
				colvarSttHthi.DataType = DbType.Int32;
				colvarSttHthi.MaxLength = 0;
				colvarSttHthi.AutoIncrement = false;
				colvarSttHthi.IsNullable = true;
				colvarSttHthi.IsPrimaryKey = false;
				colvarSttHthi.IsForeignKey = false;
				colvarSttHthi.IsReadOnly = false;
				colvarSttHthi.DefaultSetting = @"";
				colvarSttHthi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSttHthi);
				
				TableSchema.TableColumn colvarKieuKho = new TableSchema.TableColumn(schema);
				colvarKieuKho.ColumnName = "kieu_kho";
				colvarKieuKho.DataType = DbType.String;
				colvarKieuKho.MaxLength = 10;
				colvarKieuKho.AutoIncrement = false;
				colvarKieuKho.IsNullable = true;
				colvarKieuKho.IsPrimaryKey = false;
				colvarKieuKho.IsForeignKey = false;
				colvarKieuKho.IsReadOnly = false;
				
						colvarKieuKho.DefaultSetting = @"((0))";
				colvarKieuKho.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKieuKho);
				
				TableSchema.TableColumn colvarKhoThuocVt = new TableSchema.TableColumn(schema);
				colvarKhoThuocVt.ColumnName = "kho_thuoc_vt";
				colvarKhoThuocVt.DataType = DbType.String;
				colvarKhoThuocVt.MaxLength = 50;
				colvarKhoThuocVt.AutoIncrement = false;
				colvarKhoThuocVt.IsNullable = true;
				colvarKhoThuocVt.IsPrimaryKey = false;
				colvarKhoThuocVt.IsForeignKey = false;
				colvarKhoThuocVt.IsReadOnly = false;
				
						colvarKhoThuocVt.DefaultSetting = @"(N'THUOC')";
				colvarKhoThuocVt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhoThuocVt);
				
				TableSchema.TableColumn colvarIdKhoaphong = new TableSchema.TableColumn(schema);
				colvarIdKhoaphong.ColumnName = "id_khoaphong";
				colvarIdKhoaphong.DataType = DbType.Int16;
				colvarIdKhoaphong.MaxLength = 0;
				colvarIdKhoaphong.AutoIncrement = false;
				colvarIdKhoaphong.IsNullable = false;
				colvarIdKhoaphong.IsPrimaryKey = false;
				colvarIdKhoaphong.IsForeignKey = false;
				colvarIdKhoaphong.IsReadOnly = false;
				
						colvarIdKhoaphong.DefaultSetting = @"((0))";
				colvarIdKhoaphong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoaphong);
				
				TableSchema.TableColumn colvarMotaThem = new TableSchema.TableColumn(schema);
				colvarMotaThem.ColumnName = "mota_them";
				colvarMotaThem.DataType = DbType.String;
				colvarMotaThem.MaxLength = 255;
				colvarMotaThem.AutoIncrement = false;
				colvarMotaThem.IsNullable = true;
				colvarMotaThem.IsPrimaryKey = false;
				colvarMotaThem.IsForeignKey = false;
				colvarMotaThem.IsReadOnly = false;
				colvarMotaThem.DefaultSetting = @"";
				colvarMotaThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMotaThem);
				
				TableSchema.TableColumn colvarLaQuaythuoc = new TableSchema.TableColumn(schema);
				colvarLaQuaythuoc.ColumnName = "la_quaythuoc";
				colvarLaQuaythuoc.DataType = DbType.Byte;
				colvarLaQuaythuoc.MaxLength = 0;
				colvarLaQuaythuoc.AutoIncrement = false;
				colvarLaQuaythuoc.IsNullable = true;
				colvarLaQuaythuoc.IsPrimaryKey = false;
				colvarLaQuaythuoc.IsForeignKey = false;
				colvarLaQuaythuoc.IsReadOnly = false;
				
						colvarLaQuaythuoc.DefaultSetting = @"((0))";
				colvarLaQuaythuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLaQuaythuoc);
				
				TableSchema.TableColumn colvarKtraTon = new TableSchema.TableColumn(schema);
				colvarKtraTon.ColumnName = "ktra_ton";
				colvarKtraTon.DataType = DbType.Byte;
				colvarKtraTon.MaxLength = 0;
				colvarKtraTon.AutoIncrement = false;
				colvarKtraTon.IsNullable = true;
				colvarKtraTon.IsPrimaryKey = false;
				colvarKtraTon.IsForeignKey = false;
				colvarKtraTon.IsReadOnly = false;
				
						colvarKtraTon.DefaultSetting = @"((0))";
				colvarKtraTon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKtraTon);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "ngay_sua";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "ngay_tao";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				
						colvarNgayTao.DefaultSetting = @"(getdate())";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "nguoi_sua";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "nguoi_tao";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarLaTuthuoc = new TableSchema.TableColumn(schema);
				colvarLaTuthuoc.ColumnName = "la_tuthuoc";
				colvarLaTuthuoc.DataType = DbType.Byte;
				colvarLaTuthuoc.MaxLength = 0;
				colvarLaTuthuoc.AutoIncrement = false;
				colvarLaTuthuoc.IsNullable = true;
				colvarLaTuthuoc.IsPrimaryKey = false;
				colvarLaTuthuoc.IsForeignKey = false;
				colvarLaTuthuoc.IsReadOnly = false;
				
						colvarLaTuthuoc.DefaultSetting = @"((0))";
				colvarLaTuthuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLaTuthuoc);
				
				TableSchema.TableColumn colvarLoaiBnhan = new TableSchema.TableColumn(schema);
				colvarLoaiBnhan.ColumnName = "loai_bnhan";
				colvarLoaiBnhan.DataType = DbType.String;
				colvarLoaiBnhan.MaxLength = 10;
				colvarLoaiBnhan.AutoIncrement = false;
				colvarLoaiBnhan.IsNullable = true;
				colvarLoaiBnhan.IsPrimaryKey = false;
				colvarLoaiBnhan.IsForeignKey = false;
				colvarLoaiBnhan.IsReadOnly = false;
				
						colvarLoaiBnhan.DefaultSetting = @"(N'TATCA')";
				colvarLoaiBnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLoaiBnhan);
				
				TableSchema.TableColumn colvarTrangThai = new TableSchema.TableColumn(schema);
				colvarTrangThai.ColumnName = "trang_thai";
				colvarTrangThai.DataType = DbType.Byte;
				colvarTrangThai.MaxLength = 0;
				colvarTrangThai.AutoIncrement = false;
				colvarTrangThai.IsNullable = true;
				colvarTrangThai.IsPrimaryKey = false;
				colvarTrangThai.IsForeignKey = false;
				colvarTrangThai.IsReadOnly = false;
				
						colvarTrangThai.DefaultSetting = @"((1))";
				colvarTrangThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThai);
				
				TableSchema.TableColumn colvarTuTuc = new TableSchema.TableColumn(schema);
				colvarTuTuc.ColumnName = "tu_tuc";
				colvarTuTuc.DataType = DbType.Byte;
				colvarTuTuc.MaxLength = 0;
				colvarTuTuc.AutoIncrement = false;
				colvarTuTuc.IsNullable = true;
				colvarTuTuc.IsPrimaryKey = false;
				colvarTuTuc.IsForeignKey = false;
				colvarTuTuc.IsReadOnly = false;
				colvarTuTuc.DefaultSetting = @"";
				colvarTuTuc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTuTuc);
				
				TableSchema.TableColumn colvarChophepChongia = new TableSchema.TableColumn(schema);
				colvarChophepChongia.ColumnName = "chophep_chongia";
				colvarChophepChongia.DataType = DbType.Byte;
				colvarChophepChongia.MaxLength = 0;
				colvarChophepChongia.AutoIncrement = false;
				colvarChophepChongia.IsNullable = true;
				colvarChophepChongia.IsPrimaryKey = false;
				colvarChophepChongia.IsForeignKey = false;
				colvarChophepChongia.IsReadOnly = false;
				colvarChophepChongia.DefaultSetting = @"";
				colvarChophepChongia.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChophepChongia);
				
				TableSchema.TableColumn colvarKieuBiendong = new TableSchema.TableColumn(schema);
				colvarKieuBiendong.ColumnName = "kieu_biendong";
				colvarKieuBiendong.DataType = DbType.String;
				colvarKieuBiendong.MaxLength = 30;
				colvarKieuBiendong.AutoIncrement = false;
				colvarKieuBiendong.IsNullable = true;
				colvarKieuBiendong.IsPrimaryKey = false;
				colvarKieuBiendong.IsForeignKey = false;
				colvarKieuBiendong.IsReadOnly = false;
				colvarKieuBiendong.DefaultSetting = @"";
				colvarKieuBiendong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKieuBiendong);
				
				TableSchema.TableColumn colvarLoaiKho = new TableSchema.TableColumn(schema);
				colvarLoaiKho.ColumnName = "loai_kho";
				colvarLoaiKho.DataType = DbType.Byte;
				colvarLoaiKho.MaxLength = 0;
				colvarLoaiKho.AutoIncrement = false;
				colvarLoaiKho.IsNullable = true;
				colvarLoaiKho.IsPrimaryKey = false;
				colvarLoaiKho.IsForeignKey = false;
				colvarLoaiKho.IsReadOnly = false;
				colvarLoaiKho.DefaultSetting = @"";
				colvarLoaiKho.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLoaiKho);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("t_dmuc_kho",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdKho")]
		[Bindable(true)]
		public int IdKho 
		{
			get { return GetColumnValue<int>(Columns.IdKho); }
			set { SetColumnValue(Columns.IdKho, value); }
		}
		  
		[XmlAttribute("MaKho")]
		[Bindable(true)]
		public string MaKho 
		{
			get { return GetColumnValue<string>(Columns.MaKho); }
			set { SetColumnValue(Columns.MaKho, value); }
		}
		  
		[XmlAttribute("TenKho")]
		[Bindable(true)]
		public string TenKho 
		{
			get { return GetColumnValue<string>(Columns.TenKho); }
			set { SetColumnValue(Columns.TenKho, value); }
		}
		  
		[XmlAttribute("SttHthi")]
		[Bindable(true)]
		public int? SttHthi 
		{
			get { return GetColumnValue<int?>(Columns.SttHthi); }
			set { SetColumnValue(Columns.SttHthi, value); }
		}
		  
		[XmlAttribute("KieuKho")]
		[Bindable(true)]
		public string KieuKho 
		{
			get { return GetColumnValue<string>(Columns.KieuKho); }
			set { SetColumnValue(Columns.KieuKho, value); }
		}
		  
		[XmlAttribute("KhoThuocVt")]
		[Bindable(true)]
		public string KhoThuocVt 
		{
			get { return GetColumnValue<string>(Columns.KhoThuocVt); }
			set { SetColumnValue(Columns.KhoThuocVt, value); }
		}
		  
		[XmlAttribute("IdKhoaphong")]
		[Bindable(true)]
		public short IdKhoaphong 
		{
			get { return GetColumnValue<short>(Columns.IdKhoaphong); }
			set { SetColumnValue(Columns.IdKhoaphong, value); }
		}
		  
		[XmlAttribute("MotaThem")]
		[Bindable(true)]
		public string MotaThem 
		{
			get { return GetColumnValue<string>(Columns.MotaThem); }
			set { SetColumnValue(Columns.MotaThem, value); }
		}
		  
		[XmlAttribute("LaQuaythuoc")]
		[Bindable(true)]
		public byte? LaQuaythuoc 
		{
			get { return GetColumnValue<byte?>(Columns.LaQuaythuoc); }
			set { SetColumnValue(Columns.LaQuaythuoc, value); }
		}
		  
		[XmlAttribute("KtraTon")]
		[Bindable(true)]
		public byte? KtraTon 
		{
			get { return GetColumnValue<byte?>(Columns.KtraTon); }
			set { SetColumnValue(Columns.KtraTon, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("LaTuthuoc")]
		[Bindable(true)]
		public byte? LaTuthuoc 
		{
			get { return GetColumnValue<byte?>(Columns.LaTuthuoc); }
			set { SetColumnValue(Columns.LaTuthuoc, value); }
		}
		  
		[XmlAttribute("LoaiBnhan")]
		[Bindable(true)]
		public string LoaiBnhan 
		{
			get { return GetColumnValue<string>(Columns.LoaiBnhan); }
			set { SetColumnValue(Columns.LoaiBnhan, value); }
		}
		  
		[XmlAttribute("TrangThai")]
		[Bindable(true)]
		public byte? TrangThai 
		{
			get { return GetColumnValue<byte?>(Columns.TrangThai); }
			set { SetColumnValue(Columns.TrangThai, value); }
		}
		  
		[XmlAttribute("TuTuc")]
		[Bindable(true)]
		public byte? TuTuc 
		{
			get { return GetColumnValue<byte?>(Columns.TuTuc); }
			set { SetColumnValue(Columns.TuTuc, value); }
		}
		  
		[XmlAttribute("ChophepChongia")]
		[Bindable(true)]
		public byte? ChophepChongia 
		{
			get { return GetColumnValue<byte?>(Columns.ChophepChongia); }
			set { SetColumnValue(Columns.ChophepChongia, value); }
		}
		  
		[XmlAttribute("KieuBiendong")]
		[Bindable(true)]
		public string KieuBiendong 
		{
			get { return GetColumnValue<string>(Columns.KieuBiendong); }
			set { SetColumnValue(Columns.KieuBiendong, value); }
		}
		  
		[XmlAttribute("LoaiKho")]
		[Bindable(true)]
		public byte? LoaiKho 
		{
			get { return GetColumnValue<byte?>(Columns.LoaiKho); }
			set { SetColumnValue(Columns.LoaiKho, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaKho,string varTenKho,int? varSttHthi,string varKieuKho,string varKhoThuocVt,short varIdKhoaphong,string varMotaThem,byte? varLaQuaythuoc,byte? varKtraTon,DateTime? varNgaySua,DateTime? varNgayTao,string varNguoiSua,string varNguoiTao,byte? varLaTuthuoc,string varLoaiBnhan,byte? varTrangThai,byte? varTuTuc,byte? varChophepChongia,string varKieuBiendong,byte? varLoaiKho)
		{
			TDmucKho item = new TDmucKho();
			
			item.MaKho = varMaKho;
			
			item.TenKho = varTenKho;
			
			item.SttHthi = varSttHthi;
			
			item.KieuKho = varKieuKho;
			
			item.KhoThuocVt = varKhoThuocVt;
			
			item.IdKhoaphong = varIdKhoaphong;
			
			item.MotaThem = varMotaThem;
			
			item.LaQuaythuoc = varLaQuaythuoc;
			
			item.KtraTon = varKtraTon;
			
			item.NgaySua = varNgaySua;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiSua = varNguoiSua;
			
			item.NguoiTao = varNguoiTao;
			
			item.LaTuthuoc = varLaTuthuoc;
			
			item.LoaiBnhan = varLoaiBnhan;
			
			item.TrangThai = varTrangThai;
			
			item.TuTuc = varTuTuc;
			
			item.ChophepChongia = varChophepChongia;
			
			item.KieuBiendong = varKieuBiendong;
			
			item.LoaiKho = varLoaiKho;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdKho,string varMaKho,string varTenKho,int? varSttHthi,string varKieuKho,string varKhoThuocVt,short varIdKhoaphong,string varMotaThem,byte? varLaQuaythuoc,byte? varKtraTon,DateTime? varNgaySua,DateTime? varNgayTao,string varNguoiSua,string varNguoiTao,byte? varLaTuthuoc,string varLoaiBnhan,byte? varTrangThai,byte? varTuTuc,byte? varChophepChongia,string varKieuBiendong,byte? varLoaiKho)
		{
			TDmucKho item = new TDmucKho();
			
				item.IdKho = varIdKho;
			
				item.MaKho = varMaKho;
			
				item.TenKho = varTenKho;
			
				item.SttHthi = varSttHthi;
			
				item.KieuKho = varKieuKho;
			
				item.KhoThuocVt = varKhoThuocVt;
			
				item.IdKhoaphong = varIdKhoaphong;
			
				item.MotaThem = varMotaThem;
			
				item.LaQuaythuoc = varLaQuaythuoc;
			
				item.KtraTon = varKtraTon;
			
				item.NgaySua = varNgaySua;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiSua = varNguoiSua;
			
				item.NguoiTao = varNguoiTao;
			
				item.LaTuthuoc = varLaTuthuoc;
			
				item.LoaiBnhan = varLoaiBnhan;
			
				item.TrangThai = varTrangThai;
			
				item.TuTuc = varTuTuc;
			
				item.ChophepChongia = varChophepChongia;
			
				item.KieuBiendong = varKieuBiendong;
			
				item.LoaiKho = varLoaiKho;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdKhoColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKhoColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn TenKhoColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn SttHthiColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn KieuKhoColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn KhoThuocVtColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoaphongColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn MotaThemColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn LaQuaythuocColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn KtraTonColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn LaTuthuocColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn LoaiBnhanColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn TuTucColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn ChophepChongiaColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn KieuBiendongColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn LoaiKhoColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdKho = @"id_kho";
			 public static string MaKho = @"ma_kho";
			 public static string TenKho = @"ten_kho";
			 public static string SttHthi = @"stt_hthi";
			 public static string KieuKho = @"kieu_kho";
			 public static string KhoThuocVt = @"kho_thuoc_vt";
			 public static string IdKhoaphong = @"id_khoaphong";
			 public static string MotaThem = @"mota_them";
			 public static string LaQuaythuoc = @"la_quaythuoc";
			 public static string KtraTon = @"ktra_ton";
			 public static string NgaySua = @"ngay_sua";
			 public static string NgayTao = @"ngay_tao";
			 public static string NguoiSua = @"nguoi_sua";
			 public static string NguoiTao = @"nguoi_tao";
			 public static string LaTuthuoc = @"la_tuthuoc";
			 public static string LoaiBnhan = @"loai_bnhan";
			 public static string TrangThai = @"trang_thai";
			 public static string TuTuc = @"tu_tuc";
			 public static string ChophepChongia = @"chophep_chongia";
			 public static string KieuBiendong = @"kieu_biendong";
			 public static string LoaiKho = @"loai_kho";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
