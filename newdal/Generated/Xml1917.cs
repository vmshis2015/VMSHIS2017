using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the Xml1917 class.
	/// </summary>
    [Serializable]
	public partial class Xml1917Collection : ActiveList<Xml1917, Xml1917Collection>
	{	   
		public Xml1917Collection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>Xml1917Collection</returns>
		public Xml1917Collection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                Xml1917 o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the XML_1_917 table.
	/// </summary>
	[Serializable]
	public partial class Xml1917 : ActiveRecord<Xml1917>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public Xml1917()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public Xml1917(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public Xml1917(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public Xml1917(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("XML_1_917", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarMaLk = new TableSchema.TableColumn(schema);
				colvarMaLk.ColumnName = "MA_LK";
				colvarMaLk.DataType = DbType.String;
				colvarMaLk.MaxLength = 20;
				colvarMaLk.AutoIncrement = false;
				colvarMaLk.IsNullable = false;
				colvarMaLk.IsPrimaryKey = true;
				colvarMaLk.IsForeignKey = false;
				colvarMaLk.IsReadOnly = false;
				colvarMaLk.DefaultSetting = @"";
				colvarMaLk.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLk);
				
				TableSchema.TableColumn colvarStt = new TableSchema.TableColumn(schema);
				colvarStt.ColumnName = "STT";
				colvarStt.DataType = DbType.Int32;
				colvarStt.MaxLength = 0;
				colvarStt.AutoIncrement = false;
				colvarStt.IsNullable = true;
				colvarStt.IsPrimaryKey = false;
				colvarStt.IsForeignKey = false;
				colvarStt.IsReadOnly = false;
				colvarStt.DefaultSetting = @"";
				colvarStt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarStt);
				
				TableSchema.TableColumn colvarMaBn = new TableSchema.TableColumn(schema);
				colvarMaBn.ColumnName = "MA_BN";
				colvarMaBn.DataType = DbType.String;
				colvarMaBn.MaxLength = 20;
				colvarMaBn.AutoIncrement = false;
				colvarMaBn.IsNullable = true;
				colvarMaBn.IsPrimaryKey = false;
				colvarMaBn.IsForeignKey = false;
				colvarMaBn.IsReadOnly = false;
				colvarMaBn.DefaultSetting = @"";
				colvarMaBn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaBn);
				
				TableSchema.TableColumn colvarHoTen = new TableSchema.TableColumn(schema);
				colvarHoTen.ColumnName = "HO_TEN";
				colvarHoTen.DataType = DbType.String;
				colvarHoTen.MaxLength = 100;
				colvarHoTen.AutoIncrement = false;
				colvarHoTen.IsNullable = true;
				colvarHoTen.IsPrimaryKey = false;
				colvarHoTen.IsForeignKey = false;
				colvarHoTen.IsReadOnly = false;
				colvarHoTen.DefaultSetting = @"";
				colvarHoTen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHoTen);
				
				TableSchema.TableColumn colvarNgaySinh = new TableSchema.TableColumn(schema);
				colvarNgaySinh.ColumnName = "NGAY_SINH";
				colvarNgaySinh.DataType = DbType.String;
				colvarNgaySinh.MaxLength = 8;
				colvarNgaySinh.AutoIncrement = false;
				colvarNgaySinh.IsNullable = true;
				colvarNgaySinh.IsPrimaryKey = false;
				colvarNgaySinh.IsForeignKey = false;
				colvarNgaySinh.IsReadOnly = false;
				colvarNgaySinh.DefaultSetting = @"";
				colvarNgaySinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySinh);
				
				TableSchema.TableColumn colvarGioiTinh = new TableSchema.TableColumn(schema);
				colvarGioiTinh.ColumnName = "GIOI_TINH";
				colvarGioiTinh.DataType = DbType.Byte;
				colvarGioiTinh.MaxLength = 0;
				colvarGioiTinh.AutoIncrement = false;
				colvarGioiTinh.IsNullable = true;
				colvarGioiTinh.IsPrimaryKey = false;
				colvarGioiTinh.IsForeignKey = false;
				colvarGioiTinh.IsReadOnly = false;
				colvarGioiTinh.DefaultSetting = @"";
				colvarGioiTinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGioiTinh);
				
				TableSchema.TableColumn colvarDiaChi = new TableSchema.TableColumn(schema);
				colvarDiaChi.ColumnName = "DIA_CHI";
				colvarDiaChi.DataType = DbType.String;
				colvarDiaChi.MaxLength = 1024;
				colvarDiaChi.AutoIncrement = false;
				colvarDiaChi.IsNullable = true;
				colvarDiaChi.IsPrimaryKey = false;
				colvarDiaChi.IsForeignKey = false;
				colvarDiaChi.IsReadOnly = false;
				colvarDiaChi.DefaultSetting = @"";
				colvarDiaChi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiaChi);
				
				TableSchema.TableColumn colvarMaThe = new TableSchema.TableColumn(schema);
				colvarMaThe.ColumnName = "MA_THE";
				colvarMaThe.DataType = DbType.String;
				colvarMaThe.MaxLength = 20;
				colvarMaThe.AutoIncrement = false;
				colvarMaThe.IsNullable = true;
				colvarMaThe.IsPrimaryKey = false;
				colvarMaThe.IsForeignKey = false;
				colvarMaThe.IsReadOnly = false;
				colvarMaThe.DefaultSetting = @"";
				colvarMaThe.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaThe);
				
				TableSchema.TableColumn colvarMaDkbd = new TableSchema.TableColumn(schema);
				colvarMaDkbd.ColumnName = "MA_DKBD";
				colvarMaDkbd.DataType = DbType.String;
				colvarMaDkbd.MaxLength = 5;
				colvarMaDkbd.AutoIncrement = false;
				colvarMaDkbd.IsNullable = true;
				colvarMaDkbd.IsPrimaryKey = false;
				colvarMaDkbd.IsForeignKey = false;
				colvarMaDkbd.IsReadOnly = false;
				colvarMaDkbd.DefaultSetting = @"";
				colvarMaDkbd.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDkbd);
				
				TableSchema.TableColumn colvarGtTheTu = new TableSchema.TableColumn(schema);
				colvarGtTheTu.ColumnName = "GT_THE_TU";
				colvarGtTheTu.DataType = DbType.String;
				colvarGtTheTu.MaxLength = 50;
				colvarGtTheTu.AutoIncrement = false;
				colvarGtTheTu.IsNullable = true;
				colvarGtTheTu.IsPrimaryKey = false;
				colvarGtTheTu.IsForeignKey = false;
				colvarGtTheTu.IsReadOnly = false;
				colvarGtTheTu.DefaultSetting = @"";
				colvarGtTheTu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGtTheTu);
				
				TableSchema.TableColumn colvarGtTheDen = new TableSchema.TableColumn(schema);
				colvarGtTheDen.ColumnName = "GT_THE_DEN";
				colvarGtTheDen.DataType = DbType.String;
				colvarGtTheDen.MaxLength = 50;
				colvarGtTheDen.AutoIncrement = false;
				colvarGtTheDen.IsNullable = true;
				colvarGtTheDen.IsPrimaryKey = false;
				colvarGtTheDen.IsForeignKey = false;
				colvarGtTheDen.IsReadOnly = false;
				colvarGtTheDen.DefaultSetting = @"";
				colvarGtTheDen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGtTheDen);
				
				TableSchema.TableColumn colvarMienCungCt = new TableSchema.TableColumn(schema);
				colvarMienCungCt.ColumnName = "MIEN_CUNG_CT";
				colvarMienCungCt.DataType = DbType.String;
				colvarMienCungCt.MaxLength = 8;
				colvarMienCungCt.AutoIncrement = false;
				colvarMienCungCt.IsNullable = true;
				colvarMienCungCt.IsPrimaryKey = false;
				colvarMienCungCt.IsForeignKey = false;
				colvarMienCungCt.IsReadOnly = false;
				colvarMienCungCt.DefaultSetting = @"";
				colvarMienCungCt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMienCungCt);
				
				TableSchema.TableColumn colvarTenBenh = new TableSchema.TableColumn(schema);
				colvarTenBenh.ColumnName = "TEN_BENH";
				colvarTenBenh.DataType = DbType.String;
				colvarTenBenh.MaxLength = 255;
				colvarTenBenh.AutoIncrement = false;
				colvarTenBenh.IsNullable = true;
				colvarTenBenh.IsPrimaryKey = false;
				colvarTenBenh.IsForeignKey = false;
				colvarTenBenh.IsReadOnly = false;
				colvarTenBenh.DefaultSetting = @"";
				colvarTenBenh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenBenh);
				
				TableSchema.TableColumn colvarMaBenh = new TableSchema.TableColumn(schema);
				colvarMaBenh.ColumnName = "MA_BENH";
				colvarMaBenh.DataType = DbType.String;
				colvarMaBenh.MaxLength = 15;
				colvarMaBenh.AutoIncrement = false;
				colvarMaBenh.IsNullable = true;
				colvarMaBenh.IsPrimaryKey = false;
				colvarMaBenh.IsForeignKey = false;
				colvarMaBenh.IsReadOnly = false;
				colvarMaBenh.DefaultSetting = @"";
				colvarMaBenh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaBenh);
				
				TableSchema.TableColumn colvarMaBenhkhac = new TableSchema.TableColumn(schema);
				colvarMaBenhkhac.ColumnName = "MA_BENHKHAC";
				colvarMaBenhkhac.DataType = DbType.String;
				colvarMaBenhkhac.MaxLength = 255;
				colvarMaBenhkhac.AutoIncrement = false;
				colvarMaBenhkhac.IsNullable = true;
				colvarMaBenhkhac.IsPrimaryKey = false;
				colvarMaBenhkhac.IsForeignKey = false;
				colvarMaBenhkhac.IsReadOnly = false;
				colvarMaBenhkhac.DefaultSetting = @"";
				colvarMaBenhkhac.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaBenhkhac);
				
				TableSchema.TableColumn colvarMaLydoVvien = new TableSchema.TableColumn(schema);
				colvarMaLydoVvien.ColumnName = "MA_LYDO_VVIEN";
				colvarMaLydoVvien.DataType = DbType.Int32;
				colvarMaLydoVvien.MaxLength = 0;
				colvarMaLydoVvien.AutoIncrement = false;
				colvarMaLydoVvien.IsNullable = true;
				colvarMaLydoVvien.IsPrimaryKey = false;
				colvarMaLydoVvien.IsForeignKey = false;
				colvarMaLydoVvien.IsReadOnly = false;
				colvarMaLydoVvien.DefaultSetting = @"";
				colvarMaLydoVvien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLydoVvien);
				
				TableSchema.TableColumn colvarMaNoiChuyen = new TableSchema.TableColumn(schema);
				colvarMaNoiChuyen.ColumnName = "MA_NOI_CHUYEN";
				colvarMaNoiChuyen.DataType = DbType.AnsiString;
				colvarMaNoiChuyen.MaxLength = 5;
				colvarMaNoiChuyen.AutoIncrement = false;
				colvarMaNoiChuyen.IsNullable = true;
				colvarMaNoiChuyen.IsPrimaryKey = false;
				colvarMaNoiChuyen.IsForeignKey = false;
				colvarMaNoiChuyen.IsReadOnly = false;
				colvarMaNoiChuyen.DefaultSetting = @"";
				colvarMaNoiChuyen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaNoiChuyen);
				
				TableSchema.TableColumn colvarMaTaiNan = new TableSchema.TableColumn(schema);
				colvarMaTaiNan.ColumnName = "MA_TAI_NAN";
				colvarMaTaiNan.DataType = DbType.Int32;
				colvarMaTaiNan.MaxLength = 0;
				colvarMaTaiNan.AutoIncrement = false;
				colvarMaTaiNan.IsNullable = true;
				colvarMaTaiNan.IsPrimaryKey = false;
				colvarMaTaiNan.IsForeignKey = false;
				colvarMaTaiNan.IsReadOnly = false;
				colvarMaTaiNan.DefaultSetting = @"";
				colvarMaTaiNan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaTaiNan);
				
				TableSchema.TableColumn colvarNgayVao = new TableSchema.TableColumn(schema);
				colvarNgayVao.ColumnName = "NGAY_VAO";
				colvarNgayVao.DataType = DbType.String;
				colvarNgayVao.MaxLength = 12;
				colvarNgayVao.AutoIncrement = false;
				colvarNgayVao.IsNullable = true;
				colvarNgayVao.IsPrimaryKey = false;
				colvarNgayVao.IsForeignKey = false;
				colvarNgayVao.IsReadOnly = false;
				colvarNgayVao.DefaultSetting = @"";
				colvarNgayVao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayVao);
				
				TableSchema.TableColumn colvarNgayRa = new TableSchema.TableColumn(schema);
				colvarNgayRa.ColumnName = "NGAY_RA";
				colvarNgayRa.DataType = DbType.String;
				colvarNgayRa.MaxLength = 12;
				colvarNgayRa.AutoIncrement = false;
				colvarNgayRa.IsNullable = true;
				colvarNgayRa.IsPrimaryKey = false;
				colvarNgayRa.IsForeignKey = false;
				colvarNgayRa.IsReadOnly = false;
				colvarNgayRa.DefaultSetting = @"";
				colvarNgayRa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayRa);
				
				TableSchema.TableColumn colvarSoNgayDtri = new TableSchema.TableColumn(schema);
				colvarSoNgayDtri.ColumnName = "SO_NGAY_DTRI";
				colvarSoNgayDtri.DataType = DbType.String;
				colvarSoNgayDtri.MaxLength = 12;
				colvarSoNgayDtri.AutoIncrement = false;
				colvarSoNgayDtri.IsNullable = true;
				colvarSoNgayDtri.IsPrimaryKey = false;
				colvarSoNgayDtri.IsForeignKey = false;
				colvarSoNgayDtri.IsReadOnly = false;
				colvarSoNgayDtri.DefaultSetting = @"";
				colvarSoNgayDtri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoNgayDtri);
				
				TableSchema.TableColumn colvarKetQuaDtri = new TableSchema.TableColumn(schema);
				colvarKetQuaDtri.ColumnName = "KET_QUA_DTRI";
				colvarKetQuaDtri.DataType = DbType.Int32;
				colvarKetQuaDtri.MaxLength = 0;
				colvarKetQuaDtri.AutoIncrement = false;
				colvarKetQuaDtri.IsNullable = true;
				colvarKetQuaDtri.IsPrimaryKey = false;
				colvarKetQuaDtri.IsForeignKey = false;
				colvarKetQuaDtri.IsReadOnly = false;
				colvarKetQuaDtri.DefaultSetting = @"";
				colvarKetQuaDtri.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKetQuaDtri);
				
				TableSchema.TableColumn colvarTinhTrangRv = new TableSchema.TableColumn(schema);
				colvarTinhTrangRv.ColumnName = "TINH_TRANG_RV";
				colvarTinhTrangRv.DataType = DbType.Int32;
				colvarTinhTrangRv.MaxLength = 0;
				colvarTinhTrangRv.AutoIncrement = false;
				colvarTinhTrangRv.IsNullable = true;
				colvarTinhTrangRv.IsPrimaryKey = false;
				colvarTinhTrangRv.IsForeignKey = false;
				colvarTinhTrangRv.IsReadOnly = false;
				colvarTinhTrangRv.DefaultSetting = @"";
				colvarTinhTrangRv.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTinhTrangRv);
				
				TableSchema.TableColumn colvarNgayTtoan = new TableSchema.TableColumn(schema);
				colvarNgayTtoan.ColumnName = "NGAY_TTOAN";
				colvarNgayTtoan.DataType = DbType.String;
				colvarNgayTtoan.MaxLength = 12;
				colvarNgayTtoan.AutoIncrement = false;
				colvarNgayTtoan.IsNullable = true;
				colvarNgayTtoan.IsPrimaryKey = false;
				colvarNgayTtoan.IsForeignKey = false;
				colvarNgayTtoan.IsReadOnly = false;
				colvarNgayTtoan.DefaultSetting = @"";
				colvarNgayTtoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTtoan);
				
				TableSchema.TableColumn colvarMucHuong = new TableSchema.TableColumn(schema);
				colvarMucHuong.ColumnName = "MUC_HUONG";
				colvarMucHuong.DataType = DbType.Int32;
				colvarMucHuong.MaxLength = 0;
				colvarMucHuong.AutoIncrement = false;
				colvarMucHuong.IsNullable = true;
				colvarMucHuong.IsPrimaryKey = false;
				colvarMucHuong.IsForeignKey = false;
				colvarMucHuong.IsReadOnly = false;
				colvarMucHuong.DefaultSetting = @"";
				colvarMucHuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMucHuong);
				
				TableSchema.TableColumn colvarTThuoc = new TableSchema.TableColumn(schema);
				colvarTThuoc.ColumnName = "T_THUOC";
				colvarTThuoc.DataType = DbType.Decimal;
				colvarTThuoc.MaxLength = 0;
				colvarTThuoc.AutoIncrement = false;
				colvarTThuoc.IsNullable = true;
				colvarTThuoc.IsPrimaryKey = false;
				colvarTThuoc.IsForeignKey = false;
				colvarTThuoc.IsReadOnly = false;
				colvarTThuoc.DefaultSetting = @"";
				colvarTThuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTThuoc);
				
				TableSchema.TableColumn colvarTVtyt = new TableSchema.TableColumn(schema);
				colvarTVtyt.ColumnName = "T_VTYT";
				colvarTVtyt.DataType = DbType.Decimal;
				colvarTVtyt.MaxLength = 0;
				colvarTVtyt.AutoIncrement = false;
				colvarTVtyt.IsNullable = true;
				colvarTVtyt.IsPrimaryKey = false;
				colvarTVtyt.IsForeignKey = false;
				colvarTVtyt.IsReadOnly = false;
				colvarTVtyt.DefaultSetting = @"";
				colvarTVtyt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTVtyt);
				
				TableSchema.TableColumn colvarTTongchi = new TableSchema.TableColumn(schema);
				colvarTTongchi.ColumnName = "T_TONGCHI";
				colvarTTongchi.DataType = DbType.Decimal;
				colvarTTongchi.MaxLength = 0;
				colvarTTongchi.AutoIncrement = false;
				colvarTTongchi.IsNullable = true;
				colvarTTongchi.IsPrimaryKey = false;
				colvarTTongchi.IsForeignKey = false;
				colvarTTongchi.IsReadOnly = false;
				colvarTTongchi.DefaultSetting = @"";
				colvarTTongchi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTTongchi);
				
				TableSchema.TableColumn colvarTBntt = new TableSchema.TableColumn(schema);
				colvarTBntt.ColumnName = "T_BNTT";
				colvarTBntt.DataType = DbType.Decimal;
				colvarTBntt.MaxLength = 0;
				colvarTBntt.AutoIncrement = false;
				colvarTBntt.IsNullable = true;
				colvarTBntt.IsPrimaryKey = false;
				colvarTBntt.IsForeignKey = false;
				colvarTBntt.IsReadOnly = false;
				colvarTBntt.DefaultSetting = @"";
				colvarTBntt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTBntt);
				
				TableSchema.TableColumn colvarTBncct = new TableSchema.TableColumn(schema);
				colvarTBncct.ColumnName = "T_BNCCT";
				colvarTBncct.DataType = DbType.Decimal;
				colvarTBncct.MaxLength = 0;
				colvarTBncct.AutoIncrement = false;
				colvarTBncct.IsNullable = true;
				colvarTBncct.IsPrimaryKey = false;
				colvarTBncct.IsForeignKey = false;
				colvarTBncct.IsReadOnly = false;
				colvarTBncct.DefaultSetting = @"";
				colvarTBncct.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTBncct);
				
				TableSchema.TableColumn colvarTBhtt = new TableSchema.TableColumn(schema);
				colvarTBhtt.ColumnName = "T_BHTT";
				colvarTBhtt.DataType = DbType.Decimal;
				colvarTBhtt.MaxLength = 0;
				colvarTBhtt.AutoIncrement = false;
				colvarTBhtt.IsNullable = true;
				colvarTBhtt.IsPrimaryKey = false;
				colvarTBhtt.IsForeignKey = false;
				colvarTBhtt.IsReadOnly = false;
				colvarTBhtt.DefaultSetting = @"";
				colvarTBhtt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTBhtt);
				
				TableSchema.TableColumn colvarTNguonkhac = new TableSchema.TableColumn(schema);
				colvarTNguonkhac.ColumnName = "T_NGUONKHAC";
				colvarTNguonkhac.DataType = DbType.Decimal;
				colvarTNguonkhac.MaxLength = 0;
				colvarTNguonkhac.AutoIncrement = false;
				colvarTNguonkhac.IsNullable = true;
				colvarTNguonkhac.IsPrimaryKey = false;
				colvarTNguonkhac.IsForeignKey = false;
				colvarTNguonkhac.IsReadOnly = false;
				colvarTNguonkhac.DefaultSetting = @"";
				colvarTNguonkhac.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTNguonkhac);
				
				TableSchema.TableColumn colvarTNgoaids = new TableSchema.TableColumn(schema);
				colvarTNgoaids.ColumnName = "T_NGOAIDS";
				colvarTNgoaids.DataType = DbType.Decimal;
				colvarTNgoaids.MaxLength = 0;
				colvarTNgoaids.AutoIncrement = false;
				colvarTNgoaids.IsNullable = true;
				colvarTNgoaids.IsPrimaryKey = false;
				colvarTNgoaids.IsForeignKey = false;
				colvarTNgoaids.IsReadOnly = false;
				colvarTNgoaids.DefaultSetting = @"";
				colvarTNgoaids.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTNgoaids);
				
				TableSchema.TableColumn colvarNamQt = new TableSchema.TableColumn(schema);
				colvarNamQt.ColumnName = "NAM_QT";
				colvarNamQt.DataType = DbType.Int32;
				colvarNamQt.MaxLength = 0;
				colvarNamQt.AutoIncrement = false;
				colvarNamQt.IsNullable = true;
				colvarNamQt.IsPrimaryKey = false;
				colvarNamQt.IsForeignKey = false;
				colvarNamQt.IsReadOnly = false;
				colvarNamQt.DefaultSetting = @"";
				colvarNamQt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNamQt);
				
				TableSchema.TableColumn colvarThangQt = new TableSchema.TableColumn(schema);
				colvarThangQt.ColumnName = "THANG_QT";
				colvarThangQt.DataType = DbType.Int32;
				colvarThangQt.MaxLength = 0;
				colvarThangQt.AutoIncrement = false;
				colvarThangQt.IsNullable = true;
				colvarThangQt.IsPrimaryKey = false;
				colvarThangQt.IsForeignKey = false;
				colvarThangQt.IsReadOnly = false;
				colvarThangQt.DefaultSetting = @"";
				colvarThangQt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThangQt);
				
				TableSchema.TableColumn colvarMaLoaiKcb = new TableSchema.TableColumn(schema);
				colvarMaLoaiKcb.ColumnName = "MA_LOAI_KCB";
				colvarMaLoaiKcb.DataType = DbType.Int32;
				colvarMaLoaiKcb.MaxLength = 0;
				colvarMaLoaiKcb.AutoIncrement = false;
				colvarMaLoaiKcb.IsNullable = true;
				colvarMaLoaiKcb.IsPrimaryKey = false;
				colvarMaLoaiKcb.IsForeignKey = false;
				colvarMaLoaiKcb.IsReadOnly = false;
				colvarMaLoaiKcb.DefaultSetting = @"";
				colvarMaLoaiKcb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLoaiKcb);
				
				TableSchema.TableColumn colvarMaKhoa = new TableSchema.TableColumn(schema);
				colvarMaKhoa.ColumnName = "MA_KHOA";
				colvarMaKhoa.DataType = DbType.String;
				colvarMaKhoa.MaxLength = 15;
				colvarMaKhoa.AutoIncrement = false;
				colvarMaKhoa.IsNullable = true;
				colvarMaKhoa.IsPrimaryKey = false;
				colvarMaKhoa.IsForeignKey = false;
				colvarMaKhoa.IsReadOnly = false;
				colvarMaKhoa.DefaultSetting = @"";
				colvarMaKhoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKhoa);
				
				TableSchema.TableColumn colvarMaCskcb = new TableSchema.TableColumn(schema);
				colvarMaCskcb.ColumnName = "MA_CSKCB";
				colvarMaCskcb.DataType = DbType.String;
				colvarMaCskcb.MaxLength = 5;
				colvarMaCskcb.AutoIncrement = false;
				colvarMaCskcb.IsNullable = true;
				colvarMaCskcb.IsPrimaryKey = false;
				colvarMaCskcb.IsForeignKey = false;
				colvarMaCskcb.IsReadOnly = false;
				colvarMaCskcb.DefaultSetting = @"";
				colvarMaCskcb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaCskcb);
				
				TableSchema.TableColumn colvarMaKhuvuc = new TableSchema.TableColumn(schema);
				colvarMaKhuvuc.ColumnName = "MA_KHUVUC";
				colvarMaKhuvuc.DataType = DbType.String;
				colvarMaKhuvuc.MaxLength = 2;
				colvarMaKhuvuc.AutoIncrement = false;
				colvarMaKhuvuc.IsNullable = true;
				colvarMaKhuvuc.IsPrimaryKey = false;
				colvarMaKhuvuc.IsForeignKey = false;
				colvarMaKhuvuc.IsReadOnly = false;
				colvarMaKhuvuc.DefaultSetting = @"";
				colvarMaKhuvuc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKhuvuc);
				
				TableSchema.TableColumn colvarMaPtttQt = new TableSchema.TableColumn(schema);
				colvarMaPtttQt.ColumnName = "MA_PTTT_QT";
				colvarMaPtttQt.DataType = DbType.String;
				colvarMaPtttQt.MaxLength = 255;
				colvarMaPtttQt.AutoIncrement = false;
				colvarMaPtttQt.IsNullable = true;
				colvarMaPtttQt.IsPrimaryKey = false;
				colvarMaPtttQt.IsForeignKey = false;
				colvarMaPtttQt.IsReadOnly = false;
				colvarMaPtttQt.DefaultSetting = @"";
				colvarMaPtttQt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaPtttQt);
				
				TableSchema.TableColumn colvarCanNang = new TableSchema.TableColumn(schema);
				colvarCanNang.ColumnName = "CAN_NANG";
				colvarCanNang.DataType = DbType.Decimal;
				colvarCanNang.MaxLength = 0;
				colvarCanNang.AutoIncrement = false;
				colvarCanNang.IsNullable = true;
				colvarCanNang.IsPrimaryKey = false;
				colvarCanNang.IsForeignKey = false;
				colvarCanNang.IsReadOnly = false;
				colvarCanNang.DefaultSetting = @"";
				colvarCanNang.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCanNang);
				
				TableSchema.TableColumn colvarTimeprocess = new TableSchema.TableColumn(schema);
				colvarTimeprocess.ColumnName = "timeprocess";
				colvarTimeprocess.DataType = DbType.DateTime;
				colvarTimeprocess.MaxLength = 0;
				colvarTimeprocess.AutoIncrement = false;
				colvarTimeprocess.IsNullable = true;
				colvarTimeprocess.IsPrimaryKey = false;
				colvarTimeprocess.IsForeignKey = false;
				colvarTimeprocess.IsReadOnly = false;
				
						colvarTimeprocess.DefaultSetting = @"(getdate())";
				colvarTimeprocess.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTimeprocess);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("XML_1_917",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("MaLk")]
		[Bindable(true)]
		public string MaLk 
		{
			get { return GetColumnValue<string>(Columns.MaLk); }
			set { SetColumnValue(Columns.MaLk, value); }
		}
		  
		[XmlAttribute("Stt")]
		[Bindable(true)]
		public int? Stt 
		{
			get { return GetColumnValue<int?>(Columns.Stt); }
			set { SetColumnValue(Columns.Stt, value); }
		}
		  
		[XmlAttribute("MaBn")]
		[Bindable(true)]
		public string MaBn 
		{
			get { return GetColumnValue<string>(Columns.MaBn); }
			set { SetColumnValue(Columns.MaBn, value); }
		}
		  
		[XmlAttribute("HoTen")]
		[Bindable(true)]
		public string HoTen 
		{
			get { return GetColumnValue<string>(Columns.HoTen); }
			set { SetColumnValue(Columns.HoTen, value); }
		}
		  
		[XmlAttribute("NgaySinh")]
		[Bindable(true)]
		public string NgaySinh 
		{
			get { return GetColumnValue<string>(Columns.NgaySinh); }
			set { SetColumnValue(Columns.NgaySinh, value); }
		}
		  
		[XmlAttribute("GioiTinh")]
		[Bindable(true)]
		public byte? GioiTinh 
		{
			get { return GetColumnValue<byte?>(Columns.GioiTinh); }
			set { SetColumnValue(Columns.GioiTinh, value); }
		}
		  
		[XmlAttribute("DiaChi")]
		[Bindable(true)]
		public string DiaChi 
		{
			get { return GetColumnValue<string>(Columns.DiaChi); }
			set { SetColumnValue(Columns.DiaChi, value); }
		}
		  
		[XmlAttribute("MaThe")]
		[Bindable(true)]
		public string MaThe 
		{
			get { return GetColumnValue<string>(Columns.MaThe); }
			set { SetColumnValue(Columns.MaThe, value); }
		}
		  
		[XmlAttribute("MaDkbd")]
		[Bindable(true)]
		public string MaDkbd 
		{
			get { return GetColumnValue<string>(Columns.MaDkbd); }
			set { SetColumnValue(Columns.MaDkbd, value); }
		}
		  
		[XmlAttribute("GtTheTu")]
		[Bindable(true)]
		public string GtTheTu 
		{
			get { return GetColumnValue<string>(Columns.GtTheTu); }
			set { SetColumnValue(Columns.GtTheTu, value); }
		}
		  
		[XmlAttribute("GtTheDen")]
		[Bindable(true)]
		public string GtTheDen 
		{
			get { return GetColumnValue<string>(Columns.GtTheDen); }
			set { SetColumnValue(Columns.GtTheDen, value); }
		}
		  
		[XmlAttribute("MienCungCt")]
		[Bindable(true)]
		public string MienCungCt 
		{
			get { return GetColumnValue<string>(Columns.MienCungCt); }
			set { SetColumnValue(Columns.MienCungCt, value); }
		}
		  
		[XmlAttribute("TenBenh")]
		[Bindable(true)]
		public string TenBenh 
		{
			get { return GetColumnValue<string>(Columns.TenBenh); }
			set { SetColumnValue(Columns.TenBenh, value); }
		}
		  
		[XmlAttribute("MaBenh")]
		[Bindable(true)]
		public string MaBenh 
		{
			get { return GetColumnValue<string>(Columns.MaBenh); }
			set { SetColumnValue(Columns.MaBenh, value); }
		}
		  
		[XmlAttribute("MaBenhkhac")]
		[Bindable(true)]
		public string MaBenhkhac 
		{
			get { return GetColumnValue<string>(Columns.MaBenhkhac); }
			set { SetColumnValue(Columns.MaBenhkhac, value); }
		}
		  
		[XmlAttribute("MaLydoVvien")]
		[Bindable(true)]
		public int? MaLydoVvien 
		{
			get { return GetColumnValue<int?>(Columns.MaLydoVvien); }
			set { SetColumnValue(Columns.MaLydoVvien, value); }
		}
		  
		[XmlAttribute("MaNoiChuyen")]
		[Bindable(true)]
		public string MaNoiChuyen 
		{
			get { return GetColumnValue<string>(Columns.MaNoiChuyen); }
			set { SetColumnValue(Columns.MaNoiChuyen, value); }
		}
		  
		[XmlAttribute("MaTaiNan")]
		[Bindable(true)]
		public int? MaTaiNan 
		{
			get { return GetColumnValue<int?>(Columns.MaTaiNan); }
			set { SetColumnValue(Columns.MaTaiNan, value); }
		}
		  
		[XmlAttribute("NgayVao")]
		[Bindable(true)]
		public string NgayVao 
		{
			get { return GetColumnValue<string>(Columns.NgayVao); }
			set { SetColumnValue(Columns.NgayVao, value); }
		}
		  
		[XmlAttribute("NgayRa")]
		[Bindable(true)]
		public string NgayRa 
		{
			get { return GetColumnValue<string>(Columns.NgayRa); }
			set { SetColumnValue(Columns.NgayRa, value); }
		}
		  
		[XmlAttribute("SoNgayDtri")]
		[Bindable(true)]
		public string SoNgayDtri 
		{
			get { return GetColumnValue<string>(Columns.SoNgayDtri); }
			set { SetColumnValue(Columns.SoNgayDtri, value); }
		}
		  
		[XmlAttribute("KetQuaDtri")]
		[Bindable(true)]
		public int? KetQuaDtri 
		{
			get { return GetColumnValue<int?>(Columns.KetQuaDtri); }
			set { SetColumnValue(Columns.KetQuaDtri, value); }
		}
		  
		[XmlAttribute("TinhTrangRv")]
		[Bindable(true)]
		public int? TinhTrangRv 
		{
			get { return GetColumnValue<int?>(Columns.TinhTrangRv); }
			set { SetColumnValue(Columns.TinhTrangRv, value); }
		}
		  
		[XmlAttribute("NgayTtoan")]
		[Bindable(true)]
		public string NgayTtoan 
		{
			get { return GetColumnValue<string>(Columns.NgayTtoan); }
			set { SetColumnValue(Columns.NgayTtoan, value); }
		}
		  
		[XmlAttribute("MucHuong")]
		[Bindable(true)]
		public int? MucHuong 
		{
			get { return GetColumnValue<int?>(Columns.MucHuong); }
			set { SetColumnValue(Columns.MucHuong, value); }
		}
		  
		[XmlAttribute("TThuoc")]
		[Bindable(true)]
		public decimal? TThuoc 
		{
			get { return GetColumnValue<decimal?>(Columns.TThuoc); }
			set { SetColumnValue(Columns.TThuoc, value); }
		}
		  
		[XmlAttribute("TVtyt")]
		[Bindable(true)]
		public decimal? TVtyt 
		{
			get { return GetColumnValue<decimal?>(Columns.TVtyt); }
			set { SetColumnValue(Columns.TVtyt, value); }
		}
		  
		[XmlAttribute("TTongchi")]
		[Bindable(true)]
		public decimal? TTongchi 
		{
			get { return GetColumnValue<decimal?>(Columns.TTongchi); }
			set { SetColumnValue(Columns.TTongchi, value); }
		}
		  
		[XmlAttribute("TBntt")]
		[Bindable(true)]
		public decimal? TBntt 
		{
			get { return GetColumnValue<decimal?>(Columns.TBntt); }
			set { SetColumnValue(Columns.TBntt, value); }
		}
		  
		[XmlAttribute("TBncct")]
		[Bindable(true)]
		public decimal? TBncct 
		{
			get { return GetColumnValue<decimal?>(Columns.TBncct); }
			set { SetColumnValue(Columns.TBncct, value); }
		}
		  
		[XmlAttribute("TBhtt")]
		[Bindable(true)]
		public decimal? TBhtt 
		{
			get { return GetColumnValue<decimal?>(Columns.TBhtt); }
			set { SetColumnValue(Columns.TBhtt, value); }
		}
		  
		[XmlAttribute("TNguonkhac")]
		[Bindable(true)]
		public decimal? TNguonkhac 
		{
			get { return GetColumnValue<decimal?>(Columns.TNguonkhac); }
			set { SetColumnValue(Columns.TNguonkhac, value); }
		}
		  
		[XmlAttribute("TNgoaids")]
		[Bindable(true)]
		public decimal? TNgoaids 
		{
			get { return GetColumnValue<decimal?>(Columns.TNgoaids); }
			set { SetColumnValue(Columns.TNgoaids, value); }
		}
		  
		[XmlAttribute("NamQt")]
		[Bindable(true)]
		public int? NamQt 
		{
			get { return GetColumnValue<int?>(Columns.NamQt); }
			set { SetColumnValue(Columns.NamQt, value); }
		}
		  
		[XmlAttribute("ThangQt")]
		[Bindable(true)]
		public int? ThangQt 
		{
			get { return GetColumnValue<int?>(Columns.ThangQt); }
			set { SetColumnValue(Columns.ThangQt, value); }
		}
		  
		[XmlAttribute("MaLoaiKcb")]
		[Bindable(true)]
		public int? MaLoaiKcb 
		{
			get { return GetColumnValue<int?>(Columns.MaLoaiKcb); }
			set { SetColumnValue(Columns.MaLoaiKcb, value); }
		}
		  
		[XmlAttribute("MaKhoa")]
		[Bindable(true)]
		public string MaKhoa 
		{
			get { return GetColumnValue<string>(Columns.MaKhoa); }
			set { SetColumnValue(Columns.MaKhoa, value); }
		}
		  
		[XmlAttribute("MaCskcb")]
		[Bindable(true)]
		public string MaCskcb 
		{
			get { return GetColumnValue<string>(Columns.MaCskcb); }
			set { SetColumnValue(Columns.MaCskcb, value); }
		}
		  
		[XmlAttribute("MaKhuvuc")]
		[Bindable(true)]
		public string MaKhuvuc 
		{
			get { return GetColumnValue<string>(Columns.MaKhuvuc); }
			set { SetColumnValue(Columns.MaKhuvuc, value); }
		}
		  
		[XmlAttribute("MaPtttQt")]
		[Bindable(true)]
		public string MaPtttQt 
		{
			get { return GetColumnValue<string>(Columns.MaPtttQt); }
			set { SetColumnValue(Columns.MaPtttQt, value); }
		}
		  
		[XmlAttribute("CanNang")]
		[Bindable(true)]
		public decimal? CanNang 
		{
			get { return GetColumnValue<decimal?>(Columns.CanNang); }
			set { SetColumnValue(Columns.CanNang, value); }
		}
		  
		[XmlAttribute("Timeprocess")]
		[Bindable(true)]
		public DateTime? Timeprocess 
		{
			get { return GetColumnValue<DateTime?>(Columns.Timeprocess); }
			set { SetColumnValue(Columns.Timeprocess, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaLk,int? varStt,string varMaBn,string varHoTen,string varNgaySinh,byte? varGioiTinh,string varDiaChi,string varMaThe,string varMaDkbd,string varGtTheTu,string varGtTheDen,string varMienCungCt,string varTenBenh,string varMaBenh,string varMaBenhkhac,int? varMaLydoVvien,string varMaNoiChuyen,int? varMaTaiNan,string varNgayVao,string varNgayRa,string varSoNgayDtri,int? varKetQuaDtri,int? varTinhTrangRv,string varNgayTtoan,int? varMucHuong,decimal? varTThuoc,decimal? varTVtyt,decimal? varTTongchi,decimal? varTBntt,decimal? varTBncct,decimal? varTBhtt,decimal? varTNguonkhac,decimal? varTNgoaids,int? varNamQt,int? varThangQt,int? varMaLoaiKcb,string varMaKhoa,string varMaCskcb,string varMaKhuvuc,string varMaPtttQt,decimal? varCanNang,DateTime? varTimeprocess)
		{
			Xml1917 item = new Xml1917();
			
			item.MaLk = varMaLk;
			
			item.Stt = varStt;
			
			item.MaBn = varMaBn;
			
			item.HoTen = varHoTen;
			
			item.NgaySinh = varNgaySinh;
			
			item.GioiTinh = varGioiTinh;
			
			item.DiaChi = varDiaChi;
			
			item.MaThe = varMaThe;
			
			item.MaDkbd = varMaDkbd;
			
			item.GtTheTu = varGtTheTu;
			
			item.GtTheDen = varGtTheDen;
			
			item.MienCungCt = varMienCungCt;
			
			item.TenBenh = varTenBenh;
			
			item.MaBenh = varMaBenh;
			
			item.MaBenhkhac = varMaBenhkhac;
			
			item.MaLydoVvien = varMaLydoVvien;
			
			item.MaNoiChuyen = varMaNoiChuyen;
			
			item.MaTaiNan = varMaTaiNan;
			
			item.NgayVao = varNgayVao;
			
			item.NgayRa = varNgayRa;
			
			item.SoNgayDtri = varSoNgayDtri;
			
			item.KetQuaDtri = varKetQuaDtri;
			
			item.TinhTrangRv = varTinhTrangRv;
			
			item.NgayTtoan = varNgayTtoan;
			
			item.MucHuong = varMucHuong;
			
			item.TThuoc = varTThuoc;
			
			item.TVtyt = varTVtyt;
			
			item.TTongchi = varTTongchi;
			
			item.TBntt = varTBntt;
			
			item.TBncct = varTBncct;
			
			item.TBhtt = varTBhtt;
			
			item.TNguonkhac = varTNguonkhac;
			
			item.TNgoaids = varTNgoaids;
			
			item.NamQt = varNamQt;
			
			item.ThangQt = varThangQt;
			
			item.MaLoaiKcb = varMaLoaiKcb;
			
			item.MaKhoa = varMaKhoa;
			
			item.MaCskcb = varMaCskcb;
			
			item.MaKhuvuc = varMaKhuvuc;
			
			item.MaPtttQt = varMaPtttQt;
			
			item.CanNang = varCanNang;
			
			item.Timeprocess = varTimeprocess;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(string varMaLk,int? varStt,string varMaBn,string varHoTen,string varNgaySinh,byte? varGioiTinh,string varDiaChi,string varMaThe,string varMaDkbd,string varGtTheTu,string varGtTheDen,string varMienCungCt,string varTenBenh,string varMaBenh,string varMaBenhkhac,int? varMaLydoVvien,string varMaNoiChuyen,int? varMaTaiNan,string varNgayVao,string varNgayRa,string varSoNgayDtri,int? varKetQuaDtri,int? varTinhTrangRv,string varNgayTtoan,int? varMucHuong,decimal? varTThuoc,decimal? varTVtyt,decimal? varTTongchi,decimal? varTBntt,decimal? varTBncct,decimal? varTBhtt,decimal? varTNguonkhac,decimal? varTNgoaids,int? varNamQt,int? varThangQt,int? varMaLoaiKcb,string varMaKhoa,string varMaCskcb,string varMaKhuvuc,string varMaPtttQt,decimal? varCanNang,DateTime? varTimeprocess)
		{
			Xml1917 item = new Xml1917();
			
				item.MaLk = varMaLk;
			
				item.Stt = varStt;
			
				item.MaBn = varMaBn;
			
				item.HoTen = varHoTen;
			
				item.NgaySinh = varNgaySinh;
			
				item.GioiTinh = varGioiTinh;
			
				item.DiaChi = varDiaChi;
			
				item.MaThe = varMaThe;
			
				item.MaDkbd = varMaDkbd;
			
				item.GtTheTu = varGtTheTu;
			
				item.GtTheDen = varGtTheDen;
			
				item.MienCungCt = varMienCungCt;
			
				item.TenBenh = varTenBenh;
			
				item.MaBenh = varMaBenh;
			
				item.MaBenhkhac = varMaBenhkhac;
			
				item.MaLydoVvien = varMaLydoVvien;
			
				item.MaNoiChuyen = varMaNoiChuyen;
			
				item.MaTaiNan = varMaTaiNan;
			
				item.NgayVao = varNgayVao;
			
				item.NgayRa = varNgayRa;
			
				item.SoNgayDtri = varSoNgayDtri;
			
				item.KetQuaDtri = varKetQuaDtri;
			
				item.TinhTrangRv = varTinhTrangRv;
			
				item.NgayTtoan = varNgayTtoan;
			
				item.MucHuong = varMucHuong;
			
				item.TThuoc = varTThuoc;
			
				item.TVtyt = varTVtyt;
			
				item.TTongchi = varTTongchi;
			
				item.TBntt = varTBntt;
			
				item.TBncct = varTBncct;
			
				item.TBhtt = varTBhtt;
			
				item.TNguonkhac = varTNguonkhac;
			
				item.TNgoaids = varTNgoaids;
			
				item.NamQt = varNamQt;
			
				item.ThangQt = varThangQt;
			
				item.MaLoaiKcb = varMaLoaiKcb;
			
				item.MaKhoa = varMaKhoa;
			
				item.MaCskcb = varMaCskcb;
			
				item.MaKhuvuc = varMaKhuvuc;
			
				item.MaPtttQt = varMaPtttQt;
			
				item.CanNang = varCanNang;
			
				item.Timeprocess = varTimeprocess;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn MaLkColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn SttColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn MaBnColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn HoTenColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySinhColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn GioiTinhColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn DiaChiColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn MaTheColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDkbdColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn GtTheTuColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn GtTheDenColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn MienCungCtColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn TenBenhColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn MaBenhColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn MaBenhkhacColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLydoVvienColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn MaNoiChuyenColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn MaTaiNanColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayVaoColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayRaColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn SoNgayDtriColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn KetQuaDtriColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn TinhTrangRvColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTtoanColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn MucHuongColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn TThuocColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn TVtytColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn TTongchiColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn TBnttColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn TBncctColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn TBhttColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn TNguonkhacColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn TNgoaidsColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn NamQtColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn ThangQtColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLoaiKcbColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKhoaColumn
        {
            get { return Schema.Columns[36]; }
        }
        
        
        
        public static TableSchema.TableColumn MaCskcbColumn
        {
            get { return Schema.Columns[37]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKhuvucColumn
        {
            get { return Schema.Columns[38]; }
        }
        
        
        
        public static TableSchema.TableColumn MaPtttQtColumn
        {
            get { return Schema.Columns[39]; }
        }
        
        
        
        public static TableSchema.TableColumn CanNangColumn
        {
            get { return Schema.Columns[40]; }
        }
        
        
        
        public static TableSchema.TableColumn TimeprocessColumn
        {
            get { return Schema.Columns[41]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string MaLk = @"MA_LK";
			 public static string Stt = @"STT";
			 public static string MaBn = @"MA_BN";
			 public static string HoTen = @"HO_TEN";
			 public static string NgaySinh = @"NGAY_SINH";
			 public static string GioiTinh = @"GIOI_TINH";
			 public static string DiaChi = @"DIA_CHI";
			 public static string MaThe = @"MA_THE";
			 public static string MaDkbd = @"MA_DKBD";
			 public static string GtTheTu = @"GT_THE_TU";
			 public static string GtTheDen = @"GT_THE_DEN";
			 public static string MienCungCt = @"MIEN_CUNG_CT";
			 public static string TenBenh = @"TEN_BENH";
			 public static string MaBenh = @"MA_BENH";
			 public static string MaBenhkhac = @"MA_BENHKHAC";
			 public static string MaLydoVvien = @"MA_LYDO_VVIEN";
			 public static string MaNoiChuyen = @"MA_NOI_CHUYEN";
			 public static string MaTaiNan = @"MA_TAI_NAN";
			 public static string NgayVao = @"NGAY_VAO";
			 public static string NgayRa = @"NGAY_RA";
			 public static string SoNgayDtri = @"SO_NGAY_DTRI";
			 public static string KetQuaDtri = @"KET_QUA_DTRI";
			 public static string TinhTrangRv = @"TINH_TRANG_RV";
			 public static string NgayTtoan = @"NGAY_TTOAN";
			 public static string MucHuong = @"MUC_HUONG";
			 public static string TThuoc = @"T_THUOC";
			 public static string TVtyt = @"T_VTYT";
			 public static string TTongchi = @"T_TONGCHI";
			 public static string TBntt = @"T_BNTT";
			 public static string TBncct = @"T_BNCCT";
			 public static string TBhtt = @"T_BHTT";
			 public static string TNguonkhac = @"T_NGUONKHAC";
			 public static string TNgoaids = @"T_NGOAIDS";
			 public static string NamQt = @"NAM_QT";
			 public static string ThangQt = @"THANG_QT";
			 public static string MaLoaiKcb = @"MA_LOAI_KCB";
			 public static string MaKhoa = @"MA_KHOA";
			 public static string MaCskcb = @"MA_CSKCB";
			 public static string MaKhuvuc = @"MA_KHUVUC";
			 public static string MaPtttQt = @"MA_PTTT_QT";
			 public static string CanNang = @"CAN_NANG";
			 public static string Timeprocess = @"timeprocess";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
