using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the Xml2917 class.
	/// </summary>
    [Serializable]
	public partial class Xml2917Collection : ActiveList<Xml2917, Xml2917Collection>
	{	   
		public Xml2917Collection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>Xml2917Collection</returns>
		public Xml2917Collection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                Xml2917 o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the XML_2_917 table.
	/// </summary>
	[Serializable]
	public partial class Xml2917 : ActiveRecord<Xml2917>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public Xml2917()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public Xml2917(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public Xml2917(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public Xml2917(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("XML_2_917", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdXML2 = new TableSchema.TableColumn(schema);
				colvarIdXML2.ColumnName = "ID_XML2";
				colvarIdXML2.DataType = DbType.Int64;
				colvarIdXML2.MaxLength = 0;
				colvarIdXML2.AutoIncrement = true;
				colvarIdXML2.IsNullable = false;
				colvarIdXML2.IsPrimaryKey = true;
				colvarIdXML2.IsForeignKey = false;
				colvarIdXML2.IsReadOnly = false;
				colvarIdXML2.DefaultSetting = @"";
				colvarIdXML2.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdXML2);
				
				TableSchema.TableColumn colvarMaLk = new TableSchema.TableColumn(schema);
				colvarMaLk.ColumnName = "MA_LK";
				colvarMaLk.DataType = DbType.String;
				colvarMaLk.MaxLength = 20;
				colvarMaLk.AutoIncrement = false;
				colvarMaLk.IsNullable = false;
				colvarMaLk.IsPrimaryKey = false;
				colvarMaLk.IsForeignKey = false;
				colvarMaLk.IsReadOnly = false;
				colvarMaLk.DefaultSetting = @"";
				colvarMaLk.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLk);
				
				TableSchema.TableColumn colvarStt = new TableSchema.TableColumn(schema);
				colvarStt.ColumnName = "STT";
				colvarStt.DataType = DbType.Int32;
				colvarStt.MaxLength = 0;
				colvarStt.AutoIncrement = false;
				colvarStt.IsNullable = true;
				colvarStt.IsPrimaryKey = false;
				colvarStt.IsForeignKey = false;
				colvarStt.IsReadOnly = false;
				colvarStt.DefaultSetting = @"";
				colvarStt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarStt);
				
				TableSchema.TableColumn colvarMaThuoc = new TableSchema.TableColumn(schema);
				colvarMaThuoc.ColumnName = "MA_THUOC";
				colvarMaThuoc.DataType = DbType.String;
				colvarMaThuoc.MaxLength = 50;
				colvarMaThuoc.AutoIncrement = false;
				colvarMaThuoc.IsNullable = false;
				colvarMaThuoc.IsPrimaryKey = false;
				colvarMaThuoc.IsForeignKey = false;
				colvarMaThuoc.IsReadOnly = false;
				colvarMaThuoc.DefaultSetting = @"";
				colvarMaThuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaThuoc);
				
				TableSchema.TableColumn colvarMaNhom = new TableSchema.TableColumn(schema);
				colvarMaNhom.ColumnName = "MA_NHOM";
				colvarMaNhom.DataType = DbType.String;
				colvarMaNhom.MaxLength = 20;
				colvarMaNhom.AutoIncrement = false;
				colvarMaNhom.IsNullable = true;
				colvarMaNhom.IsPrimaryKey = false;
				colvarMaNhom.IsForeignKey = false;
				colvarMaNhom.IsReadOnly = false;
				colvarMaNhom.DefaultSetting = @"";
				colvarMaNhom.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaNhom);
				
				TableSchema.TableColumn colvarTenThuoc = new TableSchema.TableColumn(schema);
				colvarTenThuoc.ColumnName = "TEN_THUOC";
				colvarTenThuoc.DataType = DbType.String;
				colvarTenThuoc.MaxLength = 1024;
				colvarTenThuoc.AutoIncrement = false;
				colvarTenThuoc.IsNullable = false;
				colvarTenThuoc.IsPrimaryKey = false;
				colvarTenThuoc.IsForeignKey = false;
				colvarTenThuoc.IsReadOnly = false;
				colvarTenThuoc.DefaultSetting = @"";
				colvarTenThuoc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenThuoc);
				
				TableSchema.TableColumn colvarDonViTinh = new TableSchema.TableColumn(schema);
				colvarDonViTinh.ColumnName = "DON_VI_TINH";
				colvarDonViTinh.DataType = DbType.String;
				colvarDonViTinh.MaxLength = 50;
				colvarDonViTinh.AutoIncrement = false;
				colvarDonViTinh.IsNullable = true;
				colvarDonViTinh.IsPrimaryKey = false;
				colvarDonViTinh.IsForeignKey = false;
				colvarDonViTinh.IsReadOnly = false;
				colvarDonViTinh.DefaultSetting = @"";
				colvarDonViTinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDonViTinh);
				
				TableSchema.TableColumn colvarHamLuong = new TableSchema.TableColumn(schema);
				colvarHamLuong.ColumnName = "HAM_LUONG";
				colvarHamLuong.DataType = DbType.String;
				colvarHamLuong.MaxLength = 1024;
				colvarHamLuong.AutoIncrement = false;
				colvarHamLuong.IsNullable = true;
				colvarHamLuong.IsPrimaryKey = false;
				colvarHamLuong.IsForeignKey = false;
				colvarHamLuong.IsReadOnly = false;
				colvarHamLuong.DefaultSetting = @"";
				colvarHamLuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHamLuong);
				
				TableSchema.TableColumn colvarDuongDung = new TableSchema.TableColumn(schema);
				colvarDuongDung.ColumnName = "DUONG_DUNG";
				colvarDuongDung.DataType = DbType.String;
				colvarDuongDung.MaxLength = 4;
				colvarDuongDung.AutoIncrement = false;
				colvarDuongDung.IsNullable = true;
				colvarDuongDung.IsPrimaryKey = false;
				colvarDuongDung.IsForeignKey = false;
				colvarDuongDung.IsReadOnly = false;
				colvarDuongDung.DefaultSetting = @"";
				colvarDuongDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDuongDung);
				
				TableSchema.TableColumn colvarLieuDung = new TableSchema.TableColumn(schema);
				colvarLieuDung.ColumnName = "LIEU_DUNG";
				colvarLieuDung.DataType = DbType.String;
				colvarLieuDung.MaxLength = 255;
				colvarLieuDung.AutoIncrement = false;
				colvarLieuDung.IsNullable = true;
				colvarLieuDung.IsPrimaryKey = false;
				colvarLieuDung.IsForeignKey = false;
				colvarLieuDung.IsReadOnly = false;
				colvarLieuDung.DefaultSetting = @"";
				colvarLieuDung.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLieuDung);
				
				TableSchema.TableColumn colvarSoDangKy = new TableSchema.TableColumn(schema);
				colvarSoDangKy.ColumnName = "SO_DANG_KY";
				colvarSoDangKy.DataType = DbType.String;
				colvarSoDangKy.MaxLength = 255;
				colvarSoDangKy.AutoIncrement = false;
				colvarSoDangKy.IsNullable = true;
				colvarSoDangKy.IsPrimaryKey = false;
				colvarSoDangKy.IsForeignKey = false;
				colvarSoDangKy.IsReadOnly = false;
				colvarSoDangKy.DefaultSetting = @"";
				colvarSoDangKy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoDangKy);
				
				TableSchema.TableColumn colvarSoLuong = new TableSchema.TableColumn(schema);
				colvarSoLuong.ColumnName = "SO_LUONG";
				colvarSoLuong.DataType = DbType.Double;
				colvarSoLuong.MaxLength = 0;
				colvarSoLuong.AutoIncrement = false;
				colvarSoLuong.IsNullable = true;
				colvarSoLuong.IsPrimaryKey = false;
				colvarSoLuong.IsForeignKey = false;
				colvarSoLuong.IsReadOnly = false;
				colvarSoLuong.DefaultSetting = @"";
				colvarSoLuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoLuong);
				
				TableSchema.TableColumn colvarDonGia = new TableSchema.TableColumn(schema);
				colvarDonGia.ColumnName = "DON_GIA";
				colvarDonGia.DataType = DbType.Decimal;
				colvarDonGia.MaxLength = 0;
				colvarDonGia.AutoIncrement = false;
				colvarDonGia.IsNullable = true;
				colvarDonGia.IsPrimaryKey = false;
				colvarDonGia.IsForeignKey = false;
				colvarDonGia.IsReadOnly = false;
				colvarDonGia.DefaultSetting = @"";
				colvarDonGia.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDonGia);
				
				TableSchema.TableColumn colvarTyleTt = new TableSchema.TableColumn(schema);
				colvarTyleTt.ColumnName = "TYLE_TT";
				colvarTyleTt.DataType = DbType.Int32;
				colvarTyleTt.MaxLength = 0;
				colvarTyleTt.AutoIncrement = false;
				colvarTyleTt.IsNullable = true;
				colvarTyleTt.IsPrimaryKey = false;
				colvarTyleTt.IsForeignKey = false;
				colvarTyleTt.IsReadOnly = false;
				colvarTyleTt.DefaultSetting = @"";
				colvarTyleTt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTyleTt);
				
				TableSchema.TableColumn colvarThanhTien = new TableSchema.TableColumn(schema);
				colvarThanhTien.ColumnName = "THANH_TIEN";
				colvarThanhTien.DataType = DbType.Decimal;
				colvarThanhTien.MaxLength = 0;
				colvarThanhTien.AutoIncrement = false;
				colvarThanhTien.IsNullable = true;
				colvarThanhTien.IsPrimaryKey = false;
				colvarThanhTien.IsForeignKey = false;
				colvarThanhTien.IsReadOnly = false;
				colvarThanhTien.DefaultSetting = @"";
				colvarThanhTien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarThanhTien);
				
				TableSchema.TableColumn colvarMaKhoa = new TableSchema.TableColumn(schema);
				colvarMaKhoa.ColumnName = "MA_KHOA";
				colvarMaKhoa.DataType = DbType.String;
				colvarMaKhoa.MaxLength = 50;
				colvarMaKhoa.AutoIncrement = false;
				colvarMaKhoa.IsNullable = true;
				colvarMaKhoa.IsPrimaryKey = false;
				colvarMaKhoa.IsForeignKey = false;
				colvarMaKhoa.IsReadOnly = false;
				colvarMaKhoa.DefaultSetting = @"";
				colvarMaKhoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKhoa);
				
				TableSchema.TableColumn colvarMaBacSi = new TableSchema.TableColumn(schema);
				colvarMaBacSi.ColumnName = "MA_BAC_SI";
				colvarMaBacSi.DataType = DbType.String;
				colvarMaBacSi.MaxLength = 50;
				colvarMaBacSi.AutoIncrement = false;
				colvarMaBacSi.IsNullable = true;
				colvarMaBacSi.IsPrimaryKey = false;
				colvarMaBacSi.IsForeignKey = false;
				colvarMaBacSi.IsReadOnly = false;
				colvarMaBacSi.DefaultSetting = @"";
				colvarMaBacSi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaBacSi);
				
				TableSchema.TableColumn colvarMaBenh = new TableSchema.TableColumn(schema);
				colvarMaBenh.ColumnName = "MA_BENH";
				colvarMaBenh.DataType = DbType.String;
				colvarMaBenh.MaxLength = 255;
				colvarMaBenh.AutoIncrement = false;
				colvarMaBenh.IsNullable = true;
				colvarMaBenh.IsPrimaryKey = false;
				colvarMaBenh.IsForeignKey = false;
				colvarMaBenh.IsReadOnly = false;
				colvarMaBenh.DefaultSetting = @"";
				colvarMaBenh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaBenh);
				
				TableSchema.TableColumn colvarNgayYl = new TableSchema.TableColumn(schema);
				colvarNgayYl.ColumnName = "NGAY_YL";
				colvarNgayYl.DataType = DbType.String;
				colvarNgayYl.MaxLength = 12;
				colvarNgayYl.AutoIncrement = false;
				colvarNgayYl.IsNullable = true;
				colvarNgayYl.IsPrimaryKey = false;
				colvarNgayYl.IsForeignKey = false;
				colvarNgayYl.IsReadOnly = false;
				colvarNgayYl.DefaultSetting = @"";
				colvarNgayYl.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayYl);
				
				TableSchema.TableColumn colvarMaPttt = new TableSchema.TableColumn(schema);
				colvarMaPttt.ColumnName = "MA_PTTT";
				colvarMaPttt.DataType = DbType.Int32;
				colvarMaPttt.MaxLength = 0;
				colvarMaPttt.AutoIncrement = false;
				colvarMaPttt.IsNullable = true;
				colvarMaPttt.IsPrimaryKey = false;
				colvarMaPttt.IsForeignKey = false;
				colvarMaPttt.IsReadOnly = false;
				colvarMaPttt.DefaultSetting = @"";
				colvarMaPttt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaPttt);
				
				TableSchema.TableColumn colvarTtThau = new TableSchema.TableColumn(schema);
				colvarTtThau.ColumnName = "TT_THAU";
				colvarTtThau.DataType = DbType.String;
				colvarTtThau.MaxLength = 25;
				colvarTtThau.AutoIncrement = false;
				colvarTtThau.IsNullable = true;
				colvarTtThau.IsPrimaryKey = false;
				colvarTtThau.IsForeignKey = false;
				colvarTtThau.IsReadOnly = false;
				colvarTtThau.DefaultSetting = @"";
				colvarTtThau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTtThau);
				
				TableSchema.TableColumn colvarPhamVi = new TableSchema.TableColumn(schema);
				colvarPhamVi.ColumnName = "PHAM_VI";
				colvarPhamVi.DataType = DbType.Int32;
				colvarPhamVi.MaxLength = 0;
				colvarPhamVi.AutoIncrement = false;
				colvarPhamVi.IsNullable = true;
				colvarPhamVi.IsPrimaryKey = false;
				colvarPhamVi.IsForeignKey = false;
				colvarPhamVi.IsReadOnly = false;
				colvarPhamVi.DefaultSetting = @"";
				colvarPhamVi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPhamVi);
				
				TableSchema.TableColumn colvarMucHuong = new TableSchema.TableColumn(schema);
				colvarMucHuong.ColumnName = "MUC_HUONG";
				colvarMucHuong.DataType = DbType.Decimal;
				colvarMucHuong.MaxLength = 0;
				colvarMucHuong.AutoIncrement = false;
				colvarMucHuong.IsNullable = true;
				colvarMucHuong.IsPrimaryKey = false;
				colvarMucHuong.IsForeignKey = false;
				colvarMucHuong.IsReadOnly = false;
				colvarMucHuong.DefaultSetting = @"";
				colvarMucHuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMucHuong);
				
				TableSchema.TableColumn colvarTNguonkhac = new TableSchema.TableColumn(schema);
				colvarTNguonkhac.ColumnName = "T_NGUONKHAC";
				colvarTNguonkhac.DataType = DbType.Decimal;
				colvarTNguonkhac.MaxLength = 0;
				colvarTNguonkhac.AutoIncrement = false;
				colvarTNguonkhac.IsNullable = true;
				colvarTNguonkhac.IsPrimaryKey = false;
				colvarTNguonkhac.IsForeignKey = false;
				colvarTNguonkhac.IsReadOnly = false;
				colvarTNguonkhac.DefaultSetting = @"";
				colvarTNguonkhac.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTNguonkhac);
				
				TableSchema.TableColumn colvarTBntt = new TableSchema.TableColumn(schema);
				colvarTBntt.ColumnName = "T_BNTT";
				colvarTBntt.DataType = DbType.Decimal;
				colvarTBntt.MaxLength = 0;
				colvarTBntt.AutoIncrement = false;
				colvarTBntt.IsNullable = true;
				colvarTBntt.IsPrimaryKey = false;
				colvarTBntt.IsForeignKey = false;
				colvarTBntt.IsReadOnly = false;
				colvarTBntt.DefaultSetting = @"";
				colvarTBntt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTBntt);
				
				TableSchema.TableColumn colvarTBhtt = new TableSchema.TableColumn(schema);
				colvarTBhtt.ColumnName = "T_BHTT";
				colvarTBhtt.DataType = DbType.Decimal;
				colvarTBhtt.MaxLength = 0;
				colvarTBhtt.AutoIncrement = false;
				colvarTBhtt.IsNullable = true;
				colvarTBhtt.IsPrimaryKey = false;
				colvarTBhtt.IsForeignKey = false;
				colvarTBhtt.IsReadOnly = false;
				colvarTBhtt.DefaultSetting = @"";
				colvarTBhtt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTBhtt);
				
				TableSchema.TableColumn colvarTBncct = new TableSchema.TableColumn(schema);
				colvarTBncct.ColumnName = "T_BNCCT";
				colvarTBncct.DataType = DbType.Decimal;
				colvarTBncct.MaxLength = 0;
				colvarTBncct.AutoIncrement = false;
				colvarTBncct.IsNullable = true;
				colvarTBncct.IsPrimaryKey = false;
				colvarTBncct.IsForeignKey = false;
				colvarTBncct.IsReadOnly = false;
				colvarTBncct.DefaultSetting = @"";
				colvarTBncct.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTBncct);
				
				TableSchema.TableColumn colvarTNgoaids = new TableSchema.TableColumn(schema);
				colvarTNgoaids.ColumnName = "T_NGOAIDS";
				colvarTNgoaids.DataType = DbType.Decimal;
				colvarTNgoaids.MaxLength = 0;
				colvarTNgoaids.AutoIncrement = false;
				colvarTNgoaids.IsNullable = true;
				colvarTNgoaids.IsPrimaryKey = false;
				colvarTNgoaids.IsForeignKey = false;
				colvarTNgoaids.IsReadOnly = false;
				colvarTNgoaids.DefaultSetting = @"";
				colvarTNgoaids.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTNgoaids);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("XML_2_917",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdXML2")]
		[Bindable(true)]
		public long IdXML2 
		{
			get { return GetColumnValue<long>(Columns.IdXML2); }
			set { SetColumnValue(Columns.IdXML2, value); }
		}
		  
		[XmlAttribute("MaLk")]
		[Bindable(true)]
		public string MaLk 
		{
			get { return GetColumnValue<string>(Columns.MaLk); }
			set { SetColumnValue(Columns.MaLk, value); }
		}
		  
		[XmlAttribute("Stt")]
		[Bindable(true)]
		public int? Stt 
		{
			get { return GetColumnValue<int?>(Columns.Stt); }
			set { SetColumnValue(Columns.Stt, value); }
		}
		  
		[XmlAttribute("MaThuoc")]
		[Bindable(true)]
		public string MaThuoc 
		{
			get { return GetColumnValue<string>(Columns.MaThuoc); }
			set { SetColumnValue(Columns.MaThuoc, value); }
		}
		  
		[XmlAttribute("MaNhom")]
		[Bindable(true)]
		public string MaNhom 
		{
			get { return GetColumnValue<string>(Columns.MaNhom); }
			set { SetColumnValue(Columns.MaNhom, value); }
		}
		  
		[XmlAttribute("TenThuoc")]
		[Bindable(true)]
		public string TenThuoc 
		{
			get { return GetColumnValue<string>(Columns.TenThuoc); }
			set { SetColumnValue(Columns.TenThuoc, value); }
		}
		  
		[XmlAttribute("DonViTinh")]
		[Bindable(true)]
		public string DonViTinh 
		{
			get { return GetColumnValue<string>(Columns.DonViTinh); }
			set { SetColumnValue(Columns.DonViTinh, value); }
		}
		  
		[XmlAttribute("HamLuong")]
		[Bindable(true)]
		public string HamLuong 
		{
			get { return GetColumnValue<string>(Columns.HamLuong); }
			set { SetColumnValue(Columns.HamLuong, value); }
		}
		  
		[XmlAttribute("DuongDung")]
		[Bindable(true)]
		public string DuongDung 
		{
			get { return GetColumnValue<string>(Columns.DuongDung); }
			set { SetColumnValue(Columns.DuongDung, value); }
		}
		  
		[XmlAttribute("LieuDung")]
		[Bindable(true)]
		public string LieuDung 
		{
			get { return GetColumnValue<string>(Columns.LieuDung); }
			set { SetColumnValue(Columns.LieuDung, value); }
		}
		  
		[XmlAttribute("SoDangKy")]
		[Bindable(true)]
		public string SoDangKy 
		{
			get { return GetColumnValue<string>(Columns.SoDangKy); }
			set { SetColumnValue(Columns.SoDangKy, value); }
		}
		  
		[XmlAttribute("SoLuong")]
		[Bindable(true)]
		public double? SoLuong 
		{
			get { return GetColumnValue<double?>(Columns.SoLuong); }
			set { SetColumnValue(Columns.SoLuong, value); }
		}
		  
		[XmlAttribute("DonGia")]
		[Bindable(true)]
		public decimal? DonGia 
		{
			get { return GetColumnValue<decimal?>(Columns.DonGia); }
			set { SetColumnValue(Columns.DonGia, value); }
		}
		  
		[XmlAttribute("TyleTt")]
		[Bindable(true)]
		public int? TyleTt 
		{
			get { return GetColumnValue<int?>(Columns.TyleTt); }
			set { SetColumnValue(Columns.TyleTt, value); }
		}
		  
		[XmlAttribute("ThanhTien")]
		[Bindable(true)]
		public decimal? ThanhTien 
		{
			get { return GetColumnValue<decimal?>(Columns.ThanhTien); }
			set { SetColumnValue(Columns.ThanhTien, value); }
		}
		  
		[XmlAttribute("MaKhoa")]
		[Bindable(true)]
		public string MaKhoa 
		{
			get { return GetColumnValue<string>(Columns.MaKhoa); }
			set { SetColumnValue(Columns.MaKhoa, value); }
		}
		  
		[XmlAttribute("MaBacSi")]
		[Bindable(true)]
		public string MaBacSi 
		{
			get { return GetColumnValue<string>(Columns.MaBacSi); }
			set { SetColumnValue(Columns.MaBacSi, value); }
		}
		  
		[XmlAttribute("MaBenh")]
		[Bindable(true)]
		public string MaBenh 
		{
			get { return GetColumnValue<string>(Columns.MaBenh); }
			set { SetColumnValue(Columns.MaBenh, value); }
		}
		  
		[XmlAttribute("NgayYl")]
		[Bindable(true)]
		public string NgayYl 
		{
			get { return GetColumnValue<string>(Columns.NgayYl); }
			set { SetColumnValue(Columns.NgayYl, value); }
		}
		  
		[XmlAttribute("MaPttt")]
		[Bindable(true)]
		public int? MaPttt 
		{
			get { return GetColumnValue<int?>(Columns.MaPttt); }
			set { SetColumnValue(Columns.MaPttt, value); }
		}
		  
		[XmlAttribute("TtThau")]
		[Bindable(true)]
		public string TtThau 
		{
			get { return GetColumnValue<string>(Columns.TtThau); }
			set { SetColumnValue(Columns.TtThau, value); }
		}
		  
		[XmlAttribute("PhamVi")]
		[Bindable(true)]
		public int? PhamVi 
		{
			get { return GetColumnValue<int?>(Columns.PhamVi); }
			set { SetColumnValue(Columns.PhamVi, value); }
		}
		  
		[XmlAttribute("MucHuong")]
		[Bindable(true)]
		public decimal? MucHuong 
		{
			get { return GetColumnValue<decimal?>(Columns.MucHuong); }
			set { SetColumnValue(Columns.MucHuong, value); }
		}
		  
		[XmlAttribute("TNguonkhac")]
		[Bindable(true)]
		public decimal? TNguonkhac 
		{
			get { return GetColumnValue<decimal?>(Columns.TNguonkhac); }
			set { SetColumnValue(Columns.TNguonkhac, value); }
		}
		  
		[XmlAttribute("TBntt")]
		[Bindable(true)]
		public decimal? TBntt 
		{
			get { return GetColumnValue<decimal?>(Columns.TBntt); }
			set { SetColumnValue(Columns.TBntt, value); }
		}
		  
		[XmlAttribute("TBhtt")]
		[Bindable(true)]
		public decimal? TBhtt 
		{
			get { return GetColumnValue<decimal?>(Columns.TBhtt); }
			set { SetColumnValue(Columns.TBhtt, value); }
		}
		  
		[XmlAttribute("TBncct")]
		[Bindable(true)]
		public decimal? TBncct 
		{
			get { return GetColumnValue<decimal?>(Columns.TBncct); }
			set { SetColumnValue(Columns.TBncct, value); }
		}
		  
		[XmlAttribute("TNgoaids")]
		[Bindable(true)]
		public decimal? TNgoaids 
		{
			get { return GetColumnValue<decimal?>(Columns.TNgoaids); }
			set { SetColumnValue(Columns.TNgoaids, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varMaLk,int? varStt,string varMaThuoc,string varMaNhom,string varTenThuoc,string varDonViTinh,string varHamLuong,string varDuongDung,string varLieuDung,string varSoDangKy,double? varSoLuong,decimal? varDonGia,int? varTyleTt,decimal? varThanhTien,string varMaKhoa,string varMaBacSi,string varMaBenh,string varNgayYl,int? varMaPttt,string varTtThau,int? varPhamVi,decimal? varMucHuong,decimal? varTNguonkhac,decimal? varTBntt,decimal? varTBhtt,decimal? varTBncct,decimal? varTNgoaids)
		{
			Xml2917 item = new Xml2917();
			
			item.MaLk = varMaLk;
			
			item.Stt = varStt;
			
			item.MaThuoc = varMaThuoc;
			
			item.MaNhom = varMaNhom;
			
			item.TenThuoc = varTenThuoc;
			
			item.DonViTinh = varDonViTinh;
			
			item.HamLuong = varHamLuong;
			
			item.DuongDung = varDuongDung;
			
			item.LieuDung = varLieuDung;
			
			item.SoDangKy = varSoDangKy;
			
			item.SoLuong = varSoLuong;
			
			item.DonGia = varDonGia;
			
			item.TyleTt = varTyleTt;
			
			item.ThanhTien = varThanhTien;
			
			item.MaKhoa = varMaKhoa;
			
			item.MaBacSi = varMaBacSi;
			
			item.MaBenh = varMaBenh;
			
			item.NgayYl = varNgayYl;
			
			item.MaPttt = varMaPttt;
			
			item.TtThau = varTtThau;
			
			item.PhamVi = varPhamVi;
			
			item.MucHuong = varMucHuong;
			
			item.TNguonkhac = varTNguonkhac;
			
			item.TBntt = varTBntt;
			
			item.TBhtt = varTBhtt;
			
			item.TBncct = varTBncct;
			
			item.TNgoaids = varTNgoaids;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varIdXML2,string varMaLk,int? varStt,string varMaThuoc,string varMaNhom,string varTenThuoc,string varDonViTinh,string varHamLuong,string varDuongDung,string varLieuDung,string varSoDangKy,double? varSoLuong,decimal? varDonGia,int? varTyleTt,decimal? varThanhTien,string varMaKhoa,string varMaBacSi,string varMaBenh,string varNgayYl,int? varMaPttt,string varTtThau,int? varPhamVi,decimal? varMucHuong,decimal? varTNguonkhac,decimal? varTBntt,decimal? varTBhtt,decimal? varTBncct,decimal? varTNgoaids)
		{
			Xml2917 item = new Xml2917();
			
				item.IdXML2 = varIdXML2;
			
				item.MaLk = varMaLk;
			
				item.Stt = varStt;
			
				item.MaThuoc = varMaThuoc;
			
				item.MaNhom = varMaNhom;
			
				item.TenThuoc = varTenThuoc;
			
				item.DonViTinh = varDonViTinh;
			
				item.HamLuong = varHamLuong;
			
				item.DuongDung = varDuongDung;
			
				item.LieuDung = varLieuDung;
			
				item.SoDangKy = varSoDangKy;
			
				item.SoLuong = varSoLuong;
			
				item.DonGia = varDonGia;
			
				item.TyleTt = varTyleTt;
			
				item.ThanhTien = varThanhTien;
			
				item.MaKhoa = varMaKhoa;
			
				item.MaBacSi = varMaBacSi;
			
				item.MaBenh = varMaBenh;
			
				item.NgayYl = varNgayYl;
			
				item.MaPttt = varMaPttt;
			
				item.TtThau = varTtThau;
			
				item.PhamVi = varPhamVi;
			
				item.MucHuong = varMucHuong;
			
				item.TNguonkhac = varTNguonkhac;
			
				item.TBntt = varTBntt;
			
				item.TBhtt = varTBhtt;
			
				item.TBncct = varTBncct;
			
				item.TNgoaids = varTNgoaids;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdXML2Column
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLkColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn SttColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn MaThuocColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn MaNhomColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn TenThuocColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn DonViTinhColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn HamLuongColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn DuongDungColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn LieuDungColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn SoDangKyColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn SoLuongColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn DonGiaColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn TyleTtColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn ThanhTienColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKhoaColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn MaBacSiColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn MaBenhColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayYlColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn MaPtttColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn TtThauColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn PhamViColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn MucHuongColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn TNguonkhacColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn TBnttColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn TBhttColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn TBncctColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn TNgoaidsColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdXML2 = @"ID_XML2";
			 public static string MaLk = @"MA_LK";
			 public static string Stt = @"STT";
			 public static string MaThuoc = @"MA_THUOC";
			 public static string MaNhom = @"MA_NHOM";
			 public static string TenThuoc = @"TEN_THUOC";
			 public static string DonViTinh = @"DON_VI_TINH";
			 public static string HamLuong = @"HAM_LUONG";
			 public static string DuongDung = @"DUONG_DUNG";
			 public static string LieuDung = @"LIEU_DUNG";
			 public static string SoDangKy = @"SO_DANG_KY";
			 public static string SoLuong = @"SO_LUONG";
			 public static string DonGia = @"DON_GIA";
			 public static string TyleTt = @"TYLE_TT";
			 public static string ThanhTien = @"THANH_TIEN";
			 public static string MaKhoa = @"MA_KHOA";
			 public static string MaBacSi = @"MA_BAC_SI";
			 public static string MaBenh = @"MA_BENH";
			 public static string NgayYl = @"NGAY_YL";
			 public static string MaPttt = @"MA_PTTT";
			 public static string TtThau = @"TT_THAU";
			 public static string PhamVi = @"PHAM_VI";
			 public static string MucHuong = @"MUC_HUONG";
			 public static string TNguonkhac = @"T_NGUONKHAC";
			 public static string TBntt = @"T_BNTT";
			 public static string TBhtt = @"T_BHTT";
			 public static string TBncct = @"T_BNCCT";
			 public static string TNgoaids = @"T_NGOAIDS";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
