using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL{
    /// <summary>
    /// Strongly-typed collection for the VDmucNoiKCBBD class.
    /// </summary>
    [Serializable]
    public partial class VDmucNoiKCBBDCollection : ReadOnlyList<VDmucNoiKCBBD, VDmucNoiKCBBDCollection>
    {        
        public VDmucNoiKCBBDCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the v_dmuc_noiKCBBD view.
    /// </summary>
    [Serializable]
    public partial class VDmucNoiKCBBD : ReadOnlyRecord<VDmucNoiKCBBD>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("v_dmuc_noiKCBBD", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarIdKcbbd = new TableSchema.TableColumn(schema);
                colvarIdKcbbd.ColumnName = "id_kcbbd";
                colvarIdKcbbd.DataType = DbType.Int32;
                colvarIdKcbbd.MaxLength = 0;
                colvarIdKcbbd.AutoIncrement = false;
                colvarIdKcbbd.IsNullable = false;
                colvarIdKcbbd.IsPrimaryKey = false;
                colvarIdKcbbd.IsForeignKey = false;
                colvarIdKcbbd.IsReadOnly = false;
                
                schema.Columns.Add(colvarIdKcbbd);
                
                TableSchema.TableColumn colvarMaDiachinh = new TableSchema.TableColumn(schema);
                colvarMaDiachinh.ColumnName = "ma_diachinh";
                colvarMaDiachinh.DataType = DbType.AnsiString;
                colvarMaDiachinh.MaxLength = 10;
                colvarMaDiachinh.AutoIncrement = false;
                colvarMaDiachinh.IsNullable = true;
                colvarMaDiachinh.IsPrimaryKey = false;
                colvarMaDiachinh.IsForeignKey = false;
                colvarMaDiachinh.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaDiachinh);
                
                TableSchema.TableColumn colvarMaKcbbd = new TableSchema.TableColumn(schema);
                colvarMaKcbbd.ColumnName = "ma_kcbbd";
                colvarMaKcbbd.DataType = DbType.AnsiString;
                colvarMaKcbbd.MaxLength = 5;
                colvarMaKcbbd.AutoIncrement = false;
                colvarMaKcbbd.IsNullable = false;
                colvarMaKcbbd.IsPrimaryKey = false;
                colvarMaKcbbd.IsForeignKey = false;
                colvarMaKcbbd.IsReadOnly = false;
                
                schema.Columns.Add(colvarMaKcbbd);
                
                TableSchema.TableColumn colvarTenKcbbd = new TableSchema.TableColumn(schema);
                colvarTenKcbbd.ColumnName = "ten_kcbbd";
                colvarTenKcbbd.DataType = DbType.String;
                colvarTenKcbbd.MaxLength = 100;
                colvarTenKcbbd.AutoIncrement = false;
                colvarTenKcbbd.IsNullable = false;
                colvarTenKcbbd.IsPrimaryKey = false;
                colvarTenKcbbd.IsForeignKey = false;
                colvarTenKcbbd.IsReadOnly = false;
                
                schema.Columns.Add(colvarTenKcbbd);
                
                TableSchema.TableColumn colvarSttHthi = new TableSchema.TableColumn(schema);
                colvarSttHthi.ColumnName = "stt_hthi";
                colvarSttHthi.DataType = DbType.Int16;
                colvarSttHthi.MaxLength = 0;
                colvarSttHthi.AutoIncrement = false;
                colvarSttHthi.IsNullable = true;
                colvarSttHthi.IsPrimaryKey = false;
                colvarSttHthi.IsForeignKey = false;
                colvarSttHthi.IsReadOnly = false;
                
                schema.Columns.Add(colvarSttHthi);
                
                TableSchema.TableColumn colvarMotaThem = new TableSchema.TableColumn(schema);
                colvarMotaThem.ColumnName = "mota_them";
                colvarMotaThem.DataType = DbType.String;
                colvarMotaThem.MaxLength = 200;
                colvarMotaThem.AutoIncrement = false;
                colvarMotaThem.IsNullable = true;
                colvarMotaThem.IsPrimaryKey = false;
                colvarMotaThem.IsForeignKey = false;
                colvarMotaThem.IsReadOnly = false;
                
                schema.Columns.Add(colvarMotaThem);
                
                TableSchema.TableColumn colvarDiaChi = new TableSchema.TableColumn(schema);
                colvarDiaChi.ColumnName = "dia_chi";
                colvarDiaChi.DataType = DbType.String;
                colvarDiaChi.MaxLength = 200;
                colvarDiaChi.AutoIncrement = false;
                colvarDiaChi.IsNullable = true;
                colvarDiaChi.IsPrimaryKey = false;
                colvarDiaChi.IsForeignKey = false;
                colvarDiaChi.IsReadOnly = false;
                
                schema.Columns.Add(colvarDiaChi);
                
                TableSchema.TableColumn colvarTenDiachinh = new TableSchema.TableColumn(schema);
                colvarTenDiachinh.ColumnName = "ten_diachinh";
                colvarTenDiachinh.DataType = DbType.String;
                colvarTenDiachinh.MaxLength = 100;
                colvarTenDiachinh.AutoIncrement = false;
                colvarTenDiachinh.IsNullable = false;
                colvarTenDiachinh.IsPrimaryKey = false;
                colvarTenDiachinh.IsForeignKey = false;
                colvarTenDiachinh.IsReadOnly = false;
                
                schema.Columns.Add(colvarTenDiachinh);
                
                TableSchema.TableColumn colvarLoaiDiachinh = new TableSchema.TableColumn(schema);
                colvarLoaiDiachinh.ColumnName = "loai_diachinh";
                colvarLoaiDiachinh.DataType = DbType.Byte;
                colvarLoaiDiachinh.MaxLength = 0;
                colvarLoaiDiachinh.AutoIncrement = false;
                colvarLoaiDiachinh.IsNullable = true;
                colvarLoaiDiachinh.IsPrimaryKey = false;
                colvarLoaiDiachinh.IsForeignKey = false;
                colvarLoaiDiachinh.IsReadOnly = false;
                
                schema.Columns.Add(colvarLoaiDiachinh);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("v_dmuc_noiKCBBD",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VDmucNoiKCBBD()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VDmucNoiKCBBD(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VDmucNoiKCBBD(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VDmucNoiKCBBD(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("IdKcbbd")]
        [Bindable(true)]
        public int IdKcbbd 
	    {
		    get
		    {
			    return GetColumnValue<int>("id_kcbbd");
		    }
            set 
		    {
			    SetColumnValue("id_kcbbd", value);
            }
        }
	      
        [XmlAttribute("MaDiachinh")]
        [Bindable(true)]
        public string MaDiachinh 
	    {
		    get
		    {
			    return GetColumnValue<string>("ma_diachinh");
		    }
            set 
		    {
			    SetColumnValue("ma_diachinh", value);
            }
        }
	      
        [XmlAttribute("MaKcbbd")]
        [Bindable(true)]
        public string MaKcbbd 
	    {
		    get
		    {
			    return GetColumnValue<string>("ma_kcbbd");
		    }
            set 
		    {
			    SetColumnValue("ma_kcbbd", value);
            }
        }
	      
        [XmlAttribute("TenKcbbd")]
        [Bindable(true)]
        public string TenKcbbd 
	    {
		    get
		    {
			    return GetColumnValue<string>("ten_kcbbd");
		    }
            set 
		    {
			    SetColumnValue("ten_kcbbd", value);
            }
        }
	      
        [XmlAttribute("SttHthi")]
        [Bindable(true)]
        public short? SttHthi 
	    {
		    get
		    {
			    return GetColumnValue<short?>("stt_hthi");
		    }
            set 
		    {
			    SetColumnValue("stt_hthi", value);
            }
        }
	      
        [XmlAttribute("MotaThem")]
        [Bindable(true)]
        public string MotaThem 
	    {
		    get
		    {
			    return GetColumnValue<string>("mota_them");
		    }
            set 
		    {
			    SetColumnValue("mota_them", value);
            }
        }
	      
        [XmlAttribute("DiaChi")]
        [Bindable(true)]
        public string DiaChi 
	    {
		    get
		    {
			    return GetColumnValue<string>("dia_chi");
		    }
            set 
		    {
			    SetColumnValue("dia_chi", value);
            }
        }
	      
        [XmlAttribute("TenDiachinh")]
        [Bindable(true)]
        public string TenDiachinh 
	    {
		    get
		    {
			    return GetColumnValue<string>("ten_diachinh");
		    }
            set 
		    {
			    SetColumnValue("ten_diachinh", value);
            }
        }
	      
        [XmlAttribute("LoaiDiachinh")]
        [Bindable(true)]
        public byte? LoaiDiachinh 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("loai_diachinh");
		    }
            set 
		    {
			    SetColumnValue("loai_diachinh", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string IdKcbbd = @"id_kcbbd";
            
            public static string MaDiachinh = @"ma_diachinh";
            
            public static string MaKcbbd = @"ma_kcbbd";
            
            public static string TenKcbbd = @"ten_kcbbd";
            
            public static string SttHthi = @"stt_hthi";
            
            public static string MotaThem = @"mota_them";
            
            public static string DiaChi = @"dia_chi";
            
            public static string TenDiachinh = @"ten_diachinh";
            
            public static string LoaiDiachinh = @"loai_diachinh";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
