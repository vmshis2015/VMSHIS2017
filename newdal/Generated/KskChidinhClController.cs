using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
    /// <summary>
    /// Controller class for ksk_chidinh_cls
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class KskChidinhClController
    {
        // Preload our schema..
        KskChidinhCl thisSchemaLoad = new KskChidinhCl();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public KskChidinhClCollection FetchAll()
        {
            KskChidinhClCollection coll = new KskChidinhClCollection();
            Query qry = new Query(KskChidinhCl.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public KskChidinhClCollection FetchByID(object IdChiDinh)
        {
            KskChidinhClCollection coll = new KskChidinhClCollection().Where("IdChiDinh", IdChiDinh).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public KskChidinhClCollection FetchByQuery(Query qry)
        {
            KskChidinhClCollection coll = new KskChidinhClCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object IdChiDinh)
        {
            return (KskChidinhCl.Delete(IdChiDinh) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object IdChiDinh)
        {
            return (KskChidinhCl.Destroy(IdChiDinh) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string MaChiDinh,long IdNhanVien,string MaLuotkham,string SoLo,string MaDangKy,byte? TrangThai,string BarCode,DateTime? NgayChiDinh,DateTime? NgayTraKetQua,string NguoiChiDinh,string MoTaThem,string GhiChu,string NguoiTao,string NgayTao,string NguoiSua,string NgaySua,string IpMayTao,string IpMaySua,string MacMayTao,string MacMaySua)
	    {
		    KskChidinhCl item = new KskChidinhCl();
		    
            item.MaChiDinh = MaChiDinh;
            
            item.IdNhanVien = IdNhanVien;
            
            item.MaLuotkham = MaLuotkham;
            
            item.SoLo = SoLo;
            
            item.MaDangKy = MaDangKy;
            
            item.TrangThai = TrangThai;
            
            item.BarCode = BarCode;
            
            item.NgayChiDinh = NgayChiDinh;
            
            item.NgayTraKetQua = NgayTraKetQua;
            
            item.NguoiChiDinh = NguoiChiDinh;
            
            item.MoTaThem = MoTaThem;
            
            item.GhiChu = GhiChu;
            
            item.NguoiTao = NguoiTao;
            
            item.NgayTao = NgayTao;
            
            item.NguoiSua = NguoiSua;
            
            item.NgaySua = NgaySua;
            
            item.IpMayTao = IpMayTao;
            
            item.IpMaySua = IpMaySua;
            
            item.MacMayTao = MacMayTao;
            
            item.MacMaySua = MacMaySua;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(long IdChiDinh,string MaChiDinh,long IdNhanVien,string MaLuotkham,string SoLo,string MaDangKy,byte? TrangThai,string BarCode,DateTime? NgayChiDinh,DateTime? NgayTraKetQua,string NguoiChiDinh,string MoTaThem,string GhiChu,string NguoiTao,string NgayTao,string NguoiSua,string NgaySua,string IpMayTao,string IpMaySua,string MacMayTao,string MacMaySua)
	    {
		    KskChidinhCl item = new KskChidinhCl();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.IdChiDinh = IdChiDinh;
				
			item.MaChiDinh = MaChiDinh;
				
			item.IdNhanVien = IdNhanVien;
				
			item.MaLuotkham = MaLuotkham;
				
			item.SoLo = SoLo;
				
			item.MaDangKy = MaDangKy;
				
			item.TrangThai = TrangThai;
				
			item.BarCode = BarCode;
				
			item.NgayChiDinh = NgayChiDinh;
				
			item.NgayTraKetQua = NgayTraKetQua;
				
			item.NguoiChiDinh = NguoiChiDinh;
				
			item.MoTaThem = MoTaThem;
				
			item.GhiChu = GhiChu;
				
			item.NguoiTao = NguoiTao;
				
			item.NgayTao = NgayTao;
				
			item.NguoiSua = NguoiSua;
				
			item.NgaySua = NgaySua;
				
			item.IpMayTao = IpMayTao;
				
			item.IpMaySua = IpMaySua;
				
			item.MacMayTao = MacMayTao;
				
			item.MacMaySua = MacMaySua;
				
	        item.Save(UserName);
	    }
    }
}
