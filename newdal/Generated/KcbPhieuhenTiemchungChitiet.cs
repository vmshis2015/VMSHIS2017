using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the KcbPhieuhenTiemchungChitiet class.
	/// </summary>
    [Serializable]
	public partial class KcbPhieuhenTiemchungChitietCollection : ActiveList<KcbPhieuhenTiemchungChitiet, KcbPhieuhenTiemchungChitietCollection>
	{	   
		public KcbPhieuhenTiemchungChitietCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>KcbPhieuhenTiemchungChitietCollection</returns>
		public KcbPhieuhenTiemchungChitietCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                KcbPhieuhenTiemchungChitiet o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the kcb_phieuhen_tiemchung_chitiet table.
	/// </summary>
	[Serializable]
	public partial class KcbPhieuhenTiemchungChitiet : ActiveRecord<KcbPhieuhenTiemchungChitiet>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public KcbPhieuhenTiemchungChitiet()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public KcbPhieuhenTiemchungChitiet(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public KcbPhieuhenTiemchungChitiet(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public KcbPhieuhenTiemchungChitiet(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("kcb_phieuhen_tiemchung_chitiet", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdChitiet = new TableSchema.TableColumn(schema);
				colvarIdChitiet.ColumnName = "id_chitiet";
				colvarIdChitiet.DataType = DbType.Int64;
				colvarIdChitiet.MaxLength = 0;
				colvarIdChitiet.AutoIncrement = true;
				colvarIdChitiet.IsNullable = false;
				colvarIdChitiet.IsPrimaryKey = true;
				colvarIdChitiet.IsForeignKey = false;
				colvarIdChitiet.IsReadOnly = false;
				colvarIdChitiet.DefaultSetting = @"";
				colvarIdChitiet.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdChitiet);
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int64;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = false;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = false;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarMuiThu = new TableSchema.TableColumn(schema);
				colvarMuiThu.ColumnName = "mui_thu";
				colvarMuiThu.DataType = DbType.Byte;
				colvarMuiThu.MaxLength = 0;
				colvarMuiThu.AutoIncrement = false;
				colvarMuiThu.IsNullable = false;
				colvarMuiThu.IsPrimaryKey = false;
				colvarMuiThu.IsForeignKey = false;
				colvarMuiThu.IsReadOnly = false;
				colvarMuiThu.DefaultSetting = @"";
				colvarMuiThu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMuiThu);
				
				TableSchema.TableColumn colvarNgayHen = new TableSchema.TableColumn(schema);
				colvarNgayHen.ColumnName = "ngay_hen";
				colvarNgayHen.DataType = DbType.DateTime;
				colvarNgayHen.MaxLength = 0;
				colvarNgayHen.AutoIncrement = false;
				colvarNgayHen.IsNullable = false;
				colvarNgayHen.IsPrimaryKey = false;
				colvarNgayHen.IsForeignKey = false;
				colvarNgayHen.IsReadOnly = false;
				colvarNgayHen.DefaultSetting = @"";
				colvarNgayHen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayHen);
				
				TableSchema.TableColumn colvarNguoiTiem = new TableSchema.TableColumn(schema);
				colvarNguoiTiem.ColumnName = "nguoi_tiem";
				colvarNguoiTiem.DataType = DbType.Int16;
				colvarNguoiTiem.MaxLength = 0;
				colvarNguoiTiem.AutoIncrement = false;
				colvarNguoiTiem.IsNullable = true;
				colvarNguoiTiem.IsPrimaryKey = false;
				colvarNguoiTiem.IsForeignKey = false;
				colvarNguoiTiem.IsReadOnly = false;
				colvarNguoiTiem.DefaultSetting = @"";
				colvarNguoiTiem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTiem);
				
				TableSchema.TableColumn colvarNgayTiem = new TableSchema.TableColumn(schema);
				colvarNgayTiem.ColumnName = "ngay_tiem";
				colvarNgayTiem.DataType = DbType.DateTime;
				colvarNgayTiem.MaxLength = 0;
				colvarNgayTiem.AutoIncrement = false;
				colvarNgayTiem.IsNullable = true;
				colvarNgayTiem.IsPrimaryKey = false;
				colvarNgayTiem.IsForeignKey = false;
				colvarNgayTiem.IsReadOnly = false;
				colvarNgayTiem.DefaultSetting = @"";
				colvarNgayTiem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTiem);
				
				TableSchema.TableColumn colvarTrangThai = new TableSchema.TableColumn(schema);
				colvarTrangThai.ColumnName = "trang_thai";
				colvarTrangThai.DataType = DbType.Byte;
				colvarTrangThai.MaxLength = 0;
				colvarTrangThai.AutoIncrement = false;
				colvarTrangThai.IsNullable = false;
				colvarTrangThai.IsPrimaryKey = false;
				colvarTrangThai.IsForeignKey = false;
				colvarTrangThai.IsReadOnly = false;
				colvarTrangThai.DefaultSetting = @"";
				colvarTrangThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThai);
				
				TableSchema.TableColumn colvarGhiChu = new TableSchema.TableColumn(schema);
				colvarGhiChu.ColumnName = "ghi_chu";
				colvarGhiChu.DataType = DbType.String;
				colvarGhiChu.MaxLength = 255;
				colvarGhiChu.AutoIncrement = false;
				colvarGhiChu.IsNullable = true;
				colvarGhiChu.IsPrimaryKey = false;
				colvarGhiChu.IsForeignKey = false;
				colvarGhiChu.IsReadOnly = false;
				colvarGhiChu.DefaultSetting = @"";
				colvarGhiChu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGhiChu);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("kcb_phieuhen_tiemchung_chitiet",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdChitiet")]
		[Bindable(true)]
		public long IdChitiet 
		{
			get { return GetColumnValue<long>(Columns.IdChitiet); }
			set { SetColumnValue(Columns.IdChitiet, value); }
		}
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public long Id 
		{
			get { return GetColumnValue<long>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("MuiThu")]
		[Bindable(true)]
		public byte MuiThu 
		{
			get { return GetColumnValue<byte>(Columns.MuiThu); }
			set { SetColumnValue(Columns.MuiThu, value); }
		}
		  
		[XmlAttribute("NgayHen")]
		[Bindable(true)]
		public DateTime NgayHen 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayHen); }
			set { SetColumnValue(Columns.NgayHen, value); }
		}
		  
		[XmlAttribute("NguoiTiem")]
		[Bindable(true)]
		public short? NguoiTiem 
		{
			get { return GetColumnValue<short?>(Columns.NguoiTiem); }
			set { SetColumnValue(Columns.NguoiTiem, value); }
		}
		  
		[XmlAttribute("NgayTiem")]
		[Bindable(true)]
		public DateTime? NgayTiem 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTiem); }
			set { SetColumnValue(Columns.NgayTiem, value); }
		}
		  
		[XmlAttribute("TrangThai")]
		[Bindable(true)]
		public byte TrangThai 
		{
			get { return GetColumnValue<byte>(Columns.TrangThai); }
			set { SetColumnValue(Columns.TrangThai, value); }
		}
		  
		[XmlAttribute("GhiChu")]
		[Bindable(true)]
		public string GhiChu 
		{
			get { return GetColumnValue<string>(Columns.GhiChu); }
			set { SetColumnValue(Columns.GhiChu, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(long varId,byte varMuiThu,DateTime varNgayHen,short? varNguoiTiem,DateTime? varNgayTiem,byte varTrangThai,string varGhiChu)
		{
			KcbPhieuhenTiemchungChitiet item = new KcbPhieuhenTiemchungChitiet();
			
			item.Id = varId;
			
			item.MuiThu = varMuiThu;
			
			item.NgayHen = varNgayHen;
			
			item.NguoiTiem = varNguoiTiem;
			
			item.NgayTiem = varNgayTiem;
			
			item.TrangThai = varTrangThai;
			
			item.GhiChu = varGhiChu;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varIdChitiet,long varId,byte varMuiThu,DateTime varNgayHen,short? varNguoiTiem,DateTime? varNgayTiem,byte varTrangThai,string varGhiChu)
		{
			KcbPhieuhenTiemchungChitiet item = new KcbPhieuhenTiemchungChitiet();
			
				item.IdChitiet = varIdChitiet;
			
				item.Id = varId;
			
				item.MuiThu = varMuiThu;
			
				item.NgayHen = varNgayHen;
			
				item.NguoiTiem = varNguoiTiem;
			
				item.NgayTiem = varNgayTiem;
			
				item.TrangThai = varTrangThai;
			
				item.GhiChu = varGhiChu;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdChitietColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn MuiThuColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayHenColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTiemColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTiemColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn GhiChuColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdChitiet = @"id_chitiet";
			 public static string Id = @"id";
			 public static string MuiThu = @"mui_thu";
			 public static string NgayHen = @"ngay_hen";
			 public static string NguoiTiem = @"nguoi_tiem";
			 public static string NgayTiem = @"ngay_tiem";
			 public static string TrangThai = @"trang_thai";
			 public static string GhiChu = @"ghi_chu";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
