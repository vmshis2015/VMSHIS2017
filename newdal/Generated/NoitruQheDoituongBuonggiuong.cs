using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the NoitruQheDoituongBuonggiuong class.
	/// </summary>
    [Serializable]
	public partial class NoitruQheDoituongBuonggiuongCollection : ActiveList<NoitruQheDoituongBuonggiuong, NoitruQheDoituongBuonggiuongCollection>
	{	   
		public NoitruQheDoituongBuonggiuongCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>NoitruQheDoituongBuonggiuongCollection</returns>
		public NoitruQheDoituongBuonggiuongCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                NoitruQheDoituongBuonggiuong o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the noitru_qhe_doituong_buonggiuong table.
	/// </summary>
	[Serializable]
	public partial class NoitruQheDoituongBuonggiuong : ActiveRecord<NoitruQheDoituongBuonggiuong>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public NoitruQheDoituongBuonggiuong()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public NoitruQheDoituongBuonggiuong(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public NoitruQheDoituongBuonggiuong(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public NoitruQheDoituongBuonggiuong(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("noitru_qhe_doituong_buonggiuong", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarIdBuong = new TableSchema.TableColumn(schema);
				colvarIdBuong.ColumnName = "id_buong";
				colvarIdBuong.DataType = DbType.Int32;
				colvarIdBuong.MaxLength = 0;
				colvarIdBuong.AutoIncrement = false;
				colvarIdBuong.IsNullable = false;
				colvarIdBuong.IsPrimaryKey = false;
				colvarIdBuong.IsForeignKey = false;
				colvarIdBuong.IsReadOnly = false;
				colvarIdBuong.DefaultSetting = @"";
				colvarIdBuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBuong);
				
				TableSchema.TableColumn colvarIdGiuong = new TableSchema.TableColumn(schema);
				colvarIdGiuong.ColumnName = "id_giuong";
				colvarIdGiuong.DataType = DbType.Int32;
				colvarIdGiuong.MaxLength = 0;
				colvarIdGiuong.AutoIncrement = false;
				colvarIdGiuong.IsNullable = false;
				colvarIdGiuong.IsPrimaryKey = false;
				colvarIdGiuong.IsForeignKey = false;
				colvarIdGiuong.IsReadOnly = false;
				colvarIdGiuong.DefaultSetting = @"";
				colvarIdGiuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdGiuong);
				
				TableSchema.TableColumn colvarDonGia = new TableSchema.TableColumn(schema);
				colvarDonGia.ColumnName = "don_gia";
				colvarDonGia.DataType = DbType.Decimal;
				colvarDonGia.MaxLength = 0;
				colvarDonGia.AutoIncrement = false;
				colvarDonGia.IsNullable = false;
				colvarDonGia.IsPrimaryKey = false;
				colvarDonGia.IsForeignKey = false;
				colvarDonGia.IsReadOnly = false;
				colvarDonGia.DefaultSetting = @"";
				colvarDonGia.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDonGia);
				
				TableSchema.TableColumn colvarPhuthuDungtuyen = new TableSchema.TableColumn(schema);
				colvarPhuthuDungtuyen.ColumnName = "phuthu_dungtuyen";
				colvarPhuthuDungtuyen.DataType = DbType.Decimal;
				colvarPhuthuDungtuyen.MaxLength = 0;
				colvarPhuthuDungtuyen.AutoIncrement = false;
				colvarPhuthuDungtuyen.IsNullable = false;
				colvarPhuthuDungtuyen.IsPrimaryKey = false;
				colvarPhuthuDungtuyen.IsForeignKey = false;
				colvarPhuthuDungtuyen.IsReadOnly = false;
				colvarPhuthuDungtuyen.DefaultSetting = @"";
				colvarPhuthuDungtuyen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPhuthuDungtuyen);
				
				TableSchema.TableColumn colvarPhuthuTraituyen = new TableSchema.TableColumn(schema);
				colvarPhuthuTraituyen.ColumnName = "phuthu_traituyen";
				colvarPhuthuTraituyen.DataType = DbType.Decimal;
				colvarPhuthuTraituyen.MaxLength = 0;
				colvarPhuthuTraituyen.AutoIncrement = false;
				colvarPhuthuTraituyen.IsNullable = true;
				colvarPhuthuTraituyen.IsPrimaryKey = false;
				colvarPhuthuTraituyen.IsForeignKey = false;
				colvarPhuthuTraituyen.IsReadOnly = false;
				colvarPhuthuTraituyen.DefaultSetting = @"";
				colvarPhuthuTraituyen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPhuthuTraituyen);
				
				TableSchema.TableColumn colvarMotaThem = new TableSchema.TableColumn(schema);
				colvarMotaThem.ColumnName = "mota_them";
				colvarMotaThem.DataType = DbType.String;
				colvarMotaThem.MaxLength = 255;
				colvarMotaThem.AutoIncrement = false;
				colvarMotaThem.IsNullable = true;
				colvarMotaThem.IsPrimaryKey = false;
				colvarMotaThem.IsForeignKey = false;
				colvarMotaThem.IsReadOnly = false;
				colvarMotaThem.DefaultSetting = @"";
				colvarMotaThem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMotaThem);
				
				TableSchema.TableColumn colvarMaDoituongKcb = new TableSchema.TableColumn(schema);
				colvarMaDoituongKcb.ColumnName = "ma_doituong_kcb";
				colvarMaDoituongKcb.DataType = DbType.String;
				colvarMaDoituongKcb.MaxLength = 50;
				colvarMaDoituongKcb.AutoIncrement = false;
				colvarMaDoituongKcb.IsNullable = false;
				colvarMaDoituongKcb.IsPrimaryKey = false;
				colvarMaDoituongKcb.IsForeignKey = false;
				colvarMaDoituongKcb.IsReadOnly = false;
				colvarMaDoituongKcb.DefaultSetting = @"";
				colvarMaDoituongKcb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDoituongKcb);
				
				TableSchema.TableColumn colvarIdLoaidoituongKcb = new TableSchema.TableColumn(schema);
				colvarIdLoaidoituongKcb.ColumnName = "id_loaidoituong_kcb";
				colvarIdLoaidoituongKcb.DataType = DbType.Int32;
				colvarIdLoaidoituongKcb.MaxLength = 0;
				colvarIdLoaidoituongKcb.AutoIncrement = false;
				colvarIdLoaidoituongKcb.IsNullable = true;
				colvarIdLoaidoituongKcb.IsPrimaryKey = false;
				colvarIdLoaidoituongKcb.IsForeignKey = false;
				colvarIdLoaidoituongKcb.IsReadOnly = false;
				colvarIdLoaidoituongKcb.DefaultSetting = @"";
				colvarIdLoaidoituongKcb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdLoaidoituongKcb);
				
				TableSchema.TableColumn colvarTuTuc = new TableSchema.TableColumn(schema);
				colvarTuTuc.ColumnName = "tu_tuc";
				colvarTuTuc.DataType = DbType.Int32;
				colvarTuTuc.MaxLength = 0;
				colvarTuTuc.AutoIncrement = false;
				colvarTuTuc.IsNullable = true;
				colvarTuTuc.IsPrimaryKey = false;
				colvarTuTuc.IsForeignKey = false;
				colvarTuTuc.IsReadOnly = false;
				colvarTuTuc.DefaultSetting = @"";
				colvarTuTuc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTuTuc);
				
				TableSchema.TableColumn colvarKieuThue = new TableSchema.TableColumn(schema);
				colvarKieuThue.ColumnName = "kieu_thue";
				colvarKieuThue.DataType = DbType.String;
				colvarKieuThue.MaxLength = 50;
				colvarKieuThue.AutoIncrement = false;
				colvarKieuThue.IsNullable = true;
				colvarKieuThue.IsPrimaryKey = false;
				colvarKieuThue.IsForeignKey = false;
				colvarKieuThue.IsReadOnly = false;
				colvarKieuThue.DefaultSetting = @"";
				colvarKieuThue.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKieuThue);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("noitru_qhe_doituong_buonggiuong",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("IdBuong")]
		[Bindable(true)]
		public int IdBuong 
		{
			get { return GetColumnValue<int>(Columns.IdBuong); }
			set { SetColumnValue(Columns.IdBuong, value); }
		}
		  
		[XmlAttribute("IdGiuong")]
		[Bindable(true)]
		public int IdGiuong 
		{
			get { return GetColumnValue<int>(Columns.IdGiuong); }
			set { SetColumnValue(Columns.IdGiuong, value); }
		}
		  
		[XmlAttribute("DonGia")]
		[Bindable(true)]
		public decimal DonGia 
		{
			get { return GetColumnValue<decimal>(Columns.DonGia); }
			set { SetColumnValue(Columns.DonGia, value); }
		}
		  
		[XmlAttribute("PhuthuDungtuyen")]
		[Bindable(true)]
		public decimal PhuthuDungtuyen 
		{
			get { return GetColumnValue<decimal>(Columns.PhuthuDungtuyen); }
			set { SetColumnValue(Columns.PhuthuDungtuyen, value); }
		}
		  
		[XmlAttribute("PhuthuTraituyen")]
		[Bindable(true)]
		public decimal? PhuthuTraituyen 
		{
			get { return GetColumnValue<decimal?>(Columns.PhuthuTraituyen); }
			set { SetColumnValue(Columns.PhuthuTraituyen, value); }
		}
		  
		[XmlAttribute("MotaThem")]
		[Bindable(true)]
		public string MotaThem 
		{
			get { return GetColumnValue<string>(Columns.MotaThem); }
			set { SetColumnValue(Columns.MotaThem, value); }
		}
		  
		[XmlAttribute("MaDoituongKcb")]
		[Bindable(true)]
		public string MaDoituongKcb 
		{
			get { return GetColumnValue<string>(Columns.MaDoituongKcb); }
			set { SetColumnValue(Columns.MaDoituongKcb, value); }
		}
		  
		[XmlAttribute("IdLoaidoituongKcb")]
		[Bindable(true)]
		public int? IdLoaidoituongKcb 
		{
			get { return GetColumnValue<int?>(Columns.IdLoaidoituongKcb); }
			set { SetColumnValue(Columns.IdLoaidoituongKcb, value); }
		}
		  
		[XmlAttribute("TuTuc")]
		[Bindable(true)]
		public int? TuTuc 
		{
			get { return GetColumnValue<int?>(Columns.TuTuc); }
			set { SetColumnValue(Columns.TuTuc, value); }
		}
		  
		[XmlAttribute("KieuThue")]
		[Bindable(true)]
		public string KieuThue 
		{
			get { return GetColumnValue<string>(Columns.KieuThue); }
			set { SetColumnValue(Columns.KieuThue, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varIdBuong,int varIdGiuong,decimal varDonGia,decimal varPhuthuDungtuyen,decimal? varPhuthuTraituyen,string varMotaThem,string varMaDoituongKcb,int? varIdLoaidoituongKcb,int? varTuTuc,string varKieuThue)
		{
			NoitruQheDoituongBuonggiuong item = new NoitruQheDoituongBuonggiuong();
			
			item.IdBuong = varIdBuong;
			
			item.IdGiuong = varIdGiuong;
			
			item.DonGia = varDonGia;
			
			item.PhuthuDungtuyen = varPhuthuDungtuyen;
			
			item.PhuthuTraituyen = varPhuthuTraituyen;
			
			item.MotaThem = varMotaThem;
			
			item.MaDoituongKcb = varMaDoituongKcb;
			
			item.IdLoaidoituongKcb = varIdLoaidoituongKcb;
			
			item.TuTuc = varTuTuc;
			
			item.KieuThue = varKieuThue;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,int varIdBuong,int varIdGiuong,decimal varDonGia,decimal varPhuthuDungtuyen,decimal? varPhuthuTraituyen,string varMotaThem,string varMaDoituongKcb,int? varIdLoaidoituongKcb,int? varTuTuc,string varKieuThue)
		{
			NoitruQheDoituongBuonggiuong item = new NoitruQheDoituongBuonggiuong();
			
				item.Id = varId;
			
				item.IdBuong = varIdBuong;
			
				item.IdGiuong = varIdGiuong;
			
				item.DonGia = varDonGia;
			
				item.PhuthuDungtuyen = varPhuthuDungtuyen;
			
				item.PhuthuTraituyen = varPhuthuTraituyen;
			
				item.MotaThem = varMotaThem;
			
				item.MaDoituongKcb = varMaDoituongKcb;
			
				item.IdLoaidoituongKcb = varIdLoaidoituongKcb;
			
				item.TuTuc = varTuTuc;
			
				item.KieuThue = varKieuThue;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBuongColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdGiuongColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn DonGiaColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn PhuthuDungtuyenColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn PhuthuTraituyenColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn MotaThemColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDoituongKcbColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn IdLoaidoituongKcbColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn TuTucColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn KieuThueColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"id";
			 public static string IdBuong = @"id_buong";
			 public static string IdGiuong = @"id_giuong";
			 public static string DonGia = @"don_gia";
			 public static string PhuthuDungtuyen = @"phuthu_dungtuyen";
			 public static string PhuthuTraituyen = @"phuthu_traituyen";
			 public static string MotaThem = @"mota_them";
			 public static string MaDoituongKcb = @"ma_doituong_kcb";
			 public static string IdLoaidoituongKcb = @"id_loaidoituong_kcb";
			 public static string TuTuc = @"tu_tuc";
			 public static string KieuThue = @"kieu_thue";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
