using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
	/// <summary>
	/// Strongly-typed collection for the HoadonLog class.
	/// </summary>
    [Serializable]
	public partial class HoadonLogCollection : ActiveList<HoadonLog, HoadonLogCollection>
	{	   
		public HoadonLogCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>HoadonLogCollection</returns>
		public HoadonLogCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                HoadonLog o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the hoadon_logs table.
	/// </summary>
	[Serializable]
	public partial class HoadonLog : ActiveRecord<HoadonLog>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public HoadonLog()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public HoadonLog(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public HoadonLog(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public HoadonLog(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("hoadon_logs", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdHdonLog = new TableSchema.TableColumn(schema);
				colvarIdHdonLog.ColumnName = "id_hdon_log";
				colvarIdHdonLog.DataType = DbType.Int64;
				colvarIdHdonLog.MaxLength = 0;
				colvarIdHdonLog.AutoIncrement = true;
				colvarIdHdonLog.IsNullable = false;
				colvarIdHdonLog.IsPrimaryKey = true;
				colvarIdHdonLog.IsForeignKey = false;
				colvarIdHdonLog.IsReadOnly = false;
				colvarIdHdonLog.DefaultSetting = @"";
				colvarIdHdonLog.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdHdonLog);
				
				TableSchema.TableColumn colvarIdCapphat = new TableSchema.TableColumn(schema);
				colvarIdCapphat.ColumnName = "id_capphat";
				colvarIdCapphat.DataType = DbType.Int32;
				colvarIdCapphat.MaxLength = 0;
				colvarIdCapphat.AutoIncrement = false;
				colvarIdCapphat.IsNullable = false;
				colvarIdCapphat.IsPrimaryKey = false;
				colvarIdCapphat.IsForeignKey = false;
				colvarIdCapphat.IsReadOnly = false;
				colvarIdCapphat.DefaultSetting = @"";
				colvarIdCapphat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdCapphat);
				
				TableSchema.TableColumn colvarIdThanhtoan = new TableSchema.TableColumn(schema);
				colvarIdThanhtoan.ColumnName = "id_thanhtoan";
				colvarIdThanhtoan.DataType = DbType.Int64;
				colvarIdThanhtoan.MaxLength = 0;
				colvarIdThanhtoan.AutoIncrement = false;
				colvarIdThanhtoan.IsNullable = false;
				colvarIdThanhtoan.IsPrimaryKey = false;
				colvarIdThanhtoan.IsForeignKey = false;
				colvarIdThanhtoan.IsReadOnly = false;
				colvarIdThanhtoan.DefaultSetting = @"";
				colvarIdThanhtoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdThanhtoan);
				
				TableSchema.TableColumn colvarTongTien = new TableSchema.TableColumn(schema);
				colvarTongTien.ColumnName = "tong_tien";
				colvarTongTien.DataType = DbType.Decimal;
				colvarTongTien.MaxLength = 0;
				colvarTongTien.AutoIncrement = false;
				colvarTongTien.IsNullable = false;
				colvarTongTien.IsPrimaryKey = false;
				colvarTongTien.IsForeignKey = false;
				colvarTongTien.IsReadOnly = false;
				colvarTongTien.DefaultSetting = @"";
				colvarTongTien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTongTien);
				
				TableSchema.TableColumn colvarIdBenhnhan = new TableSchema.TableColumn(schema);
				colvarIdBenhnhan.ColumnName = "id_benhnhan";
				colvarIdBenhnhan.DataType = DbType.Int64;
				colvarIdBenhnhan.MaxLength = 0;
				colvarIdBenhnhan.AutoIncrement = false;
				colvarIdBenhnhan.IsNullable = false;
				colvarIdBenhnhan.IsPrimaryKey = false;
				colvarIdBenhnhan.IsForeignKey = false;
				colvarIdBenhnhan.IsReadOnly = false;
				colvarIdBenhnhan.DefaultSetting = @"";
				colvarIdBenhnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBenhnhan);
				
				TableSchema.TableColumn colvarMaLuotkham = new TableSchema.TableColumn(schema);
				colvarMaLuotkham.ColumnName = "ma_luotkham";
				colvarMaLuotkham.DataType = DbType.AnsiString;
				colvarMaLuotkham.MaxLength = 30;
				colvarMaLuotkham.AutoIncrement = false;
				colvarMaLuotkham.IsNullable = false;
				colvarMaLuotkham.IsPrimaryKey = false;
				colvarMaLuotkham.IsForeignKey = false;
				colvarMaLuotkham.IsReadOnly = false;
				colvarMaLuotkham.DefaultSetting = @"";
				colvarMaLuotkham.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLuotkham);
				
				TableSchema.TableColumn colvarMauHoadon = new TableSchema.TableColumn(schema);
				colvarMauHoadon.ColumnName = "mau_hoadon";
				colvarMauHoadon.DataType = DbType.String;
				colvarMauHoadon.MaxLength = 15;
				colvarMauHoadon.AutoIncrement = false;
				colvarMauHoadon.IsNullable = false;
				colvarMauHoadon.IsPrimaryKey = false;
				colvarMauHoadon.IsForeignKey = false;
				colvarMauHoadon.IsReadOnly = false;
				colvarMauHoadon.DefaultSetting = @"";
				colvarMauHoadon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMauHoadon);
				
				TableSchema.TableColumn colvarKiHieu = new TableSchema.TableColumn(schema);
				colvarKiHieu.ColumnName = "ki_hieu";
				colvarKiHieu.DataType = DbType.String;
				colvarKiHieu.MaxLength = 10;
				colvarKiHieu.AutoIncrement = false;
				colvarKiHieu.IsNullable = false;
				colvarKiHieu.IsPrimaryKey = false;
				colvarKiHieu.IsForeignKey = false;
				colvarKiHieu.IsReadOnly = false;
				colvarKiHieu.DefaultSetting = @"";
				colvarKiHieu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKiHieu);
				
				TableSchema.TableColumn colvarMaQuyen = new TableSchema.TableColumn(schema);
				colvarMaQuyen.ColumnName = "ma_quyen";
				colvarMaQuyen.DataType = DbType.String;
				colvarMaQuyen.MaxLength = 15;
				colvarMaQuyen.AutoIncrement = false;
				colvarMaQuyen.IsNullable = false;
				colvarMaQuyen.IsPrimaryKey = false;
				colvarMaQuyen.IsForeignKey = false;
				colvarMaQuyen.IsReadOnly = false;
				colvarMaQuyen.DefaultSetting = @"";
				colvarMaQuyen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaQuyen);
				
				TableSchema.TableColumn colvarSerie = new TableSchema.TableColumn(schema);
				colvarSerie.ColumnName = "serie";
				colvarSerie.DataType = DbType.String;
				colvarSerie.MaxLength = 10;
				colvarSerie.AutoIncrement = false;
				colvarSerie.IsNullable = false;
				colvarSerie.IsPrimaryKey = false;
				colvarSerie.IsForeignKey = false;
				colvarSerie.IsReadOnly = false;
				colvarSerie.DefaultSetting = @"";
				colvarSerie.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSerie);
				
				TableSchema.TableColumn colvarMaNhanvien = new TableSchema.TableColumn(schema);
				colvarMaNhanvien.ColumnName = "ma_nhanvien";
				colvarMaNhanvien.DataType = DbType.String;
				colvarMaNhanvien.MaxLength = 30;
				colvarMaNhanvien.AutoIncrement = false;
				colvarMaNhanvien.IsNullable = false;
				colvarMaNhanvien.IsPrimaryKey = false;
				colvarMaNhanvien.IsForeignKey = false;
				colvarMaNhanvien.IsReadOnly = false;
				colvarMaNhanvien.DefaultSetting = @"";
				colvarMaNhanvien.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaNhanvien);
				
				TableSchema.TableColumn colvarMaLydo = new TableSchema.TableColumn(schema);
				colvarMaLydo.ColumnName = "ma_lydo";
				colvarMaLydo.DataType = DbType.String;
				colvarMaLydo.MaxLength = 30;
				colvarMaLydo.AutoIncrement = false;
				colvarMaLydo.IsNullable = true;
				colvarMaLydo.IsPrimaryKey = false;
				colvarMaLydo.IsForeignKey = false;
				colvarMaLydo.IsReadOnly = false;
				colvarMaLydo.DefaultSetting = @"";
				colvarMaLydo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLydo);
				
				TableSchema.TableColumn colvarNgayIn = new TableSchema.TableColumn(schema);
				colvarNgayIn.ColumnName = "ngay_in";
				colvarNgayIn.DataType = DbType.DateTime;
				colvarNgayIn.MaxLength = 0;
				colvarNgayIn.AutoIncrement = false;
				colvarNgayIn.IsNullable = false;
				colvarNgayIn.IsPrimaryKey = false;
				colvarNgayIn.IsForeignKey = false;
				colvarNgayIn.IsReadOnly = false;
				colvarNgayIn.DefaultSetting = @"";
				colvarNgayIn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayIn);
				
				TableSchema.TableColumn colvarTrangThai = new TableSchema.TableColumn(schema);
				colvarTrangThai.ColumnName = "trang_thai";
				colvarTrangThai.DataType = DbType.Int16;
				colvarTrangThai.MaxLength = 0;
				colvarTrangThai.AutoIncrement = false;
				colvarTrangThai.IsNullable = false;
				colvarTrangThai.IsPrimaryKey = false;
				colvarTrangThai.IsForeignKey = false;
				colvarTrangThai.IsReadOnly = false;
				colvarTrangThai.DefaultSetting = @"";
				colvarTrangThai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThai);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("hoadon_logs",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdHdonLog")]
		[Bindable(true)]
		public long IdHdonLog 
		{
			get { return GetColumnValue<long>(Columns.IdHdonLog); }
			set { SetColumnValue(Columns.IdHdonLog, value); }
		}
		  
		[XmlAttribute("IdCapphat")]
		[Bindable(true)]
		public int IdCapphat 
		{
			get { return GetColumnValue<int>(Columns.IdCapphat); }
			set { SetColumnValue(Columns.IdCapphat, value); }
		}
		  
		[XmlAttribute("IdThanhtoan")]
		[Bindable(true)]
		public long IdThanhtoan 
		{
			get { return GetColumnValue<long>(Columns.IdThanhtoan); }
			set { SetColumnValue(Columns.IdThanhtoan, value); }
		}
		  
		[XmlAttribute("TongTien")]
		[Bindable(true)]
		public decimal TongTien 
		{
			get { return GetColumnValue<decimal>(Columns.TongTien); }
			set { SetColumnValue(Columns.TongTien, value); }
		}
		  
		[XmlAttribute("IdBenhnhan")]
		[Bindable(true)]
		public long IdBenhnhan 
		{
			get { return GetColumnValue<long>(Columns.IdBenhnhan); }
			set { SetColumnValue(Columns.IdBenhnhan, value); }
		}
		  
		[XmlAttribute("MaLuotkham")]
		[Bindable(true)]
		public string MaLuotkham 
		{
			get { return GetColumnValue<string>(Columns.MaLuotkham); }
			set { SetColumnValue(Columns.MaLuotkham, value); }
		}
		  
		[XmlAttribute("MauHoadon")]
		[Bindable(true)]
		public string MauHoadon 
		{
			get { return GetColumnValue<string>(Columns.MauHoadon); }
			set { SetColumnValue(Columns.MauHoadon, value); }
		}
		  
		[XmlAttribute("KiHieu")]
		[Bindable(true)]
		public string KiHieu 
		{
			get { return GetColumnValue<string>(Columns.KiHieu); }
			set { SetColumnValue(Columns.KiHieu, value); }
		}
		  
		[XmlAttribute("MaQuyen")]
		[Bindable(true)]
		public string MaQuyen 
		{
			get { return GetColumnValue<string>(Columns.MaQuyen); }
			set { SetColumnValue(Columns.MaQuyen, value); }
		}
		  
		[XmlAttribute("Serie")]
		[Bindable(true)]
		public string Serie 
		{
			get { return GetColumnValue<string>(Columns.Serie); }
			set { SetColumnValue(Columns.Serie, value); }
		}
		  
		[XmlAttribute("MaNhanvien")]
		[Bindable(true)]
		public string MaNhanvien 
		{
			get { return GetColumnValue<string>(Columns.MaNhanvien); }
			set { SetColumnValue(Columns.MaNhanvien, value); }
		}
		  
		[XmlAttribute("MaLydo")]
		[Bindable(true)]
		public string MaLydo 
		{
			get { return GetColumnValue<string>(Columns.MaLydo); }
			set { SetColumnValue(Columns.MaLydo, value); }
		}
		  
		[XmlAttribute("NgayIn")]
		[Bindable(true)]
		public DateTime NgayIn 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayIn); }
			set { SetColumnValue(Columns.NgayIn, value); }
		}
		  
		[XmlAttribute("TrangThai")]
		[Bindable(true)]
		public short TrangThai 
		{
			get { return GetColumnValue<short>(Columns.TrangThai); }
			set { SetColumnValue(Columns.TrangThai, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varIdCapphat,long varIdThanhtoan,decimal varTongTien,long varIdBenhnhan,string varMaLuotkham,string varMauHoadon,string varKiHieu,string varMaQuyen,string varSerie,string varMaNhanvien,string varMaLydo,DateTime varNgayIn,short varTrangThai)
		{
			HoadonLog item = new HoadonLog();
			
			item.IdCapphat = varIdCapphat;
			
			item.IdThanhtoan = varIdThanhtoan;
			
			item.TongTien = varTongTien;
			
			item.IdBenhnhan = varIdBenhnhan;
			
			item.MaLuotkham = varMaLuotkham;
			
			item.MauHoadon = varMauHoadon;
			
			item.KiHieu = varKiHieu;
			
			item.MaQuyen = varMaQuyen;
			
			item.Serie = varSerie;
			
			item.MaNhanvien = varMaNhanvien;
			
			item.MaLydo = varMaLydo;
			
			item.NgayIn = varNgayIn;
			
			item.TrangThai = varTrangThai;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(long varIdHdonLog,int varIdCapphat,long varIdThanhtoan,decimal varTongTien,long varIdBenhnhan,string varMaLuotkham,string varMauHoadon,string varKiHieu,string varMaQuyen,string varSerie,string varMaNhanvien,string varMaLydo,DateTime varNgayIn,short varTrangThai)
		{
			HoadonLog item = new HoadonLog();
			
				item.IdHdonLog = varIdHdonLog;
			
				item.IdCapphat = varIdCapphat;
			
				item.IdThanhtoan = varIdThanhtoan;
			
				item.TongTien = varTongTien;
			
				item.IdBenhnhan = varIdBenhnhan;
			
				item.MaLuotkham = varMaLuotkham;
			
				item.MauHoadon = varMauHoadon;
			
				item.KiHieu = varKiHieu;
			
				item.MaQuyen = varMaQuyen;
			
				item.Serie = varSerie;
			
				item.MaNhanvien = varMaNhanvien;
			
				item.MaLydo = varMaLydo;
			
				item.NgayIn = varNgayIn;
			
				item.TrangThai = varTrangThai;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdHdonLogColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdCapphatColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdThanhtoanColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn TongTienColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdBenhnhanColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLuotkhamColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn MauHoadonColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn KiHieuColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn MaQuyenColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn SerieColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn MaNhanvienColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLydoColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayInColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdHdonLog = @"id_hdon_log";
			 public static string IdCapphat = @"id_capphat";
			 public static string IdThanhtoan = @"id_thanhtoan";
			 public static string TongTien = @"tong_tien";
			 public static string IdBenhnhan = @"id_benhnhan";
			 public static string MaLuotkham = @"ma_luotkham";
			 public static string MauHoadon = @"mau_hoadon";
			 public static string KiHieu = @"ki_hieu";
			 public static string MaQuyen = @"ma_quyen";
			 public static string Serie = @"serie";
			 public static string MaNhanvien = @"ma_nhanvien";
			 public static string MaLydo = @"ma_lydo";
			 public static string NgayIn = @"ngay_in";
			 public static string TrangThai = @"trang_thai";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
