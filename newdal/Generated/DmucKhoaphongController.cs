using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VNS.HIS.DAL
{
    /// <summary>
    /// Controller class for dmuc_khoaphong
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class DmucKhoaphongController
    {
        // Preload our schema..
        DmucKhoaphong thisSchemaLoad = new DmucKhoaphong();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public DmucKhoaphongCollection FetchAll()
        {
            DmucKhoaphongCollection coll = new DmucKhoaphongCollection();
            Query qry = new Query(DmucKhoaphong.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public DmucKhoaphongCollection FetchByID(object IdKhoaphong)
        {
            DmucKhoaphongCollection coll = new DmucKhoaphongCollection().Where("id_khoaphong", IdKhoaphong).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public DmucKhoaphongCollection FetchByQuery(Query qry)
        {
            DmucKhoaphongCollection coll = new DmucKhoaphongCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object IdKhoaphong)
        {
            return (DmucKhoaphong.Delete(IdKhoaphong) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object IdKhoaphong)
        {
            return (DmucKhoaphong.Destroy(IdKhoaphong) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string MaKhoaphong,string TenKhoaphong,short? MaCha,short SttHthi,string MotaThem,decimal? DonGia,decimal? TamUng,string NoitruNgoaitru,byte? LaKhoacapcuu,string KieuKhoaphong,byte? PhongChucnang,string MaDonvitinh,string NguoiTao,DateTime? NgayTao,string NguoiSua,DateTime? NgaySua,string ChiDan,string MaPhongStt)
	    {
		    DmucKhoaphong item = new DmucKhoaphong();
		    
            item.MaKhoaphong = MaKhoaphong;
            
            item.TenKhoaphong = TenKhoaphong;
            
            item.MaCha = MaCha;
            
            item.SttHthi = SttHthi;
            
            item.MotaThem = MotaThem;
            
            item.DonGia = DonGia;
            
            item.TamUng = TamUng;
            
            item.NoitruNgoaitru = NoitruNgoaitru;
            
            item.LaKhoacapcuu = LaKhoacapcuu;
            
            item.KieuKhoaphong = KieuKhoaphong;
            
            item.PhongChucnang = PhongChucnang;
            
            item.MaDonvitinh = MaDonvitinh;
            
            item.NguoiTao = NguoiTao;
            
            item.NgayTao = NgayTao;
            
            item.NguoiSua = NguoiSua;
            
            item.NgaySua = NgaySua;
            
            item.ChiDan = ChiDan;
            
            item.MaPhongStt = MaPhongStt;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(short IdKhoaphong,string MaKhoaphong,string TenKhoaphong,short? MaCha,short SttHthi,string MotaThem,decimal? DonGia,decimal? TamUng,string NoitruNgoaitru,byte? LaKhoacapcuu,string KieuKhoaphong,byte? PhongChucnang,string MaDonvitinh,string NguoiTao,DateTime? NgayTao,string NguoiSua,DateTime? NgaySua,string ChiDan,string MaPhongStt)
	    {
		    DmucKhoaphong item = new DmucKhoaphong();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.IdKhoaphong = IdKhoaphong;
				
			item.MaKhoaphong = MaKhoaphong;
				
			item.TenKhoaphong = TenKhoaphong;
				
			item.MaCha = MaCha;
				
			item.SttHthi = SttHthi;
				
			item.MotaThem = MotaThem;
				
			item.DonGia = DonGia;
				
			item.TamUng = TamUng;
				
			item.NoitruNgoaitru = NoitruNgoaitru;
				
			item.LaKhoacapcuu = LaKhoacapcuu;
				
			item.KieuKhoaphong = KieuKhoaphong;
				
			item.PhongChucnang = PhongChucnang;
				
			item.MaDonvitinh = MaDonvitinh;
				
			item.NguoiTao = NguoiTao;
				
			item.NgayTao = NgayTao;
				
			item.NguoiSua = NguoiSua;
				
			item.NgaySua = NgaySua;
				
			item.ChiDan = ChiDan;
				
			item.MaPhongStt = MaPhongStt;
				
	        item.Save(UserName);
	    }
    }
}
