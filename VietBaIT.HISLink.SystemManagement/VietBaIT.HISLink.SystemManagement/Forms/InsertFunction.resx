<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdGetFuntion.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAjRJREFUOE/NkutL
        U3Ech/0DJIKwkrLWhQJLqLCCpEB7NawoKgrKCCSxG62LCWIp3p3lSnLNS23qLI8LsZKuZkEXITLDMIus
        4aU5beoph5vnHHg62yGjIPBN0A8+737P873wDQn5L94Nu4k/M+XGAqCn/xb+kTvBjHsExnpKqK86z5Qk
        jupiJqNCgu0cddYirl8xcq2iEHt5PjVleVRdzsVmzsFWmh3MpLzOVsSE2PJb/N+bkIcdyIM2lC+lKE4j
        8vsM/B2n8L5M5tuTBNIMiZqktrIgCP8cwSc6kDzVyK5LKD0FKN3pSG+P4XuVyNjTnYze19NeFv5LUFOe
        NymQRhqRvtqRB8wovYUqfJaJTgO+tgOMPdvN6AM9A8JqWk2hHE7cpXVgVecJdBCoLHtqVdiiwkXInzKQ
        Oo+rcFIQFh/G47m5nj77ch4bQ9m7Xa8JKi9m4h++q8ICsrsCpc+kwpkqfBLf62S8z/cgNm9m+PYG3MIq
        eq8upilrOvEbYzSBpfgM40ON6sKsKP0lyJ+zkN6l4Gs/iPdFAuKjLXiaYnHXR+OqiaTbHIGQHkZMdJQm
        KDWmMe6uD25bduYgdZ3G9+YQ3tZ9iC1bVTiOQccaXPZlOMt1dF2YiTV1DlFLdZqgJD8V0VnNUJuB3nt6
        Pjas5YMQRUfVElotC2gu1tGQPQ9HRniwcgA2n5iPbm6YJjDlpJCbdoTUo/tJStjGjk1xxK5byYrIRSyM
        mMXsGdP+mild6j//9ANRIMyAEkp2nAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="cmdSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAF1JREFUOE9jYGBg
        +E8BBmoFGnDgwAGwIcQAmDoQ3dDQANJHugEwF5NtAMzFowZgiQVi0wPWQAQJkoIx0gFMMzGuwOsCWMJC
        VgSNb3iKHYQGEONvbGpgSZkBxCAXAwD/qWXhL8vtiwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="cmdClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAHNJREFUOE+lk0sO
        ACEIQz06R+NmTkhsxgDFnxsW0NcGtbX6dNZWVdqDxgbSoRNxAIhIN0AFgXOoz2IDVBDqPHbxLqYJrAGX
        qiL+mP9vGOSVGHMBYKgTCH17GWR2TZ09zUPK2CyKgyy+C2lPkDsAFnuv3lR+qPfLy0DKJb8AAAAASUVO
        RK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA6aKBAOqoiQDqqowAz7OmAMxkMADicjgA43M5AOJyOQDjdDwA0mw4AON3QADje0cA5H1JAOWF
        VADlhVUA5oxgAPWXaADmj2MA9ZptAOeUawD1oHUA6JlxAPimfADonHcA+auDAOmifgD6sIsA+7aSAOqp
        iQDqqosA66yNAMqrmwDPs6UAz7SmANS5qwDUuq0A1ryvANe/swDexroA1sC1AN3HvAD8u5gA/r+dAP/D
        ogDTvK8A2MG0ANbBtQDcyL0A2MS5AOfZ0QDVva4A1sCzANfCtQDfy78A2si9ANvKwADs4twAxrChAMy2
        pwDi0cUA4NDFAGBGMgBjSTUAaE46ALijlAC3opMAvaiZAOPUyQD56d0A+u3jAOPXzgD46t8A+u3iAPns
        4QD67uQA+u/mAPrw5wD68ekA+fDoAPv07gD79O0A+vPsAPv17wD58+0A+/bxAPr18AD68+sA+/jzAPr3
        8gD7+PIA+/n1APv59AD8+/gA+/r3APz79wD7+vYA/Pz5APz9+gD8/fsA/P78AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZUE+Pz8/Pz8/Pz8/QGVlZWVCVDJE
        PDYpJyYlI0BlZWVlQ1lWUk9MSUhFRTNAZWVlZTpdMShQIQRGICAuQGVlZWU7Y2FgWFNXTUtKMEBlZWVl
        O2Q4N14tNFIkIj1AZWVlZTtkZGRiX1xVUU5HQGVlZWU7ZDg4ZDExWy81OUBlZWVlO2RkZGRkY2FgWlNA
        ZWVlZR8DHRoWEg8MCQYHBWVlZWUfLCsqHBsZFxUTEQplZWVlHx4eAgEYFBAODQsIZWVlZWVlZWVlZWVl
        ZWVlZWVlZWVlZWVlZWVlZWVlZWVlZf//7I///11bwAPf6MADo53AA9nYwAOvwcADrs/AAwsCwAPv78AD
        5+bAA+nkwAPe3sAD2tnAA9HL///Kzv//CwI=
</value>
  </data>
</root>